{
	"id": "6e194a92910e094b3f1da2004f7e828b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.29",
	"solcLongVersion": "0.8.29+commit.ab55807c",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Cardeiro_4_flattened.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\n\n\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n\n// File: @openzeppelin/contracts/interfaces/draft-IERC6093.sol\n\n\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/ERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\n\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n\n// File: @openzeppelin/contracts/access/Ownable.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: @openzeppelin/contracts/utils/ReentrancyGuard.sol\n\n\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n\n// File: contracts/Cardeiro_4.sol\n\n\npragma solidity ^0.8.24;\n\n\n//burn(uint256 amount)\n//burnFrom(address account, uint256 amount)\n\n//transferOwnership(address newOwner)\n\n\ncontract Cardeiro is ERC20, ERC20Burnable, Ownable, ReentrancyGuard {\n\n    // Treasury address to hold undistributed tokens\n    address public treasury;\n    \n    // Halving interval (in seconds)\n    uint256 public halvingInterval;\n    \n    // Timestamp of the last halving\n    uint256 public lastHalvingTime;\n    \n    // Halving rate (in percentage, e.g., 50 means 50%)\n    uint256 public halvingRate;\n\n    uint256 private constant MIN_HALVING_RATE = 5; // 5%\n\n    uint256 private constant MAX_HALVING_RATE = 20; // 20%\n\n    uint256 private constant DAYS_IN_YEAR = 365;\n\n    uint256 private constant SECONDS_PER_DAY = 86400; // 24 * 60 * 60\n\n    uint256 private constant DEFAULT_HALVING_INTERVAL = (DAYS_IN_YEAR * 2) * SECONDS_PER_DAY; // 63072000\n    \n    // Margem de segurança para manipulação de timestamp (30 minutos)\n    uint256 private constant SECURITY_MARGIN = 1800;\n    \n    // Event emitted when halving occurs\n    event Halving(uint256 burnedAmount, uint256 timestamp);\n\n    modifier autoHalving() {\n        if (isHalvingDue()) {\n            executeHalving();\n        }\n        _;\n    }\n    \n    constructor(\n        uint256 initialSupply, \n        address _treasury,\n        uint256 _halvingInterval,\n        uint256 _halvingRate\n    ) ERC20(\"Cardeiro\", \"CDT\") Ownable(msg.sender) {\n        require(_halvingRate <= 100, \"Halving rate cannot exceed 100%\");\n        require(_halvingInterval >= SECONDS_PER_DAY, \"Interval too short\");\n        require(_halvingInterval <= DEFAULT_HALVING_INTERVAL * 2, \"Interval too long\");\n        \n        _mint(msg.sender, initialSupply);\n        treasury = _treasury;\n        halvingInterval = _halvingInterval;\n        halvingRate = _halvingRate;\n        lastHalvingTime = block.timestamp;\n    }\n\n    // Function to check if halving is due\n    function isHalvingDue() public view returns (bool) {\n        return block.timestamp >= (lastHalvingTime + halvingInterval + SECURITY_MARGIN);\n    }\n    \n    // Function to execute halving if the interval has passed\n    function executeHalving() public nonReentrant {\n        require(isHalvingDue(), \"Halving interval not reached\");\n        \n        uint256 treasuryBalance = balanceOf(treasury);\n        uint256 burnAmount = (treasuryBalance * halvingRate) / 100;\n        \n        if (burnAmount > 0) {\n            // Burn tokens from treasury\n            _burn(treasury, burnAmount);\n            \n            // Update last halving time\n            lastHalvingTime = block.timestamp - SECURITY_MARGIN;\n            \n            // Emit halving event\n            emit Halving(burnAmount, block.timestamp);\n        }\n    }\n    \n    // Function to update halving parameters (only owner)\n    function updateHalvingParams(uint256 _halvingInterval, uint256 _halvingRate) public onlyOwner {\n        require(_halvingRate >= MIN_HALVING_RATE, \"Halving rate too low\");\n        require(_halvingRate <= MAX_HALVING_RATE, \"Halving rate too high\");\n        halvingInterval = _halvingInterval;\n        halvingRate = _halvingRate;\n    }\n    \n    // Function to update treasury address (only owner)\n    function updateTreasury(address _treasury) public onlyOwner {\n        treasury = _treasury;\n    }\n\n    function getExpectedBurn(uint256 rate) public view returns (uint256) {\n        uint256 treasuryBalance = balanceOf(treasury);\n        return (treasuryBalance * rate) / 100;\n    }\n\n    function transfer(address to, uint256 amount) \n        public \n        virtual \n        override \n        autoHalving \n        returns (bool) \n    {\n        return super.transfer(to, amount);\n    }\n\n    function transferFrom(address from, address to, uint256 amount)\n        public\n        virtual\n        override\n        autoHalving\n        returns (bool)\n    {\n        return super.transferFrom(from, to, amount);\n    }\n\n    fallback() external payable {\n        revert(\"Token does not accept ETH\");\n    }\n    \n    receive() external payable {\n        revert(\"Token does not accept ETH\");\n    }\n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/Cardeiro_4_flattened.sol": {
				"Cardeiro": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "initialSupply",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_treasury",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_halvingInterval",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_halvingRate",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "burnedAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "Halving",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "executeHalving",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "rate",
									"type": "uint256"
								}
							],
							"name": "getExpectedBurn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "halvingInterval",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "halvingRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isHalvingDue",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastHalvingTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "treasury",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_halvingInterval",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_halvingRate",
									"type": "uint256"
								}
							],
							"name": "updateHalvingParams",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_treasury",
									"type": "address"
								}
							],
							"name": "updateTreasury",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Cardeiro_4_flattened.sol\":29600:33567  contract Cardeiro is ERC20, ERC20Burnable, Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Cardeiro_4_flattened.sol\":30711:31345  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Cardeiro_4_flattened.sol\":30885:30895  msg.sender */\n  caller\n    /* \"contracts/Cardeiro_4_flattened.sol\":12502:12615  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x08\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xc0, 0x436172646569726f)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xea, 0x10d115)\n  dup2\n  mstore\n  pop\n    /* \"contracts/Cardeiro_4_flattened.sol\":12576:12581  name_ */\n  dup2\n    /* \"contracts/Cardeiro_4_flattened.sol\":12568:12573  _name */\n  0x03\n    /* \"contracts/Cardeiro_4_flattened.sol\":12568:12581  _name = name_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  pop\n    /* \"contracts/Cardeiro_4_flattened.sol\":12591:12598  _symbol */\n  0x04\n    /* \"contracts/Cardeiro_4_flattened.sol\":12591:12608  _symbol = symbol_ */\n  tag_11\n    /* \"contracts/Cardeiro_4_flattened.sol\":12601:12608  symbol_ */\n  dup3\n    /* \"contracts/Cardeiro_4_flattened.sol\":12591:12598  _symbol */\n  dup3\n    /* \"contracts/Cardeiro_4_flattened.sol\":12591:12608  _symbol = symbol_ */\n  tag_10\n  jump\t// in\ntag_11:\n  pop\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/Cardeiro_4_flattened.sol\":24185:24211  initialOwner == address(0) */\n  dup2\n  and\n    /* \"contracts/Cardeiro_4_flattened.sol\":24181:24276  if (initialOwner == address(0)) {... */\n  tag_13\n  jumpi\n    /* \"contracts/Cardeiro_4_flattened.sol\":24234:24265  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"contracts/Cardeiro_4_flattened.sol\":24262:24263  0 */\n  0x00\n    /* \"contracts/Cardeiro_4_flattened.sol\":24234:24265  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3438:3489   */\n  mstore\n    /* \"#utility.yul\":3411:3429   */\n  0x24\n  add\n    /* \"contracts/Cardeiro_4_flattened.sol\":24234:24265  OwnableInvalidOwner(address(0)) */\ntag_14:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/Cardeiro_4_flattened.sol\":24181:24276  if (initialOwner == address(0)) {... */\ntag_13:\n    /* \"contracts/Cardeiro_4_flattened.sol\":24285:24317  _transferOwnership(initialOwner) */\n  tag_16\n    /* \"contracts/Cardeiro_4_flattened.sol\":24304:24316  initialOwner */\n  dup2\n    /* \"contracts/Cardeiro_4_flattened.sol\":24285:24303  _transferOwnership */\n  tag_17\n    /* \"contracts/Cardeiro_4_flattened.sol\":24285:24317  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_16:\n  pop\n    /* \"contracts/Cardeiro_4_flattened.sol\":27901:27902  1 */\n  0x01\n    /* \"contracts/Cardeiro_4_flattened.sol\":28105:28112  _status */\n  0x06\n    /* \"contracts/Cardeiro_4_flattened.sol\":28105:28126  _status = NOT_ENTERED */\n  sstore\n    /* \"contracts/Cardeiro_4_flattened.sol\":30931:30934  100 */\n  0x64\n    /* \"contracts/Cardeiro_4_flattened.sol\":30915:30934  _halvingRate <= 100 */\n  dup2\n  gt\n  iszero\n    /* \"contracts/Cardeiro_4_flattened.sol\":30907:30970  require(_halvingRate <= 100, \"Halving rate cannot exceed 100%\") */\n  tag_20\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":3702:3704   */\n  0x20\n    /* \"contracts/Cardeiro_4_flattened.sol\":30907:30970  require(_halvingRate <= 100, \"Halving rate cannot exceed 100%\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3684:3705   */\n  mstore\n    /* \"#utility.yul\":3741:3743   */\n  0x1f\n    /* \"#utility.yul\":3721:3739   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":3714:3744   */\n  mstore\n    /* \"#utility.yul\":3780:3813   */\n  0x48616c76696e6720726174652063616e6e6f7420657863656564203130302500\n    /* \"#utility.yul\":3760:3778   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":3753:3814   */\n  mstore\n    /* \"#utility.yul\":3831:3849   */\n  0x64\n  add\n    /* \"contracts/Cardeiro_4_flattened.sol\":30907:30970  require(_halvingRate <= 100, \"Halving rate cannot exceed 100%\") */\n  tag_14\n    /* \"#utility.yul\":3500:3855   */\n  jump\n    /* \"contracts/Cardeiro_4_flattened.sol\":30907:30970  require(_halvingRate <= 100, \"Halving rate cannot exceed 100%\") */\ntag_20:\n    /* \"contracts/Cardeiro_4_flattened.sol\":30218:30223  86400 */\n  0x015180\n    /* \"contracts/Cardeiro_4_flattened.sol\":30988:31004  _halvingInterval */\n  dup3\n    /* \"contracts/Cardeiro_4_flattened.sol\":30988:31023  _halvingInterval >= SECONDS_PER_DAY */\n  lt\n  iszero\n    /* \"contracts/Cardeiro_4_flattened.sol\":30980:31046  require(_halvingInterval >= SECONDS_PER_DAY, \"Interval too short\") */\n  tag_23\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":4062:4064   */\n  0x20\n    /* \"contracts/Cardeiro_4_flattened.sol\":30980:31046  require(_halvingInterval >= SECONDS_PER_DAY, \"Interval too short\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4044:4065   */\n  mstore\n    /* \"#utility.yul\":4101:4103   */\n  0x12\n    /* \"#utility.yul\":4081:4099   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":4074:4104   */\n  mstore\n  shl(0x72, 0x125b9d195c9d985b081d1bdbc81cda1bdc9d)\n    /* \"#utility.yul\":4120:4138   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":4113:4161   */\n  mstore\n    /* \"#utility.yul\":4178:4196   */\n  0x64\n  add\n    /* \"contracts/Cardeiro_4_flattened.sol\":30980:31046  require(_halvingInterval >= SECONDS_PER_DAY, \"Interval too short\") */\n  tag_14\n    /* \"#utility.yul\":3860:4202   */\n  jump\n    /* \"contracts/Cardeiro_4_flattened.sol\":30980:31046  require(_halvingInterval >= SECONDS_PER_DAY, \"Interval too short\") */\ntag_23:\n    /* \"contracts/Cardeiro_4_flattened.sol\":30218:30223  86400 */\n  0x015180\n    /* \"contracts/Cardeiro_4_flattened.sol\":30299:30315  DAYS_IN_YEAR * 2 */\n  tag_26\n    /* \"contracts/Cardeiro_4_flattened.sol\":30165:30168  365 */\n  0x016d\n    /* \"contracts/Cardeiro_4_flattened.sol\":30314:30315  2 */\n  0x02\n    /* \"contracts/Cardeiro_4_flattened.sol\":30299:30315  DAYS_IN_YEAR * 2 */\n  tag_27\n  jump\t// in\ntag_26:\n    /* \"contracts/Cardeiro_4_flattened.sol\":30298:30334  (DAYS_IN_YEAR * 2) * SECONDS_PER_DAY */\n  tag_28\n  swap2\n  swap1\n  tag_27\n  jump\t// in\ntag_28:\n    /* \"contracts/Cardeiro_4_flattened.sol\":31084:31112  DEFAULT_HALVING_INTERVAL * 2 */\n  tag_29\n  swap1\n    /* \"contracts/Cardeiro_4_flattened.sol\":31111:31112  2 */\n  0x02\n    /* \"contracts/Cardeiro_4_flattened.sol\":31084:31112  DEFAULT_HALVING_INTERVAL * 2 */\n  tag_27\n  jump\t// in\ntag_29:\n    /* \"contracts/Cardeiro_4_flattened.sol\":31064:31080  _halvingInterval */\n  dup3\n    /* \"contracts/Cardeiro_4_flattened.sol\":31064:31112  _halvingInterval <= DEFAULT_HALVING_INTERVAL * 2 */\n  gt\n  iszero\n    /* \"contracts/Cardeiro_4_flattened.sol\":31056:31134  require(_halvingInterval <= DEFAULT_HALVING_INTERVAL * 2, \"Interval too long\") */\n  tag_30\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":4714:4716   */\n  0x20\n    /* \"contracts/Cardeiro_4_flattened.sol\":31056:31134  require(_halvingInterval <= DEFAULT_HALVING_INTERVAL * 2, \"Interval too long\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4696:4717   */\n  mstore\n    /* \"#utility.yul\":4753:4755   */\n  0x11\n    /* \"#utility.yul\":4733:4751   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":4726:4756   */\n  mstore\n  shl(0x78, 0x496e74657276616c20746f6f206c6f6e67)\n    /* \"#utility.yul\":4772:4790   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":4765:4812   */\n  mstore\n    /* \"#utility.yul\":4829:4847   */\n  0x64\n  add\n    /* \"contracts/Cardeiro_4_flattened.sol\":31056:31134  require(_halvingInterval <= DEFAULT_HALVING_INTERVAL * 2, \"Interval too long\") */\n  tag_14\n    /* \"#utility.yul\":4512:4853   */\n  jump\n    /* \"contracts/Cardeiro_4_flattened.sol\":31056:31134  require(_halvingInterval <= DEFAULT_HALVING_INTERVAL * 2, \"Interval too long\") */\ntag_30:\n    /* \"contracts/Cardeiro_4_flattened.sol\":31153:31185  _mint(msg.sender, initialSupply) */\n  tag_33\n    /* \"contracts/Cardeiro_4_flattened.sol\":31159:31169  msg.sender */\n  caller\n    /* \"contracts/Cardeiro_4_flattened.sol\":31171:31184  initialSupply */\n  dup6\n    /* \"contracts/Cardeiro_4_flattened.sol\":31153:31158  _mint */\n  tag_34\n    /* \"contracts/Cardeiro_4_flattened.sol\":31153:31185  _mint(msg.sender, initialSupply) */\n  jump\t// in\ntag_33:\n    /* \"contracts/Cardeiro_4_flattened.sol\":31195:31203  treasury */\n  0x07\n    /* \"contracts/Cardeiro_4_flattened.sol\":31195:31215  treasury = _treasury */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap5\n  swap1\n  swap5\n  and\n  swap4\n  swap1\n  swap4\n  or\n  swap1\n  swap3\n  sstore\n    /* \"contracts/Cardeiro_4_flattened.sol\":31225:31240  halvingInterval */\n  0x08\n    /* \"contracts/Cardeiro_4_flattened.sol\":31225:31259  halvingInterval = _halvingInterval */\n  sstore\n    /* \"contracts/Cardeiro_4_flattened.sol\":31269:31280  halvingRate */\n  0x0a\n    /* \"contracts/Cardeiro_4_flattened.sol\":31269:31295  halvingRate = _halvingRate */\n  sstore\n  pop\n    /* \"contracts/Cardeiro_4_flattened.sol\":31323:31338  block.timestamp */\n  timestamp\n    /* \"contracts/Cardeiro_4_flattened.sol\":31305:31320  lastHalvingTime */\n  0x09\n    /* \"contracts/Cardeiro_4_flattened.sol\":31305:31338  lastHalvingTime = block.timestamp */\n  sstore\n    /* \"contracts/Cardeiro_4_flattened.sol\":29600:33567  contract Cardeiro is ERC20, ERC20Burnable, Ownable, ReentrancyGuard {... */\n  jump(tag_60)\n    /* \"contracts/Cardeiro_4_flattened.sol\":25824:26011  function _transferOwnership(address newOwner) internal virtual {... */\ntag_17:\n    /* \"contracts/Cardeiro_4_flattened.sol\":25916:25922  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/Cardeiro_4_flattened.sol\":25932:25949  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"contracts/Cardeiro_4_flattened.sol\":25964:26004  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"contracts/Cardeiro_4_flattened.sol\":25916:25922  _owner */\n  swap2\n  and\n  swap2\n    /* \"contracts/Cardeiro_4_flattened.sol\":25932:25949  _owner = newOwner */\n  swap1\n    /* \"contracts/Cardeiro_4_flattened.sol\":25916:25922  _owner */\n  dup3\n  swap1\n    /* \"contracts/Cardeiro_4_flattened.sol\":25964:26004  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"contracts/Cardeiro_4_flattened.sol\":25897:25913  address oldOwner */\n  0x00\n  swap1\n    /* \"contracts/Cardeiro_4_flattened.sol\":25964:26004  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"contracts/Cardeiro_4_flattened.sol\":25887:26011  {... */\n  pop\n    /* \"contracts/Cardeiro_4_flattened.sol\":25824:26011  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/Cardeiro_4_flattened.sol\":18359:18567  function _mint(address account, uint256 value) internal {... */\ntag_34:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/Cardeiro_4_flattened.sol\":18429:18450  account == address(0) */\n  dup3\n  and\n    /* \"contracts/Cardeiro_4_flattened.sol\":18425:18516  if (account == address(0)) {... */\n  tag_38\n  jumpi\n    /* \"contracts/Cardeiro_4_flattened.sol\":18473:18505  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0xec442f05)\n  dup2\n  mstore\n    /* \"contracts/Cardeiro_4_flattened.sol\":18502:18503  0 */\n  0x00\n    /* \"contracts/Cardeiro_4_flattened.sol\":18473:18505  ERC20InvalidReceiver(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3438:3489   */\n  mstore\n    /* \"#utility.yul\":3411:3429   */\n  0x24\n  add\n    /* \"contracts/Cardeiro_4_flattened.sol\":18473:18505  ERC20InvalidReceiver(address(0)) */\n  tag_14\n    /* \"#utility.yul\":3292:3495   */\n  jump\n    /* \"contracts/Cardeiro_4_flattened.sol\":18425:18516  if (account == address(0)) {... */\ntag_38:\n    /* \"contracts/Cardeiro_4_flattened.sol\":18525:18560  _update(address(0), account, value) */\n  tag_40\n    /* \"contracts/Cardeiro_4_flattened.sol\":18541:18542  0 */\n  0x00\n    /* \"contracts/Cardeiro_4_flattened.sol\":18545:18552  account */\n  dup4\n    /* \"contracts/Cardeiro_4_flattened.sol\":18554:18559  value */\n  dup4\n    /* \"contracts/Cardeiro_4_flattened.sol\":18525:18532  _update */\n  tag_41\n    /* \"contracts/Cardeiro_4_flattened.sol\":18525:18560  _update(address(0), account, value) */\n  jump\t// in\ntag_40:\n    /* \"contracts/Cardeiro_4_flattened.sol\":18359:18567  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Cardeiro_4_flattened.sol\":16909:18016  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_41:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/Cardeiro_4_flattened.sol\":16998:17016  from == address(0) */\n  dup4\n  and\n    /* \"contracts/Cardeiro_4_flattened.sol\":16994:17534  if (from == address(0)) {... */\n  tag_43\n  jumpi\n    /* \"contracts/Cardeiro_4_flattened.sol\":17150:17155  value */\n  dup1\n    /* \"contracts/Cardeiro_4_flattened.sol\":17134:17146  _totalSupply */\n  0x02\n  0x00\n    /* \"contracts/Cardeiro_4_flattened.sol\":17134:17155  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_44\n  swap2\n  swap1\n  tag_45\n  jump\t// in\ntag_44:\n  swap1\n  swap2\n  sstore\n  pop\n    /* \"contracts/Cardeiro_4_flattened.sol\":16994:17534  if (from == address(0)) {... */\n  tag_46\n  swap1\n  pop\n  jump\ntag_43:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/Cardeiro_4_flattened.sol\":17208:17223  _balances[from] */\n  dup4\n  and\n    /* \"contracts/Cardeiro_4_flattened.sol\":17186:17205  uint256 fromBalance */\n  0x00\n    /* \"contracts/Cardeiro_4_flattened.sol\":17208:17223  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"contracts/Cardeiro_4_flattened.sol\":17241:17260  fromBalance < value */\n  dup2\n  dup2\n  lt\n    /* \"contracts/Cardeiro_4_flattened.sol\":17237:17352  if (fromBalance < value) {... */\n  iszero\n  tag_47\n  jumpi\n    /* \"contracts/Cardeiro_4_flattened.sol\":17287:17337  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  shl(0xe2, 0x391434e3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":5208:5240   */\n  dup6\n  and\n    /* \"contracts/Cardeiro_4_flattened.sol\":17287:17337  ERC20InsufficientBalance(from, fromBalance, value) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":5190:5241   */\n  mstore\n    /* \"#utility.yul\":5257:5275   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":5250:5284   */\n  dup3\n  swap1\n  mstore\n    /* \"#utility.yul\":5300:5318   */\n  0x44\n  dup2\n  add\n    /* \"#utility.yul\":5293:5327   */\n  dup4\n  swap1\n  mstore\n    /* \"#utility.yul\":5163:5181   */\n  0x64\n  add\n    /* \"contracts/Cardeiro_4_flattened.sol\":17287:17337  ERC20InsufficientBalance(from, fromBalance, value) */\n  tag_14\n    /* \"#utility.yul\":4988:5333   */\n  jump\n    /* \"contracts/Cardeiro_4_flattened.sol\":17237:17352  if (fromBalance < value) {... */\ntag_47:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/Cardeiro_4_flattened.sol\":17472:17487  _balances[from] */\n  dup5\n  and\n    /* \"contracts/Cardeiro_4_flattened.sol\":17472:17481  _balances */\n  0x00\n    /* \"contracts/Cardeiro_4_flattened.sol\":17472:17487  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"contracts/Cardeiro_4_flattened.sol\":17490:17509  fromBalance - value */\n  swap1\n  dup3\n  swap1\n  sub\n    /* \"contracts/Cardeiro_4_flattened.sol\":17472:17509  _balances[from] = fromBalance - value */\n  swap1\n  sstore\n    /* \"contracts/Cardeiro_4_flattened.sol\":16994:17534  if (from == address(0)) {... */\ntag_46:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/Cardeiro_4_flattened.sol\":17548:17564  to == address(0) */\n  dup3\n  and\n    /* \"contracts/Cardeiro_4_flattened.sol\":17544:17969  if (to == address(0)) {... */\n  tag_50\n  jumpi\n    /* \"contracts/Cardeiro_4_flattened.sol\":17711:17723  _totalSupply */\n  0x02\n    /* \"contracts/Cardeiro_4_flattened.sol\":17711:17732  _totalSupply -= value */\n  dup1\n  sload\n  dup3\n  swap1\n  sub\n  swap1\n  sstore\n    /* \"contracts/Cardeiro_4_flattened.sol\":17544:17969  if (to == address(0)) {... */\n  jump(tag_51)\ntag_50:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/Cardeiro_4_flattened.sol\":17922:17935  _balances[to] */\n  dup3\n  and\n    /* \"contracts/Cardeiro_4_flattened.sol\":17922:17931  _balances */\n  0x00\n    /* \"contracts/Cardeiro_4_flattened.sol\":17922:17935  _balances[to] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"contracts/Cardeiro_4_flattened.sol\":17922:17944  _balances[to] += value */\n  dup1\n  sload\n  dup3\n  add\n  swap1\n  sstore\n    /* \"contracts/Cardeiro_4_flattened.sol\":17544:17969  if (to == address(0)) {... */\ntag_51:\n    /* \"contracts/Cardeiro_4_flattened.sol\":17999:18001  to */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/Cardeiro_4_flattened.sol\":17984:18009  Transfer(from, to, value) */\n  and\n    /* \"contracts/Cardeiro_4_flattened.sol\":17993:17997  from */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/Cardeiro_4_flattened.sol\":17984:18009  Transfer(from, to, value) */\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"contracts/Cardeiro_4_flattened.sol\":18003:18008  value */\n  dup4\n    /* \"contracts/Cardeiro_4_flattened.sol\":17984:18009  Transfer(from, to, value) */\n  mload(0x40)\n  tag_52\n  swap2\n    /* \"#utility.yul\":5484:5509   */\n  dup2\n  mstore\n    /* \"#utility.yul\":5472:5474   */\n  0x20\n    /* \"#utility.yul\":5457:5475   */\n  add\n  swap1\n    /* \"#utility.yul\":5338:5515   */\n  jump\n    /* \"contracts/Cardeiro_4_flattened.sol\":17984:18009  Transfer(from, to, value) */\ntag_52:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/Cardeiro_4_flattened.sol\":16909:18016  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:646   */\ntag_3:\n    /* \"#utility.yul\":111:117   */\n  0x00\n    /* \"#utility.yul\":119:125   */\n  0x00\n    /* \"#utility.yul\":127:133   */\n  0x00\n    /* \"#utility.yul\":135:141   */\n  0x00\n    /* \"#utility.yul\":188:191   */\n  0x80\n    /* \"#utility.yul\":176:185   */\n  dup6\n    /* \"#utility.yul\":167:174   */\n  dup8\n    /* \"#utility.yul\":163:186   */\n  sub\n    /* \"#utility.yul\":159:192   */\n  slt\n    /* \"#utility.yul\":156:209   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":205:206   */\n  0x00\n    /* \"#utility.yul\":202:203   */\n  0x00\n    /* \"#utility.yul\":195:207   */\n  revert\n    /* \"#utility.yul\":156:209   */\ntag_62:\n    /* \"#utility.yul\":250:266   */\n  dup5\n  mload\n    /* \"#utility.yul\":335:337   */\n  0x20\n    /* \"#utility.yul\":320:338   */\n  dup7\n  add\n    /* \"#utility.yul\":314:339   */\n  mload\n    /* \"#utility.yul\":250:266   */\n  swap1\n  swap5\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":370:403   */\n  dup2\n  and\n    /* \"#utility.yul\":358:404   */\n  dup2\n  eq\n    /* \"#utility.yul\":348:422   */\n  tag_63\n  jumpi\n    /* \"#utility.yul\":418:419   */\n  0x00\n    /* \"#utility.yul\":415:416   */\n  0x00\n    /* \"#utility.yul\":408:420   */\n  revert\n    /* \"#utility.yul\":348:422   */\ntag_63:\n    /* \"#utility.yul\":514:516   */\n  0x40\n    /* \"#utility.yul\":499:517   */\n  dup7\n  add\n    /* \"#utility.yul\":493:518   */\n  mload\n    /* \"#utility.yul\":610:612   */\n  0x60\n    /* \"#utility.yul\":595:613   */\n  swap1\n  swap7\n  add\n    /* \"#utility.yul\":589:614   */\n  mload\n    /* \"#utility.yul\":14:646   */\n  swap5\n  swap8\n    /* \"#utility.yul\":441:448   */\n  swap1\n  swap7\n  pop\n    /* \"#utility.yul\":14:646   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":651:778   */\ntag_54:\n    /* \"#utility.yul\":712:722   */\n  0x4e487b71\n    /* \"#utility.yul\":707:710   */\n  0xe0\n    /* \"#utility.yul\":703:723   */\n  shl\n    /* \"#utility.yul\":700:701   */\n  0x00\n    /* \"#utility.yul\":693:724   */\n  mstore\n    /* \"#utility.yul\":743:747   */\n  0x41\n    /* \"#utility.yul\":740:741   */\n  0x04\n    /* \"#utility.yul\":733:748   */\n  mstore\n    /* \"#utility.yul\":767:771   */\n  0x24\n    /* \"#utility.yul\":764:765   */\n  0x00\n    /* \"#utility.yul\":757:772   */\n  revert\n    /* \"#utility.yul\":783:1163   */\ntag_55:\n    /* \"#utility.yul\":862:863   */\n  0x01\n    /* \"#utility.yul\":858:870   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":905:917   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":926:987   */\n  tag_66\n  jumpi\n    /* \"#utility.yul\":980:984   */\n  0x7f\n    /* \"#utility.yul\":972:978   */\n  dup3\n    /* \"#utility.yul\":968:985   */\n  and\n    /* \"#utility.yul\":958:985   */\n  swap2\n  pop\n    /* \"#utility.yul\":926:987   */\ntag_66:\n    /* \"#utility.yul\":1033:1035   */\n  0x20\n    /* \"#utility.yul\":1025:1031   */\n  dup3\n    /* \"#utility.yul\":1022:1036   */\n  lt\n    /* \"#utility.yul\":1002:1020   */\n  dup2\n    /* \"#utility.yul\":999:1037   */\n  sub\n    /* \"#utility.yul\":996:1157   */\n  tag_67\n  jumpi\n    /* \"#utility.yul\":1079:1089   */\n  0x4e487b71\n    /* \"#utility.yul\":1074:1077   */\n  0xe0\n    /* \"#utility.yul\":1070:1090   */\n  shl\n    /* \"#utility.yul\":1067:1068   */\n  0x00\n    /* \"#utility.yul\":1060:1091   */\n  mstore\n    /* \"#utility.yul\":1114:1118   */\n  0x22\n    /* \"#utility.yul\":1111:1112   */\n  0x04\n    /* \"#utility.yul\":1104:1119   */\n  mstore\n    /* \"#utility.yul\":1142:1146   */\n  0x24\n    /* \"#utility.yul\":1139:1140   */\n  0x00\n    /* \"#utility.yul\":1132:1147   */\n  revert\n    /* \"#utility.yul\":996:1157   */\ntag_67:\n  pop\n    /* \"#utility.yul\":783:1163   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1294:1812   */\ntag_57:\n    /* \"#utility.yul\":1396:1398   */\n  0x1f\n    /* \"#utility.yul\":1391:1394   */\n  dup3\n    /* \"#utility.yul\":1388:1399   */\n  gt\n    /* \"#utility.yul\":1385:1806   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":1432:1437   */\n  dup1\n    /* \"#utility.yul\":1429:1430   */\n  0x00\n    /* \"#utility.yul\":1422:1438   */\n  mstore\n    /* \"#utility.yul\":1476:1480   */\n  0x20\n    /* \"#utility.yul\":1473:1474   */\n  0x00\n    /* \"#utility.yul\":1463:1481   */\n  keccak256\n    /* \"#utility.yul\":1546:1548   */\n  0x1f\n    /* \"#utility.yul\":1534:1544   */\n  dup5\n    /* \"#utility.yul\":1530:1549   */\n  add\n    /* \"#utility.yul\":1527:1528   */\n  0x05\n    /* \"#utility.yul\":1523:1550   */\n  shr\n    /* \"#utility.yul\":1517:1521   */\n  dup2\n    /* \"#utility.yul\":1513:1551   */\n  add\n    /* \"#utility.yul\":1582:1586   */\n  0x20\n    /* \"#utility.yul\":1570:1580   */\n  dup6\n    /* \"#utility.yul\":1567:1587   */\n  lt\n    /* \"#utility.yul\":1564:1611   */\n  iszero\n  tag_71\n  jumpi\n  pop\n    /* \"#utility.yul\":1605:1609   */\n  dup1\n    /* \"#utility.yul\":1564:1611   */\ntag_71:\n    /* \"#utility.yul\":1660:1662   */\n  0x1f\n    /* \"#utility.yul\":1655:1658   */\n  dup5\n    /* \"#utility.yul\":1651:1663   */\n  add\n    /* \"#utility.yul\":1648:1649   */\n  0x05\n    /* \"#utility.yul\":1644:1664   */\n  shr\n    /* \"#utility.yul\":1638:1642   */\n  dup3\n    /* \"#utility.yul\":1634:1665   */\n  add\n    /* \"#utility.yul\":1624:1665   */\n  swap2\n  pop\n    /* \"#utility.yul\":1715:1796   */\ntag_72:\n    /* \"#utility.yul\":1733:1735   */\n  dup2\n    /* \"#utility.yul\":1726:1731   */\n  dup2\n    /* \"#utility.yul\":1723:1736   */\n  lt\n    /* \"#utility.yul\":1715:1796   */\n  iszero\n  tag_74\n  jumpi\n    /* \"#utility.yul\":1792:1793   */\n  0x00\n    /* \"#utility.yul\":1778:1794   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1759:1760   */\n  0x01\n    /* \"#utility.yul\":1748:1761   */\n  add\n    /* \"#utility.yul\":1715:1796   */\n  jump(tag_72)\ntag_74:\n    /* \"#utility.yul\":1719:1722   */\n  pop\n  pop\n    /* \"#utility.yul\":1385:1806   */\ntag_70:\n    /* \"#utility.yul\":1294:1812   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1988:3287   */\ntag_10:\n    /* \"#utility.yul\":2108:2118   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2130:2160   */\n  dup2\n  gt\n    /* \"#utility.yul\":2127:2183   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":2163:2181   */\n  tag_78\n  tag_54\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2192:2289   */\n  tag_79\n    /* \"#utility.yul\":2282:2288   */\n  dup2\n    /* \"#utility.yul\":2242:2280   */\n  tag_80\n    /* \"#utility.yul\":2274:2278   */\n  dup5\n    /* \"#utility.yul\":2268:2279   */\n  sload\n    /* \"#utility.yul\":2242:2280   */\n  tag_55\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":2236:2240   */\n  dup5\n    /* \"#utility.yul\":2192:2289   */\n  tag_57\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2338:2342   */\n  0x20\n    /* \"#utility.yul\":2369:2371   */\n  0x1f\n    /* \"#utility.yul\":2358:2372   */\n  dup3\n  gt\n    /* \"#utility.yul\":2386:2387   */\n  0x01\n    /* \"#utility.yul\":2381:3030   */\n  dup2\n  eq\n  tag_82\n  jumpi\n    /* \"#utility.yul\":3074:3075   */\n  0x00\n    /* \"#utility.yul\":3091:3097   */\n  dup4\n    /* \"#utility.yul\":3088:3177   */\n  iszero\n  tag_83\n  jumpi\n  pop\n    /* \"#utility.yul\":3143:3162   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":3137:3163   */\n  mload\n    /* \"#utility.yul\":3088:3177   */\ntag_83:\n  not(0x00)\n    /* \"#utility.yul\":1945:1946   */\n  0x03\n    /* \"#utility.yul\":1941:1952   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1937:1961   */\n  shr\n    /* \"#utility.yul\":1933:1962   */\n  not\n    /* \"#utility.yul\":1923:1963   */\n  and\n    /* \"#utility.yul\":1969:1970   */\n  0x01\n    /* \"#utility.yul\":1965:1976   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":1920:1977   */\n  or\n    /* \"#utility.yul\":3190:3271   */\n  dup5\n  sstore\n    /* \"#utility.yul\":2351:3281   */\n  jump(tag_74)\n    /* \"#utility.yul\":2381:3030   */\ntag_82:\n    /* \"#utility.yul\":1241:1242   */\n  0x00\n    /* \"#utility.yul\":1234:1248   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":1278:1282   */\n  0x20\n    /* \"#utility.yul\":1265:1283   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":2417:2437   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":2535:2757   */\ntag_86:\n    /* \"#utility.yul\":2549:2556   */\n  dup3\n    /* \"#utility.yul\":2546:2547   */\n  dup2\n    /* \"#utility.yul\":2543:2557   */\n  lt\n    /* \"#utility.yul\":2535:2757   */\n  iszero\n  tag_88\n  jumpi\n    /* \"#utility.yul\":2631:2650   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2625:2651   */\n  mload\n    /* \"#utility.yul\":2610:2652   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2738:2742   */\n  0x20\n    /* \"#utility.yul\":2723:2743   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":2691:2692   */\n  0x01\n    /* \"#utility.yul\":2679:2693   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":2565:2577   */\n  add\n    /* \"#utility.yul\":2535:2757   */\n  jump(tag_86)\ntag_88:\n    /* \"#utility.yul\":2539:2542   */\n  pop\n    /* \"#utility.yul\":2785:2791   */\n  dup5\n    /* \"#utility.yul\":2776:2783   */\n  dup3\n    /* \"#utility.yul\":2773:2792   */\n  lt\n    /* \"#utility.yul\":2770:2971   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":2846:2865   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":2840:2866   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2929:2930   */\n  0x03\n    /* \"#utility.yul\":2925:2939   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":2941:2944   */\n  0xf8\n    /* \"#utility.yul\":2921:2945   */\n  and\n    /* \"#utility.yul\":2917:2954   */\n  shr\n    /* \"#utility.yul\":2913:2955   */\n  not\n    /* \"#utility.yul\":2898:2956   */\n  and\n    /* \"#utility.yul\":2883:2957   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2770:2971   */\ntag_89:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3017:3018   */\n  0x01\n    /* \"#utility.yul\":3001:3015   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2997:3019   */\n  add\n    /* \"#utility.yul\":2984:3020   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1988:3287   */\n  jump\t// out\n    /* \"#utility.yul\":4207:4334   */\ntag_59:\n    /* \"#utility.yul\":4268:4278   */\n  0x4e487b71\n    /* \"#utility.yul\":4263:4266   */\n  0xe0\n    /* \"#utility.yul\":4259:4279   */\n  shl\n    /* \"#utility.yul\":4256:4257   */\n  0x00\n    /* \"#utility.yul\":4249:4280   */\n  mstore\n    /* \"#utility.yul\":4299:4303   */\n  0x11\n    /* \"#utility.yul\":4296:4297   */\n  0x04\n    /* \"#utility.yul\":4289:4304   */\n  mstore\n    /* \"#utility.yul\":4323:4327   */\n  0x24\n    /* \"#utility.yul\":4320:4321   */\n  0x00\n    /* \"#utility.yul\":4313:4328   */\n  revert\n    /* \"#utility.yul\":4339:4507   */\ntag_27:\n    /* \"#utility.yul\":4412:4421   */\n  dup1\n  dup3\n  mul\n    /* \"#utility.yul\":4443:4452   */\n  dup2\n  iszero\n    /* \"#utility.yul\":4460:4475   */\n  dup3\n  dup3\n  div\n    /* \"#utility.yul\":4454:4476   */\n  dup5\n  eq\n    /* \"#utility.yul\":4440:4477   */\n  or\n    /* \"#utility.yul\":4430:4501   */\n  tag_96\n  jumpi\n    /* \"#utility.yul\":4481:4499   */\n  tag_96\n  tag_59\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":4339:4507   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4858:4983   */\ntag_45:\n    /* \"#utility.yul\":4923:4932   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":4944:4954   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":4941:4977   */\n  iszero\n  tag_96\n  jumpi\n    /* \"#utility.yul\":4957:4975   */\n  tag_96\n  tag_59\n  jump\t// in\n    /* \"#utility.yul\":5338:5515   */\ntag_60:\n    /* \"contracts/Cardeiro_4_flattened.sol\":29600:33567  contract Cardeiro is ERC20, ERC20Burnable, Ownable, ReentrancyGuard {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Cardeiro_4_flattened.sol\":29600:33567  contract Cardeiro is ERC20, ERC20Burnable, Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x768a4173\n      gt\n      tag_26\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xbbb0b1a6\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xed299016\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x768a4173\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x7e6335f4\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x7f51bb1f\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8cbb6df7\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x313ce567\n      gt\n      tag_28\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x61d027b3\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x6a47aa06\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x102b67ab\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/Cardeiro_4_flattened.sol\":33522:33557  revert(\"Token does not accept ETH\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":216:218   */\n      0x20\n        /* \"contracts/Cardeiro_4_flattened.sol\":33522:33557  revert(\"Token does not accept ETH\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":198:219   */\n      mstore\n        /* \"#utility.yul\":255:257   */\n      0x19\n        /* \"#utility.yul\":235:253   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":228:258   */\n      mstore\n      shl(0x3b, 0x0a8ded6cadc40c8decae640dcdee840c2c6c6cae0e8408aa89)\n        /* \"#utility.yul\":274:292   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":267:322   */\n      mstore\n        /* \"#utility.yul\":339:357   */\n      0x64\n      add\n        /* \"contracts/Cardeiro_4_flattened.sol\":33522:33557  revert(\"Token does not accept ETH\") */\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Cardeiro_4_flattened.sol\":29600:33567  contract Cardeiro is ERC20, ERC20Burnable, Ownable, ReentrancyGuard {... */\n    tag_2:\n        /* \"contracts/Cardeiro_4_flattened.sol\":33433:33468  revert(\"Token does not accept ETH\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":216:218   */\n      0x20\n        /* \"contracts/Cardeiro_4_flattened.sol\":33433:33468  revert(\"Token does not accept ETH\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":198:219   */\n      mstore\n        /* \"#utility.yul\":255:257   */\n      0x19\n        /* \"#utility.yul\":235:253   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":228:258   */\n      mstore\n      shl(0x3b, 0x0a8ded6cadc40c8decae640dcdee840c2c6c6cae0e8408aa89)\n        /* \"#utility.yul\":274:292   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":267:322   */\n      mstore\n        /* \"#utility.yul\":339:357   */\n      0x64\n      add\n        /* \"contracts/Cardeiro_4_flattened.sol\":33433:33468  revert(\"Token does not accept ETH\") */\n      tag_31\n        /* \"#utility.yul\":14:363   */\n      jump\n        /* \"contracts/Cardeiro_4_flattened.sol\":12680:12769  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      revert(0x00, 0x00)\n    tag_36:\n      pop\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Cardeiro_4_flattened.sol\":14899:15085  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      revert(0x00, 0x00)\n    tag_41:\n      pop\n      tag_42\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n        /* \"#utility.yul\":1439:1453   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1432:1454   */\n      iszero\n        /* \"#utility.yul\":1414:1455   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1402:1404   */\n      0x20\n        /* \"#utility.yul\":1387:1405   */\n      add\n        /* \"contracts/Cardeiro_4_flattened.sol\":14899:15085  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_39\n        /* \"#utility.yul\":1274:1461   */\n      jump\n        /* \"contracts/Cardeiro_4_flattened.sol\":32783:32961  function getExpectedBurn(uint256 rate) public view returns (uint256) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_48\n      jumpi\n      revert(0x00, 0x00)\n    tag_48:\n      pop\n      tag_49\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      mload(0x40)\n        /* \"#utility.yul\":1843:1868   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1831:1833   */\n      0x20\n        /* \"#utility.yul\":1816:1834   */\n      add\n        /* \"contracts/Cardeiro_4_flattened.sol\":32783:32961  function getExpectedBurn(uint256 rate) public view returns (uint256) {... */\n      tag_39\n        /* \"#utility.yul\":1697:1874   */\n      jump\n        /* \"contracts/Cardeiro_4_flattened.sol\":13750:13847  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      revert(0x00, 0x00)\n    tag_55:\n      pop\n        /* \"contracts/Cardeiro_4_flattened.sol\":13828:13840  _totalSupply */\n      sload(0x02)\n        /* \"contracts/Cardeiro_4_flattened.sol\":13750:13847  function totalSupply() public view virtual returns (uint256) {... */\n      jump(tag_49)\n        /* \"contracts/Cardeiro_4_flattened.sol\":33170:33389  function transferFrom(address from, address to, uint256 amount)... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      revert(0x00, 0x00)\n    tag_59:\n      pop\n      tag_42\n      tag_61\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n        /* \"contracts/Cardeiro_4_flattened.sol\":13608:13690  function decimals() public view virtual returns (uint8) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      revert(0x00, 0x00)\n    tag_65:\n      pop\n      mload(0x40)\n        /* \"contracts/Cardeiro_4_flattened.sol\":13681:13683  18 */\n      0x12\n        /* \"#utility.yul\":2400:2436   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2388:2390   */\n      0x20\n        /* \"#utility.yul\":2373:2391   */\n      add\n        /* \"contracts/Cardeiro_4_flattened.sol\":13608:13690  function decimals() public view virtual returns (uint8) {... */\n      tag_39\n        /* \"#utility.yul\":2258:2442   */\n      jump\n        /* \"contracts/Cardeiro_4_flattened.sol\":22371:22458  function burn(uint256 value) public virtual {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_70\n      jumpi\n      revert(0x00, 0x00)\n    tag_70:\n      pop\n      tag_71\n      tag_72\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n    tag_71:\n      stop\n        /* \"contracts/Cardeiro_4_flattened.sol\":29728:29751  address public treasury */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      revert(0x00, 0x00)\n    tag_74:\n      pop\n      sload(0x07)\n      tag_75\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_75:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2611:2643   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2593:2644   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2581:2583   */\n      0x20\n        /* \"#utility.yul\":2566:2584   */\n      add\n        /* \"contracts/Cardeiro_4_flattened.sol\":29728:29751  address public treasury */\n      tag_39\n        /* \"#utility.yul\":2447:2650   */\n      jump\n        /* \"contracts/Cardeiro_4_flattened.sol\":29799:29829  uint256 public halvingInterval */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_79\n      jumpi\n      revert(0x00, 0x00)\n    tag_79:\n      pop\n      tag_49\n      sload(0x08)\n      dup2\n      jump\n        /* \"contracts/Cardeiro_4_flattened.sol\":13905:14021  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      revert(0x00, 0x00)\n    tag_83:\n      pop\n      tag_49\n      tag_85\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_85:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Cardeiro_4_flattened.sol\":13996:14014  _balances[account] */\n      and\n        /* \"contracts/Cardeiro_4_flattened.sol\":13970:13977  uint256 */\n      0x00\n        /* \"contracts/Cardeiro_4_flattened.sol\":13996:14014  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/Cardeiro_4_flattened.sol\":13905:14021  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"contracts/Cardeiro_4_flattened.sol\":25205:25306  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_89\n      jumpi\n      revert(0x00, 0x00)\n    tag_89:\n      pop\n      tag_71\n      tag_91\n      jump\t// in\n        /* \"contracts/Cardeiro_4_flattened.sol\":31394:31541  function isHalvingDue() public view returns (bool) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_92\n      jumpi\n      revert(0x00, 0x00)\n    tag_92:\n      pop\n      tag_42\n      tag_94\n      jump\t// in\n        /* \"contracts/Cardeiro_4_flattened.sol\":22774:22932  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_96\n      jumpi\n      revert(0x00, 0x00)\n    tag_96:\n      pop\n      tag_71\n      tag_98\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_98:\n      tag_99\n      jump\t// in\n        /* \"contracts/Cardeiro_4_flattened.sol\":29974:30000  uint256 public halvingRate */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_100\n      jumpi\n      revert(0x00, 0x00)\n    tag_100:\n      pop\n      tag_49\n      sload(0x0a)\n      dup2\n      jump\n        /* \"contracts/Cardeiro_4_flattened.sol\":32680:32777  function updateTreasury(address _treasury) public onlyOwner {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_104\n      jumpi\n      revert(0x00, 0x00)\n    tag_104:\n      pop\n      tag_71\n      tag_106\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_106:\n      tag_107\n      jump\t// in\n        /* \"contracts/Cardeiro_4_flattened.sol\":29877:29907  uint256 public lastHalvingTime */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_108\n      jumpi\n      revert(0x00, 0x00)\n    tag_108:\n      pop\n      tag_49\n      sload(0x09)\n      dup2\n      jump\n        /* \"contracts/Cardeiro_4_flattened.sol\":24550:24635  function owner() public view virtual returns (address) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_112\n      jumpi\n      revert(0x00, 0x00)\n    tag_112:\n      pop\n        /* \"contracts/Cardeiro_4_flattened.sol\":24622:24628  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"contracts/Cardeiro_4_flattened.sol\":24550:24635  function owner() public view virtual returns (address) {... */\n      jump(tag_75)\n        /* \"contracts/Cardeiro_4_flattened.sol\":12882:12975  function symbol() public view virtual returns (string memory) {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_116\n      jumpi\n      revert(0x00, 0x00)\n    tag_116:\n      pop\n      tag_37\n      tag_118\n      jump\t// in\n        /* \"contracts/Cardeiro_4_flattened.sol\":32967:33164  function transfer(address to, uint256 amount) ... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_120\n      jumpi\n      revert(0x00, 0x00)\n    tag_120:\n      pop\n      tag_42\n      tag_122\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_122:\n      tag_123\n      jump\t// in\n        /* \"contracts/Cardeiro_4_flattened.sol\":32282:32614  function updateHalvingParams(uint256 _halvingInterval, uint256 _halvingRate) public onlyOwner {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_125\n      jumpi\n      revert(0x00, 0x00)\n    tag_125:\n      pop\n      tag_71\n      tag_127\n      calldatasize\n      0x04\n      tag_128\n      jump\t// in\n    tag_127:\n      tag_129\n      jump\t// in\n        /* \"contracts/Cardeiro_4_flattened.sol\":14452:14592  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_130\n      jumpi\n      revert(0x00, 0x00)\n    tag_130:\n      pop\n      tag_49\n      tag_132\n      calldatasize\n      0x04\n      tag_133\n      jump\t// in\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Cardeiro_4_flattened.sol\":14558:14576  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/Cardeiro_4_flattened.sol\":14532:14539  uint256 */\n      0x00\n        /* \"contracts/Cardeiro_4_flattened.sol\":14558:14576  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Cardeiro_4_flattened.sol\":14558:14569  _allowances */\n      0x01\n        /* \"contracts/Cardeiro_4_flattened.sol\":14558:14576  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Cardeiro_4_flattened.sol\":14558:14585  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/Cardeiro_4_flattened.sol\":14452:14592  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"contracts/Cardeiro_4_flattened.sol\":31613:32214  function executeHalving() public nonReentrant {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_136\n      jumpi\n      revert(0x00, 0x00)\n    tag_136:\n      pop\n      tag_71\n      tag_138\n      jump\t// in\n        /* \"contracts/Cardeiro_4_flattened.sol\":25455:25670  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_139\n      jumpi\n      revert(0x00, 0x00)\n    tag_139:\n      pop\n      tag_71\n      tag_141\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_141:\n      tag_142\n      jump\t// in\n        /* \"contracts/Cardeiro_4_flattened.sol\":12680:12769  function name() public view virtual returns (string memory) {... */\n    tag_38:\n        /* \"contracts/Cardeiro_4_flattened.sol\":12725:12738  string memory */\n      0x60\n        /* \"contracts/Cardeiro_4_flattened.sol\":12757:12762  _name */\n      0x03\n        /* \"contracts/Cardeiro_4_flattened.sol\":12750:12762  return _name */\n      dup1\n      sload\n      tag_144\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_146\n      swap1\n      tag_145\n      jump\t// in\n    tag_146:\n      dup1\n      iszero\n      tag_147\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_148\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_147)\n    tag_148:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_149:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_149\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_147:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/Cardeiro_4_flattened.sol\":12680:12769  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Cardeiro_4_flattened.sol\":14899:15085  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_45:\n        /* \"contracts/Cardeiro_4_flattened.sol\":14972:14976  bool */\n      0x00\n        /* \"contracts/Cardeiro_4_flattened.sol\":4288:4298  msg.sender */\n      caller\n        /* \"contracts/Cardeiro_4_flattened.sol\":15026:15057  _approve(owner, spender, value) */\n      tag_153\n        /* \"contracts/Cardeiro_4_flattened.sol\":4288:4298  msg.sender */\n      dup2\n        /* \"contracts/Cardeiro_4_flattened.sol\":15042:15049  spender */\n      dup6\n        /* \"contracts/Cardeiro_4_flattened.sol\":15051:15056  value */\n      dup6\n        /* \"contracts/Cardeiro_4_flattened.sol\":15026:15034  _approve */\n      tag_154\n        /* \"contracts/Cardeiro_4_flattened.sol\":15026:15057  _approve(owner, spender, value) */\n      jump\t// in\n    tag_153:\n        /* \"contracts/Cardeiro_4_flattened.sol\":15074:15078  true */\n      0x01\n        /* \"contracts/Cardeiro_4_flattened.sol\":15067:15078  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/Cardeiro_4_flattened.sol\":14899:15085  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_150:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Cardeiro_4_flattened.sol\":32783:32961  function getExpectedBurn(uint256 rate) public view returns (uint256) {... */\n    tag_52:\n        /* \"contracts/Cardeiro_4_flattened.sol\":32898:32906  treasury */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x07))\n        /* \"contracts/Cardeiro_4_flattened.sol\":32843:32850  uint256 */\n      0x00\n        /* \"contracts/Cardeiro_4_flattened.sol\":13996:14014  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/Cardeiro_4_flattened.sol\":32951:32954  100 */\n      0x64\n        /* \"contracts/Cardeiro_4_flattened.sol\":32925:32947  treasuryBalance * rate */\n      tag_157\n        /* \"contracts/Cardeiro_4_flattened.sol\":32943:32947  rate */\n      dup5\n        /* \"contracts/Cardeiro_4_flattened.sol\":32862:32907  uint256 treasuryBalance = balanceOf(treasury) */\n      dup4\n        /* \"contracts/Cardeiro_4_flattened.sol\":32925:32947  treasuryBalance * rate */\n      tag_158\n      jump\t// in\n    tag_157:\n        /* \"contracts/Cardeiro_4_flattened.sol\":32924:32954  (treasuryBalance * rate) / 100 */\n      tag_159\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n        /* \"contracts/Cardeiro_4_flattened.sol\":32917:32954  return (treasuryBalance * rate) / 100 */\n      swap4\n        /* \"contracts/Cardeiro_4_flattened.sol\":32783:32961  function getExpectedBurn(uint256 rate) public view returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Cardeiro_4_flattened.sol\":33170:33389  function transferFrom(address from, address to, uint256 amount)... */\n    tag_63:\n        /* \"contracts/Cardeiro_4_flattened.sol\":33319:33323  bool */\n      0x00\n        /* \"contracts/Cardeiro_4_flattened.sol\":30627:30641  isHalvingDue() */\n      tag_163\n        /* \"contracts/Cardeiro_4_flattened.sol\":30627:30639  isHalvingDue */\n      tag_94\n        /* \"contracts/Cardeiro_4_flattened.sol\":30627:30641  isHalvingDue() */\n      jump\t// in\n    tag_163:\n        /* \"contracts/Cardeiro_4_flattened.sol\":30623:30684  if (isHalvingDue()) {... */\n      iszero\n      tag_165\n      jumpi\n        /* \"contracts/Cardeiro_4_flattened.sol\":30657:30673  executeHalving() */\n      tag_165\n        /* \"contracts/Cardeiro_4_flattened.sol\":30657:30671  executeHalving */\n      tag_138\n        /* \"contracts/Cardeiro_4_flattened.sol\":30657:30673  executeHalving() */\n      jump\t// in\n    tag_165:\n        /* \"contracts/Cardeiro_4_flattened.sol\":33346:33382  super.transferFrom(from, to, amount) */\n      tag_167\n        /* \"contracts/Cardeiro_4_flattened.sol\":33365:33369  from */\n      dup5\n        /* \"contracts/Cardeiro_4_flattened.sol\":33371:33373  to */\n      dup5\n        /* \"contracts/Cardeiro_4_flattened.sol\":33375:33381  amount */\n      dup5\n        /* \"contracts/Cardeiro_4_flattened.sol\":33346:33364  super.transferFrom */\n      tag_168\n        /* \"contracts/Cardeiro_4_flattened.sol\":33346:33382  super.transferFrom(from, to, amount) */\n      jump\t// in\n    tag_167:\n        /* \"contracts/Cardeiro_4_flattened.sol\":33339:33382  return super.transferFrom(from, to, amount) */\n      swap5\n        /* \"contracts/Cardeiro_4_flattened.sol\":33170:33389  function transferFrom(address from, address to, uint256 amount)... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Cardeiro_4_flattened.sol\":22371:22458  function burn(uint256 value) public virtual {... */\n    tag_73:\n        /* \"contracts/Cardeiro_4_flattened.sol\":22425:22451  _burn(_msgSender(), value) */\n      tag_171\n        /* \"contracts/Cardeiro_4_flattened.sol\":4288:4298  msg.sender */\n      caller\n        /* \"contracts/Cardeiro_4_flattened.sol\":22445:22450  value */\n      dup3\n        /* \"contracts/Cardeiro_4_flattened.sol\":22425:22430  _burn */\n      tag_173\n        /* \"contracts/Cardeiro_4_flattened.sol\":22425:22451  _burn(_msgSender(), value) */\n      jump\t// in\n    tag_171:\n        /* \"contracts/Cardeiro_4_flattened.sol\":22371:22458  function burn(uint256 value) public virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/Cardeiro_4_flattened.sol\":25205:25306  function renounceOwnership() public virtual onlyOwner {... */\n    tag_91:\n        /* \"contracts/Cardeiro_4_flattened.sol\":24443:24456  _checkOwner() */\n      tag_176\n        /* \"contracts/Cardeiro_4_flattened.sol\":24443:24454  _checkOwner */\n      tag_177\n        /* \"contracts/Cardeiro_4_flattened.sol\":24443:24456  _checkOwner() */\n      jump\t// in\n    tag_176:\n        /* \"contracts/Cardeiro_4_flattened.sol\":25269:25299  _transferOwnership(address(0)) */\n      tag_179\n        /* \"contracts/Cardeiro_4_flattened.sol\":25296:25297  0 */\n      0x00\n        /* \"contracts/Cardeiro_4_flattened.sol\":25269:25287  _transferOwnership */\n      tag_180\n        /* \"contracts/Cardeiro_4_flattened.sol\":25269:25299  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_179:\n        /* \"contracts/Cardeiro_4_flattened.sol\":25205:25306  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Cardeiro_4_flattened.sol\":31394:31541  function isHalvingDue() public view returns (bool) {... */\n    tag_94:\n        /* \"contracts/Cardeiro_4_flattened.sol\":31439:31443  bool */\n      0x00\n        /* \"contracts/Cardeiro_4_flattened.sol\":30473:30477  1800 */\n      0x0708\n        /* \"contracts/Cardeiro_4_flattened.sol\":31500:31515  halvingInterval */\n      sload(0x08)\n        /* \"contracts/Cardeiro_4_flattened.sol\":31482:31497  lastHalvingTime */\n      sload(0x09)\n        /* \"contracts/Cardeiro_4_flattened.sol\":31482:31515  lastHalvingTime + halvingInterval */\n      tag_182\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_182:\n        /* \"contracts/Cardeiro_4_flattened.sol\":31482:31533  lastHalvingTime + halvingInterval + SECURITY_MARGIN */\n      tag_184\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_184:\n        /* \"contracts/Cardeiro_4_flattened.sol\":31462:31477  block.timestamp */\n      timestamp\n        /* \"contracts/Cardeiro_4_flattened.sol\":31462:31534  block.timestamp >= (lastHalvingTime + halvingInterval + SECURITY_MARGIN) */\n      lt\n      iszero\n        /* \"contracts/Cardeiro_4_flattened.sol\":31455:31534  return block.timestamp >= (lastHalvingTime + halvingInterval + SECURITY_MARGIN) */\n      swap1\n      pop\n        /* \"contracts/Cardeiro_4_flattened.sol\":31394:31541  function isHalvingDue() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Cardeiro_4_flattened.sol\":22774:22932  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_99:\n        /* \"contracts/Cardeiro_4_flattened.sol\":22849:22894  _spendAllowance(account, _msgSender(), value) */\n      tag_186\n        /* \"contracts/Cardeiro_4_flattened.sol\":22865:22872  account */\n      dup3\n        /* \"contracts/Cardeiro_4_flattened.sol\":4288:4298  msg.sender */\n      caller\n        /* \"contracts/Cardeiro_4_flattened.sol\":22888:22893  value */\n      dup4\n        /* \"contracts/Cardeiro_4_flattened.sol\":22849:22864  _spendAllowance */\n      tag_188\n        /* \"contracts/Cardeiro_4_flattened.sol\":22849:22894  _spendAllowance(account, _msgSender(), value) */\n      jump\t// in\n    tag_186:\n        /* \"contracts/Cardeiro_4_flattened.sol\":22904:22925  _burn(account, value) */\n      tag_189\n        /* \"contracts/Cardeiro_4_flattened.sol\":22910:22917  account */\n      dup3\n        /* \"contracts/Cardeiro_4_flattened.sol\":22919:22924  value */\n      dup3\n        /* \"contracts/Cardeiro_4_flattened.sol\":22904:22909  _burn */\n      tag_173\n        /* \"contracts/Cardeiro_4_flattened.sol\":22904:22925  _burn(account, value) */\n      jump\t// in\n    tag_189:\n        /* \"contracts/Cardeiro_4_flattened.sol\":22774:22932  function burnFrom(address account, uint256 value) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Cardeiro_4_flattened.sol\":32680:32777  function updateTreasury(address _treasury) public onlyOwner {... */\n    tag_107:\n        /* \"contracts/Cardeiro_4_flattened.sol\":24443:24456  _checkOwner() */\n      tag_191\n        /* \"contracts/Cardeiro_4_flattened.sol\":24443:24454  _checkOwner */\n      tag_177\n        /* \"contracts/Cardeiro_4_flattened.sol\":24443:24456  _checkOwner() */\n      jump\t// in\n    tag_191:\n        /* \"contracts/Cardeiro_4_flattened.sol\":32750:32758  treasury */\n      0x07\n        /* \"contracts/Cardeiro_4_flattened.sol\":32750:32770  treasury = _treasury */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/Cardeiro_4_flattened.sol\":32680:32777  function updateTreasury(address _treasury) public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Cardeiro_4_flattened.sol\":12882:12975  function symbol() public view virtual returns (string memory) {... */\n    tag_118:\n        /* \"contracts/Cardeiro_4_flattened.sol\":12929:12942  string memory */\n      0x60\n        /* \"contracts/Cardeiro_4_flattened.sol\":12961:12968  _symbol */\n      0x04\n        /* \"contracts/Cardeiro_4_flattened.sol\":12954:12968  return _symbol */\n      dup1\n      sload\n      tag_144\n      swap1\n      tag_145\n      jump\t// in\n        /* \"contracts/Cardeiro_4_flattened.sol\":32967:33164  function transfer(address to, uint256 amount) ... */\n    tag_123:\n        /* \"contracts/Cardeiro_4_flattened.sol\":33103:33107  bool */\n      0x00\n        /* \"contracts/Cardeiro_4_flattened.sol\":30627:30641  isHalvingDue() */\n      tag_201\n        /* \"contracts/Cardeiro_4_flattened.sol\":30627:30639  isHalvingDue */\n      tag_94\n        /* \"contracts/Cardeiro_4_flattened.sol\":30627:30641  isHalvingDue() */\n      jump\t// in\n    tag_201:\n        /* \"contracts/Cardeiro_4_flattened.sol\":30623:30684  if (isHalvingDue()) {... */\n      iszero\n      tag_203\n      jumpi\n        /* \"contracts/Cardeiro_4_flattened.sol\":30657:30673  executeHalving() */\n      tag_203\n        /* \"contracts/Cardeiro_4_flattened.sol\":30657:30671  executeHalving */\n      tag_138\n        /* \"contracts/Cardeiro_4_flattened.sol\":30657:30673  executeHalving() */\n      jump\t// in\n    tag_203:\n        /* \"contracts/Cardeiro_4_flattened.sol\":33131:33157  super.transfer(to, amount) */\n      tag_159\n        /* \"contracts/Cardeiro_4_flattened.sol\":33146:33148  to */\n      dup4\n        /* \"contracts/Cardeiro_4_flattened.sol\":33150:33156  amount */\n      dup4\n        /* \"contracts/Cardeiro_4_flattened.sol\":33131:33145  super.transfer */\n      tag_206\n        /* \"contracts/Cardeiro_4_flattened.sol\":33131:33157  super.transfer(to, amount) */\n      jump\t// in\n        /* \"contracts/Cardeiro_4_flattened.sol\":32282:32614  function updateHalvingParams(uint256 _halvingInterval, uint256 _halvingRate) public onlyOwner {... */\n    tag_129:\n        /* \"contracts/Cardeiro_4_flattened.sol\":24443:24456  _checkOwner() */\n      tag_208\n        /* \"contracts/Cardeiro_4_flattened.sol\":24443:24454  _checkOwner */\n      tag_177\n        /* \"contracts/Cardeiro_4_flattened.sol\":24443:24456  _checkOwner() */\n      jump\t// in\n    tag_208:\n        /* \"contracts/Cardeiro_4_flattened.sol\":30051:30052  5 */\n      0x05\n        /* \"contracts/Cardeiro_4_flattened.sol\":32394:32406  _halvingRate */\n      dup2\n        /* \"contracts/Cardeiro_4_flattened.sol\":32394:32426  _halvingRate >= MIN_HALVING_RATE */\n      lt\n      iszero\n        /* \"contracts/Cardeiro_4_flattened.sol\":32386:32451  require(_halvingRate >= MIN_HALVING_RATE, \"Halving rate too low\") */\n      tag_210\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4706:4708   */\n      0x20\n        /* \"contracts/Cardeiro_4_flattened.sol\":32386:32451  require(_halvingRate >= MIN_HALVING_RATE, \"Halving rate too low\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4688:4709   */\n      mstore\n        /* \"#utility.yul\":4745:4747   */\n      0x14\n        /* \"#utility.yul\":4725:4743   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4718:4748   */\n      mstore\n      shl(0x60, 0x48616c76696e67207261746520746f6f206c6f77)\n        /* \"#utility.yul\":4764:4782   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4757:4807   */\n      mstore\n        /* \"#utility.yul\":4824:4842   */\n      0x64\n      add\n        /* \"contracts/Cardeiro_4_flattened.sol\":32386:32451  require(_halvingRate >= MIN_HALVING_RATE, \"Halving rate too low\") */\n      tag_31\n        /* \"#utility.yul\":4504:4848   */\n      jump\n        /* \"contracts/Cardeiro_4_flattened.sol\":32386:32451  require(_halvingRate >= MIN_HALVING_RATE, \"Halving rate too low\") */\n    tag_210:\n        /* \"contracts/Cardeiro_4_flattened.sol\":30109:30111  20 */\n      0x14\n        /* \"contracts/Cardeiro_4_flattened.sol\":32469:32481  _halvingRate */\n      dup2\n        /* \"contracts/Cardeiro_4_flattened.sol\":32469:32501  _halvingRate <= MAX_HALVING_RATE */\n      gt\n      iszero\n        /* \"contracts/Cardeiro_4_flattened.sol\":32461:32527  require(_halvingRate <= MAX_HALVING_RATE, \"Halving rate too high\") */\n      tag_213\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5055:5057   */\n      0x20\n        /* \"contracts/Cardeiro_4_flattened.sol\":32461:32527  require(_halvingRate <= MAX_HALVING_RATE, \"Halving rate too high\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5037:5058   */\n      mstore\n        /* \"#utility.yul\":5094:5096   */\n      0x15\n        /* \"#utility.yul\":5074:5092   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5067:5097   */\n      mstore\n      shl(0x5b, 0x090c2d8ecd2dcce40e4c2e8ca40e8dede40d0d2ced)\n        /* \"#utility.yul\":5113:5131   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5106:5157   */\n      mstore\n        /* \"#utility.yul\":5174:5192   */\n      0x64\n      add\n        /* \"contracts/Cardeiro_4_flattened.sol\":32461:32527  require(_halvingRate <= MAX_HALVING_RATE, \"Halving rate too high\") */\n      tag_31\n        /* \"#utility.yul\":4853:5198   */\n      jump\n        /* \"contracts/Cardeiro_4_flattened.sol\":32461:32527  require(_halvingRate <= MAX_HALVING_RATE, \"Halving rate too high\") */\n    tag_213:\n        /* \"contracts/Cardeiro_4_flattened.sol\":32537:32552  halvingInterval */\n      0x08\n        /* \"contracts/Cardeiro_4_flattened.sol\":32537:32571  halvingInterval = _halvingInterval */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Cardeiro_4_flattened.sol\":32581:32592  halvingRate */\n      0x0a\n        /* \"contracts/Cardeiro_4_flattened.sol\":32581:32607  halvingRate = _halvingRate */\n      sstore\n        /* \"contracts/Cardeiro_4_flattened.sol\":32282:32614  function updateHalvingParams(uint256 _halvingInterval, uint256 _halvingRate) public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Cardeiro_4_flattened.sol\":31613:32214  function executeHalving() public nonReentrant {... */\n    tag_138:\n        /* \"contracts/Cardeiro_4_flattened.sol\":28544:28565  _nonReentrantBefore() */\n      tag_218\n        /* \"contracts/Cardeiro_4_flattened.sol\":28544:28563  _nonReentrantBefore */\n      tag_219\n        /* \"contracts/Cardeiro_4_flattened.sol\":28544:28565  _nonReentrantBefore() */\n      jump\t// in\n    tag_218:\n        /* \"contracts/Cardeiro_4_flattened.sol\":31677:31691  isHalvingDue() */\n      tag_221\n        /* \"contracts/Cardeiro_4_flattened.sol\":31677:31689  isHalvingDue */\n      tag_94\n        /* \"contracts/Cardeiro_4_flattened.sol\":31677:31691  isHalvingDue() */\n      jump\t// in\n    tag_221:\n        /* \"contracts/Cardeiro_4_flattened.sol\":31669:31724  require(isHalvingDue(), \"Halving interval not reached\") */\n      tag_222\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5405:5407   */\n      0x20\n        /* \"contracts/Cardeiro_4_flattened.sol\":31669:31724  require(isHalvingDue(), \"Halving interval not reached\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5387:5408   */\n      mstore\n        /* \"#utility.yul\":5444:5446   */\n      0x1c\n        /* \"#utility.yul\":5424:5442   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5417:5447   */\n      mstore\n        /* \"#utility.yul\":5483:5513   */\n      0x48616c76696e6720696e74657276616c206e6f74207265616368656400000000\n        /* \"#utility.yul\":5463:5481   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5456:5514   */\n      mstore\n        /* \"#utility.yul\":5531:5549   */\n      0x64\n      add\n        /* \"contracts/Cardeiro_4_flattened.sol\":31669:31724  require(isHalvingDue(), \"Halving interval not reached\") */\n      tag_31\n        /* \"#utility.yul\":5203:5555   */\n      jump\n        /* \"contracts/Cardeiro_4_flattened.sol\":31669:31724  require(isHalvingDue(), \"Halving interval not reached\") */\n    tag_222:\n        /* \"contracts/Cardeiro_4_flattened.sol\":31779:31787  treasury */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x07))\n        /* \"contracts/Cardeiro_4_flattened.sol\":31743:31766  uint256 treasuryBalance */\n      0x00\n        /* \"contracts/Cardeiro_4_flattened.sol\":13996:14014  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/Cardeiro_4_flattened.sol\":31743:31788  uint256 treasuryBalance = balanceOf(treasury) */\n      swap1\n      pop\n        /* \"contracts/Cardeiro_4_flattened.sol\":31798:31816  uint256 burnAmount */\n      0x00\n        /* \"contracts/Cardeiro_4_flattened.sol\":31853:31856  100 */\n      0x64\n        /* \"contracts/Cardeiro_4_flattened.sol\":31838:31849  halvingRate */\n      sload(0x0a)\n        /* \"contracts/Cardeiro_4_flattened.sol\":31820:31835  treasuryBalance */\n      dup4\n        /* \"contracts/Cardeiro_4_flattened.sol\":31820:31849  treasuryBalance * halvingRate */\n      tag_226\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_226:\n        /* \"contracts/Cardeiro_4_flattened.sol\":31819:31856  (treasuryBalance * halvingRate) / 100 */\n      tag_227\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_227:\n        /* \"contracts/Cardeiro_4_flattened.sol\":31798:31856  uint256 burnAmount = (treasuryBalance * halvingRate) / 100 */\n      swap1\n      pop\n        /* \"contracts/Cardeiro_4_flattened.sol\":31879:31893  burnAmount > 0 */\n      dup1\n      iszero\n        /* \"contracts/Cardeiro_4_flattened.sol\":31875:32208  if (burnAmount > 0) {... */\n      tag_228\n      jumpi\n        /* \"contracts/Cardeiro_4_flattened.sol\":31956:31964  treasury */\n      sload(0x07)\n        /* \"contracts/Cardeiro_4_flattened.sol\":31950:31977  _burn(treasury, burnAmount) */\n      tag_229\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Cardeiro_4_flattened.sol\":31956:31964  treasury */\n      and\n        /* \"contracts/Cardeiro_4_flattened.sol\":31966:31976  burnAmount */\n      dup3\n        /* \"contracts/Cardeiro_4_flattened.sol\":31950:31955  _burn */\n      tag_173\n        /* \"contracts/Cardeiro_4_flattened.sol\":31950:31977  _burn(treasury, burnAmount) */\n      jump\t// in\n    tag_229:\n        /* \"contracts/Cardeiro_4_flattened.sol\":32062:32095  block.timestamp - SECURITY_MARGIN */\n      tag_230\n        /* \"contracts/Cardeiro_4_flattened.sol\":30473:30477  1800 */\n      0x0708\n        /* \"contracts/Cardeiro_4_flattened.sol\":32062:32077  block.timestamp */\n      timestamp\n        /* \"contracts/Cardeiro_4_flattened.sol\":32062:32095  block.timestamp - SECURITY_MARGIN */\n      tag_231\n      jump\t// in\n    tag_230:\n        /* \"contracts/Cardeiro_4_flattened.sol\":32044:32059  lastHalvingTime */\n      0x09\n        /* \"contracts/Cardeiro_4_flattened.sol\":32044:32095  lastHalvingTime = block.timestamp - SECURITY_MARGIN */\n      sstore\n        /* \"contracts/Cardeiro_4_flattened.sol\":32161:32197  Halving(burnAmount, block.timestamp) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":5867:5892   */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/Cardeiro_4_flattened.sol\":32181:32196  block.timestamp */\n      timestamp\n        /* \"#utility.yul\":5923:5925   */\n      0x20\n        /* \"#utility.yul\":5908:5926   */\n      dup3\n      add\n        /* \"#utility.yul\":5901:5935   */\n      mstore\n        /* \"contracts/Cardeiro_4_flattened.sol\":32161:32197  Halving(burnAmount, block.timestamp) */\n      0x394823b0bcaf78cd8f5876a52c05dbab91512a05f5da2a31e239a11ab66d605f\n      swap2\n        /* \"#utility.yul\":5840:5858   */\n      add\n        /* \"contracts/Cardeiro_4_flattened.sol\":32161:32197  Halving(burnAmount, block.timestamp) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Cardeiro_4_flattened.sol\":31875:32208  if (burnAmount > 0) {... */\n    tag_228:\n        /* \"contracts/Cardeiro_4_flattened.sol\":31659:32214  {... */\n      pop\n      pop\n        /* \"contracts/Cardeiro_4_flattened.sol\":28586:28606  _nonReentrantAfter() */\n      tag_179\n        /* \"contracts/Cardeiro_4_flattened.sol\":27901:27902  1 */\n      0x01\n        /* \"contracts/Cardeiro_4_flattened.sol\":29112:29119  _status */\n      0x06\n        /* \"contracts/Cardeiro_4_flattened.sol\":29112:29133  _status = NOT_ENTERED */\n      sstore\n        /* \"contracts/Cardeiro_4_flattened.sol\":28932:29140  function _nonReentrantAfter() private {... */\n      jump\n        /* \"contracts/Cardeiro_4_flattened.sol\":25455:25670  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_142:\n        /* \"contracts/Cardeiro_4_flattened.sol\":24443:24456  _checkOwner() */\n      tag_237\n        /* \"contracts/Cardeiro_4_flattened.sol\":24443:24454  _checkOwner */\n      tag_177\n        /* \"contracts/Cardeiro_4_flattened.sol\":24443:24456  _checkOwner() */\n      jump\t// in\n    tag_237:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Cardeiro_4_flattened.sol\":25539:25561  newOwner == address(0) */\n      dup2\n      and\n        /* \"contracts/Cardeiro_4_flattened.sol\":25535:25626  if (newOwner == address(0)) {... */\n      tag_239\n      jumpi\n        /* \"contracts/Cardeiro_4_flattened.sol\":25584:25615  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"contracts/Cardeiro_4_flattened.sol\":25612:25613  0 */\n      0x00\n        /* \"contracts/Cardeiro_4_flattened.sol\":25584:25615  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2593:2644   */\n      mstore\n        /* \"#utility.yul\":2566:2584   */\n      0x24\n      add\n        /* \"contracts/Cardeiro_4_flattened.sol\":25584:25615  OwnableInvalidOwner(address(0)) */\n      tag_31\n        /* \"#utility.yul\":2447:2650   */\n      jump\n        /* \"contracts/Cardeiro_4_flattened.sol\":25535:25626  if (newOwner == address(0)) {... */\n    tag_239:\n        /* \"contracts/Cardeiro_4_flattened.sol\":25635:25663  _transferOwnership(newOwner) */\n      tag_171\n        /* \"contracts/Cardeiro_4_flattened.sol\":25654:25662  newOwner */\n      dup2\n        /* \"contracts/Cardeiro_4_flattened.sol\":25635:25653  _transferOwnership */\n      tag_180\n        /* \"contracts/Cardeiro_4_flattened.sol\":25635:25663  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"contracts/Cardeiro_4_flattened.sol\":19627:19755  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_154:\n        /* \"contracts/Cardeiro_4_flattened.sol\":19711:19748  _approve(owner, spender, value, true) */\n      tag_244\n        /* \"contracts/Cardeiro_4_flattened.sol\":19720:19725  owner */\n      dup4\n        /* \"contracts/Cardeiro_4_flattened.sol\":19727:19734  spender */\n      dup4\n        /* \"contracts/Cardeiro_4_flattened.sol\":19736:19741  value */\n      dup4\n        /* \"contracts/Cardeiro_4_flattened.sol\":19743:19747  true */\n      0x01\n        /* \"contracts/Cardeiro_4_flattened.sol\":19711:19719  _approve */\n      tag_245\n        /* \"contracts/Cardeiro_4_flattened.sol\":19711:19748  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_244:\n        /* \"contracts/Cardeiro_4_flattened.sol\":19627:19755  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Cardeiro_4_flattened.sol\":15677:15921  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_168:\n        /* \"contracts/Cardeiro_4_flattened.sol\":15764:15768  bool */\n      0x00\n        /* \"contracts/Cardeiro_4_flattened.sol\":4288:4298  msg.sender */\n      caller\n        /* \"contracts/Cardeiro_4_flattened.sol\":15820:15857  _spendAllowance(from, spender, value) */\n      tag_248\n        /* \"contracts/Cardeiro_4_flattened.sol\":15836:15840  from */\n      dup6\n        /* \"contracts/Cardeiro_4_flattened.sol\":4288:4298  msg.sender */\n      dup3\n        /* \"contracts/Cardeiro_4_flattened.sol\":15851:15856  value */\n      dup6\n        /* \"contracts/Cardeiro_4_flattened.sol\":15820:15835  _spendAllowance */\n      tag_188\n        /* \"contracts/Cardeiro_4_flattened.sol\":15820:15857  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_248:\n        /* \"contracts/Cardeiro_4_flattened.sol\":15867:15893  _transfer(from, to, value) */\n      tag_249\n        /* \"contracts/Cardeiro_4_flattened.sol\":15877:15881  from */\n      dup6\n        /* \"contracts/Cardeiro_4_flattened.sol\":15883:15885  to */\n      dup6\n        /* \"contracts/Cardeiro_4_flattened.sol\":15887:15892  value */\n      dup6\n        /* \"contracts/Cardeiro_4_flattened.sol\":15867:15876  _transfer */\n      tag_250\n        /* \"contracts/Cardeiro_4_flattened.sol\":15867:15893  _transfer(from, to, value) */\n      jump\t// in\n    tag_249:\n      pop\n        /* \"contracts/Cardeiro_4_flattened.sol\":15910:15914  true */\n      0x01\n      swap5\n        /* \"contracts/Cardeiro_4_flattened.sol\":15677:15921  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Cardeiro_4_flattened.sol\":18885:19091  function _burn(address account, uint256 value) internal {... */\n    tag_173:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Cardeiro_4_flattened.sol\":18955:18976  account == address(0) */\n      dup3\n      and\n        /* \"contracts/Cardeiro_4_flattened.sol\":18951:19040  if (account == address(0)) {... */\n      tag_252\n      jumpi\n        /* \"contracts/Cardeiro_4_flattened.sol\":18999:19029  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"contracts/Cardeiro_4_flattened.sol\":19026:19027  0 */\n      0x00\n        /* \"contracts/Cardeiro_4_flattened.sol\":18999:19029  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2593:2644   */\n      mstore\n        /* \"#utility.yul\":2566:2584   */\n      0x24\n      add\n        /* \"contracts/Cardeiro_4_flattened.sol\":18999:19029  ERC20InvalidSender(address(0)) */\n      tag_31\n        /* \"#utility.yul\":2447:2650   */\n      jump\n        /* \"contracts/Cardeiro_4_flattened.sol\":18951:19040  if (account == address(0)) {... */\n    tag_252:\n        /* \"contracts/Cardeiro_4_flattened.sol\":19049:19084  _update(account, address(0), value) */\n      tag_189\n        /* \"contracts/Cardeiro_4_flattened.sol\":19057:19064  account */\n      dup3\n        /* \"contracts/Cardeiro_4_flattened.sol\":19074:19075  0 */\n      0x00\n        /* \"contracts/Cardeiro_4_flattened.sol\":19078:19083  value */\n      dup4\n        /* \"contracts/Cardeiro_4_flattened.sol\":19049:19056  _update */\n      tag_255\n        /* \"contracts/Cardeiro_4_flattened.sol\":19049:19084  _update(account, address(0), value) */\n      jump\t// in\n        /* \"contracts/Cardeiro_4_flattened.sol\":24708:24870  function _checkOwner() internal view virtual {... */\n    tag_177:\n        /* \"contracts/Cardeiro_4_flattened.sol\":24622:24628  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"contracts/Cardeiro_4_flattened.sol\":4288:4298  msg.sender */\n      caller\n        /* \"contracts/Cardeiro_4_flattened.sol\":24767:24790  owner() != _msgSender() */\n      eq\n        /* \"contracts/Cardeiro_4_flattened.sol\":24763:24864  if (owner() != _msgSender()) {... */\n      tag_179\n      jumpi\n        /* \"contracts/Cardeiro_4_flattened.sol\":24813:24853  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"contracts/Cardeiro_4_flattened.sol\":4288:4298  msg.sender */\n      caller\n        /* \"contracts/Cardeiro_4_flattened.sol\":24813:24853  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2593:2644   */\n      mstore\n        /* \"#utility.yul\":2566:2584   */\n      0x24\n      add\n        /* \"contracts/Cardeiro_4_flattened.sol\":24813:24853  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_31\n        /* \"#utility.yul\":2447:2650   */\n      jump\n        /* \"contracts/Cardeiro_4_flattened.sol\":25824:26011  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_180:\n        /* \"contracts/Cardeiro_4_flattened.sol\":25916:25922  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Cardeiro_4_flattened.sol\":25932:25949  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"contracts/Cardeiro_4_flattened.sol\":25964:26004  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"contracts/Cardeiro_4_flattened.sol\":25916:25922  _owner */\n      swap2\n      and\n      swap2\n        /* \"contracts/Cardeiro_4_flattened.sol\":25932:25949  _owner = newOwner */\n      swap1\n        /* \"contracts/Cardeiro_4_flattened.sol\":25916:25922  _owner */\n      dup3\n      swap1\n        /* \"contracts/Cardeiro_4_flattened.sol\":25964:26004  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"contracts/Cardeiro_4_flattened.sol\":25897:25913  address oldOwner */\n      0x00\n      swap1\n        /* \"contracts/Cardeiro_4_flattened.sol\":25964:26004  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"contracts/Cardeiro_4_flattened.sol\":25887:26011  {... */\n      pop\n        /* \"contracts/Cardeiro_4_flattened.sol\":25824:26011  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/Cardeiro_4_flattened.sol\":21316:21792  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_188:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Cardeiro_4_flattened.sol\":14558:14576  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"contracts/Cardeiro_4_flattened.sol\":21415:21439  uint256 currentAllowance */\n      0x00\n        /* \"contracts/Cardeiro_4_flattened.sol\":14558:14576  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Cardeiro_4_flattened.sol\":14558:14569  _allowances */\n      0x01\n        /* \"contracts/Cardeiro_4_flattened.sol\":14558:14576  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Cardeiro_4_flattened.sol\":14558:14585  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"contracts/Cardeiro_4_flattened.sol\":21481:21517  currentAllowance < type(uint256).max */\n      dup2\n      lt\n        /* \"contracts/Cardeiro_4_flattened.sol\":21477:21786  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_269\n      jumpi\n        /* \"contracts/Cardeiro_4_flattened.sol\":21556:21561  value */\n      dup2\n        /* \"contracts/Cardeiro_4_flattened.sol\":21537:21553  currentAllowance */\n      dup2\n        /* \"contracts/Cardeiro_4_flattened.sol\":21537:21561  currentAllowance < value */\n      lt\n        /* \"contracts/Cardeiro_4_flattened.sol\":21533:21663  if (currentAllowance < value) {... */\n      iszero\n      tag_266\n      jumpi\n        /* \"contracts/Cardeiro_4_flattened.sol\":21588:21648  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6166:6198   */\n      dup5\n      and\n        /* \"contracts/Cardeiro_4_flattened.sol\":21588:21648  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6148:6199   */\n      mstore\n        /* \"#utility.yul\":6215:6233   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":6208:6242   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":6258:6276   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":6251:6285   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":6121:6139   */\n      0x64\n      add\n        /* \"contracts/Cardeiro_4_flattened.sol\":21588:21648  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      tag_31\n        /* \"#utility.yul\":5946:6291   */\n      jump\n        /* \"contracts/Cardeiro_4_flattened.sol\":21533:21663  if (currentAllowance < value) {... */\n    tag_266:\n        /* \"contracts/Cardeiro_4_flattened.sol\":21704:21761  _approve(owner, spender, currentAllowance - value, false) */\n      tag_269\n        /* \"contracts/Cardeiro_4_flattened.sol\":21713:21718  owner */\n      dup5\n        /* \"contracts/Cardeiro_4_flattened.sol\":21720:21727  spender */\n      dup5\n        /* \"contracts/Cardeiro_4_flattened.sol\":21748:21753  value */\n      dup5\n        /* \"contracts/Cardeiro_4_flattened.sol\":21729:21745  currentAllowance */\n      dup5\n        /* \"contracts/Cardeiro_4_flattened.sol\":21729:21753  currentAllowance - value */\n      sub\n        /* \"contracts/Cardeiro_4_flattened.sol\":21755:21760  false */\n      0x00\n        /* \"contracts/Cardeiro_4_flattened.sol\":21704:21712  _approve */\n      tag_245\n        /* \"contracts/Cardeiro_4_flattened.sol\":21704:21761  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_269:\n        /* \"contracts/Cardeiro_4_flattened.sol\":21405:21792  {... */\n      pop\n        /* \"contracts/Cardeiro_4_flattened.sol\":21316:21792  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Cardeiro_4_flattened.sol\":14216:14394  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_206:\n        /* \"contracts/Cardeiro_4_flattened.sol\":14285:14289  bool */\n      0x00\n        /* \"contracts/Cardeiro_4_flattened.sol\":4288:4298  msg.sender */\n      caller\n        /* \"contracts/Cardeiro_4_flattened.sol\":14339:14366  _transfer(owner, to, value) */\n      tag_153\n        /* \"contracts/Cardeiro_4_flattened.sol\":4288:4298  msg.sender */\n      dup2\n        /* \"contracts/Cardeiro_4_flattened.sol\":14356:14358  to */\n      dup6\n        /* \"contracts/Cardeiro_4_flattened.sol\":14360:14365  value */\n      dup6\n        /* \"contracts/Cardeiro_4_flattened.sol\":14339:14348  _transfer */\n      tag_250\n        /* \"contracts/Cardeiro_4_flattened.sol\":14339:14366  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"contracts/Cardeiro_4_flattened.sol\":28619:28926  function _nonReentrantBefore() private {... */\n    tag_219:\n        /* \"contracts/Cardeiro_4_flattened.sol\":27943:27944  2 */\n      0x02\n        /* \"contracts/Cardeiro_4_flattened.sol\":28746:28753  _status */\n      sload(0x06)\n        /* \"contracts/Cardeiro_4_flattened.sol\":28746:28764  _status == ENTERED */\n      sub\n        /* \"contracts/Cardeiro_4_flattened.sol\":28742:28828  if (_status == ENTERED) {... */\n      tag_274\n      jumpi\n        /* \"contracts/Cardeiro_4_flattened.sol\":28787:28817  ReentrancyGuardReentrantCall() */\n      mload(0x40)\n      shl(0xe0, 0x3ee5aeb5)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Cardeiro_4_flattened.sol\":28742:28828  if (_status == ENTERED) {... */\n    tag_274:\n        /* \"contracts/Cardeiro_4_flattened.sol\":27943:27944  2 */\n      0x02\n        /* \"contracts/Cardeiro_4_flattened.sol\":28902:28909  _status */\n      0x06\n        /* \"contracts/Cardeiro_4_flattened.sol\":28902:28919  _status = ENTERED */\n      sstore\n        /* \"contracts/Cardeiro_4_flattened.sol\":28619:28926  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"contracts/Cardeiro_4_flattened.sol\":20602:21034  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_245:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Cardeiro_4_flattened.sol\":20714:20733  owner == address(0) */\n      dup5\n      and\n        /* \"contracts/Cardeiro_4_flattened.sol\":20710:20799  if (owner == address(0)) {... */\n      tag_277\n      jumpi\n        /* \"contracts/Cardeiro_4_flattened.sol\":20756:20788  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"contracts/Cardeiro_4_flattened.sol\":20785:20786  0 */\n      0x00\n        /* \"contracts/Cardeiro_4_flattened.sol\":20756:20788  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2593:2644   */\n      mstore\n        /* \"#utility.yul\":2566:2584   */\n      0x24\n      add\n        /* \"contracts/Cardeiro_4_flattened.sol\":20756:20788  ERC20InvalidApprover(address(0)) */\n      tag_31\n        /* \"#utility.yul\":2447:2650   */\n      jump\n        /* \"contracts/Cardeiro_4_flattened.sol\":20710:20799  if (owner == address(0)) {... */\n    tag_277:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Cardeiro_4_flattened.sol\":20812:20833  spender == address(0) */\n      dup4\n      and\n        /* \"contracts/Cardeiro_4_flattened.sol\":20808:20898  if (spender == address(0)) {... */\n      tag_279\n      jumpi\n        /* \"contracts/Cardeiro_4_flattened.sol\":20856:20887  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"contracts/Cardeiro_4_flattened.sol\":20884:20885  0 */\n      0x00\n        /* \"contracts/Cardeiro_4_flattened.sol\":20856:20887  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2593:2644   */\n      mstore\n        /* \"#utility.yul\":2566:2584   */\n      0x24\n      add\n        /* \"contracts/Cardeiro_4_flattened.sol\":20856:20887  ERC20InvalidSpender(address(0)) */\n      tag_31\n        /* \"#utility.yul\":2447:2650   */\n      jump\n        /* \"contracts/Cardeiro_4_flattened.sol\":20808:20898  if (spender == address(0)) {... */\n    tag_279:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Cardeiro_4_flattened.sol\":20907:20925  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Cardeiro_4_flattened.sol\":20907:20918  _allowances */\n      0x01\n        /* \"contracts/Cardeiro_4_flattened.sol\":20907:20925  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Cardeiro_4_flattened.sol\":20907:20934  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"contracts/Cardeiro_4_flattened.sol\":20907:20942  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/Cardeiro_4_flattened.sol\":20952:21028  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_269\n      jumpi\n        /* \"contracts/Cardeiro_4_flattened.sol\":21002:21009  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Cardeiro_4_flattened.sol\":20986:21017  Approval(owner, spender, value) */\n      and\n        /* \"contracts/Cardeiro_4_flattened.sol\":20995:21000  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Cardeiro_4_flattened.sol\":20986:21017  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/Cardeiro_4_flattened.sol\":21011:21016  value */\n      dup5\n        /* \"contracts/Cardeiro_4_flattened.sol\":20986:21017  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_282\n      swap2\n        /* \"#utility.yul\":1843:1868   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1831:1833   */\n      0x20\n        /* \"#utility.yul\":1816:1834   */\n      add\n      swap1\n        /* \"#utility.yul\":1697:1874   */\n      jump\n        /* \"contracts/Cardeiro_4_flattened.sol\":20986:21017  Approval(owner, spender, value) */\n    tag_282:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Cardeiro_4_flattened.sol\":20602:21034  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Cardeiro_4_flattened.sol\":16294:16594  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_250:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Cardeiro_4_flattened.sol\":16377:16395  from == address(0) */\n      dup4\n      and\n        /* \"contracts/Cardeiro_4_flattened.sol\":16373:16459  if (from == address(0)) {... */\n      tag_284\n      jumpi\n        /* \"contracts/Cardeiro_4_flattened.sol\":16418:16448  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"contracts/Cardeiro_4_flattened.sol\":16445:16446  0 */\n      0x00\n        /* \"contracts/Cardeiro_4_flattened.sol\":16418:16448  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2593:2644   */\n      mstore\n        /* \"#utility.yul\":2566:2584   */\n      0x24\n      add\n        /* \"contracts/Cardeiro_4_flattened.sol\":16418:16448  ERC20InvalidSender(address(0)) */\n      tag_31\n        /* \"#utility.yul\":2447:2650   */\n      jump\n        /* \"contracts/Cardeiro_4_flattened.sol\":16373:16459  if (from == address(0)) {... */\n    tag_284:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Cardeiro_4_flattened.sol\":16472:16488  to == address(0) */\n      dup3\n      and\n        /* \"contracts/Cardeiro_4_flattened.sol\":16468:16554  if (to == address(0)) {... */\n      tag_286\n      jumpi\n        /* \"contracts/Cardeiro_4_flattened.sol\":16511:16543  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"contracts/Cardeiro_4_flattened.sol\":16540:16541  0 */\n      0x00\n        /* \"contracts/Cardeiro_4_flattened.sol\":16511:16543  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2593:2644   */\n      mstore\n        /* \"#utility.yul\":2566:2584   */\n      0x24\n      add\n        /* \"contracts/Cardeiro_4_flattened.sol\":16511:16543  ERC20InvalidReceiver(address(0)) */\n      tag_31\n        /* \"#utility.yul\":2447:2650   */\n      jump\n        /* \"contracts/Cardeiro_4_flattened.sol\":16468:16554  if (to == address(0)) {... */\n    tag_286:\n        /* \"contracts/Cardeiro_4_flattened.sol\":16563:16587  _update(from, to, value) */\n      tag_244\n        /* \"contracts/Cardeiro_4_flattened.sol\":16571:16575  from */\n      dup4\n        /* \"contracts/Cardeiro_4_flattened.sol\":16577:16579  to */\n      dup4\n        /* \"contracts/Cardeiro_4_flattened.sol\":16581:16586  value */\n      dup4\n        /* \"contracts/Cardeiro_4_flattened.sol\":16909:18016  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_255:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Cardeiro_4_flattened.sol\":16998:17016  from == address(0) */\n      dup4\n      and\n        /* \"contracts/Cardeiro_4_flattened.sol\":16994:17534  if (from == address(0)) {... */\n      tag_290\n      jumpi\n        /* \"contracts/Cardeiro_4_flattened.sol\":17150:17155  value */\n      dup1\n        /* \"contracts/Cardeiro_4_flattened.sol\":17134:17146  _totalSupply */\n      0x02\n      0x00\n        /* \"contracts/Cardeiro_4_flattened.sol\":17134:17155  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_291\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_291:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/Cardeiro_4_flattened.sol\":16994:17534  if (from == address(0)) {... */\n      tag_292\n      swap1\n      pop\n      jump\n    tag_290:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Cardeiro_4_flattened.sol\":17208:17223  _balances[from] */\n      dup4\n      and\n        /* \"contracts/Cardeiro_4_flattened.sol\":17186:17205  uint256 fromBalance */\n      0x00\n        /* \"contracts/Cardeiro_4_flattened.sol\":17208:17223  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Cardeiro_4_flattened.sol\":17241:17260  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"contracts/Cardeiro_4_flattened.sol\":17237:17352  if (fromBalance < value) {... */\n      iszero\n      tag_293\n      jumpi\n        /* \"contracts/Cardeiro_4_flattened.sol\":17287:17337  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6166:6198   */\n      dup6\n      and\n        /* \"contracts/Cardeiro_4_flattened.sol\":17287:17337  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6148:6199   */\n      mstore\n        /* \"#utility.yul\":6215:6233   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":6208:6242   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":6258:6276   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":6251:6285   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":6121:6139   */\n      0x64\n      add\n        /* \"contracts/Cardeiro_4_flattened.sol\":17287:17337  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_31\n        /* \"#utility.yul\":5946:6291   */\n      jump\n        /* \"contracts/Cardeiro_4_flattened.sol\":17237:17352  if (fromBalance < value) {... */\n    tag_293:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Cardeiro_4_flattened.sol\":17472:17487  _balances[from] */\n      dup5\n      and\n        /* \"contracts/Cardeiro_4_flattened.sol\":17472:17481  _balances */\n      0x00\n        /* \"contracts/Cardeiro_4_flattened.sol\":17472:17487  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Cardeiro_4_flattened.sol\":17490:17509  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"contracts/Cardeiro_4_flattened.sol\":17472:17509  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"contracts/Cardeiro_4_flattened.sol\":16994:17534  if (from == address(0)) {... */\n    tag_292:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Cardeiro_4_flattened.sol\":17548:17564  to == address(0) */\n      dup3\n      and\n        /* \"contracts/Cardeiro_4_flattened.sol\":17544:17969  if (to == address(0)) {... */\n      tag_295\n      jumpi\n        /* \"contracts/Cardeiro_4_flattened.sol\":17711:17723  _totalSupply */\n      0x02\n        /* \"contracts/Cardeiro_4_flattened.sol\":17711:17732  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"contracts/Cardeiro_4_flattened.sol\":17544:17969  if (to == address(0)) {... */\n      jump(tag_296)\n    tag_295:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Cardeiro_4_flattened.sol\":17922:17935  _balances[to] */\n      dup3\n      and\n        /* \"contracts/Cardeiro_4_flattened.sol\":17922:17931  _balances */\n      0x00\n        /* \"contracts/Cardeiro_4_flattened.sol\":17922:17935  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Cardeiro_4_flattened.sol\":17922:17944  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"contracts/Cardeiro_4_flattened.sol\":17544:17969  if (to == address(0)) {... */\n    tag_296:\n        /* \"contracts/Cardeiro_4_flattened.sol\":17999:18001  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Cardeiro_4_flattened.sol\":17984:18009  Transfer(from, to, value) */\n      and\n        /* \"contracts/Cardeiro_4_flattened.sol\":17993:17997  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Cardeiro_4_flattened.sol\":17984:18009  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/Cardeiro_4_flattened.sol\":18003:18008  value */\n      dup4\n        /* \"contracts/Cardeiro_4_flattened.sol\":17984:18009  Transfer(from, to, value) */\n      mload(0x40)\n      tag_297\n      swap2\n        /* \"#utility.yul\":1843:1868   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1831:1833   */\n      0x20\n        /* \"#utility.yul\":1816:1834   */\n      add\n      swap1\n        /* \"#utility.yul\":1697:1874   */\n      jump\n        /* \"contracts/Cardeiro_4_flattened.sol\":17984:18009  Transfer(from, to, value) */\n    tag_297:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Cardeiro_4_flattened.sol\":16909:18016  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":368:786   */\n    tag_40:\n        /* \"#utility.yul\":517:519   */\n      0x20\n        /* \"#utility.yul\":506:515   */\n      dup2\n        /* \"#utility.yul\":499:520   */\n      mstore\n        /* \"#utility.yul\":480:484   */\n      0x00\n        /* \"#utility.yul\":549:555   */\n      dup3\n        /* \"#utility.yul\":543:556   */\n      mload\n        /* \"#utility.yul\":592:598   */\n      dup1\n        /* \"#utility.yul\":587:589   */\n      0x20\n        /* \"#utility.yul\":576:585   */\n      dup5\n        /* \"#utility.yul\":572:590   */\n      add\n        /* \"#utility.yul\":565:599   */\n      mstore\n        /* \"#utility.yul\":651:657   */\n      dup1\n        /* \"#utility.yul\":646:648   */\n      0x20\n        /* \"#utility.yul\":638:644   */\n      dup6\n        /* \"#utility.yul\":634:649   */\n      add\n        /* \"#utility.yul\":629:631   */\n      0x40\n        /* \"#utility.yul\":618:627   */\n      dup6\n        /* \"#utility.yul\":614:632   */\n      add\n        /* \"#utility.yul\":608:658   */\n      mcopy\n        /* \"#utility.yul\":707:708   */\n      0x00\n        /* \"#utility.yul\":702:704   */\n      0x40\n        /* \"#utility.yul\":693:699   */\n      dup3\n        /* \"#utility.yul\":682:691   */\n      dup6\n        /* \"#utility.yul\":678:700   */\n      add\n        /* \"#utility.yul\":674:705   */\n      add\n        /* \"#utility.yul\":667:709   */\n      mstore\n        /* \"#utility.yul\":777:779   */\n      0x40\n        /* \"#utility.yul\":770:772   */\n      0x1f\n        /* \"#utility.yul\":766:773   */\n      not\n        /* \"#utility.yul\":761:763   */\n      0x1f\n        /* \"#utility.yul\":753:759   */\n      dup4\n        /* \"#utility.yul\":749:764   */\n      add\n        /* \"#utility.yul\":745:774   */\n      and\n        /* \"#utility.yul\":734:743   */\n      dup5\n        /* \"#utility.yul\":730:775   */\n      add\n        /* \"#utility.yul\":726:780   */\n      add\n        /* \"#utility.yul\":718:780   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":368:786   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":791:964   */\n    tag_298:\n        /* \"#utility.yul\":859:879   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":908:939   */\n      dup2\n      and\n        /* \"#utility.yul\":898:940   */\n      dup2\n      eq\n        /* \"#utility.yul\":888:958   */\n      tag_304\n      jumpi\n        /* \"#utility.yul\":954:955   */\n      0x00\n        /* \"#utility.yul\":951:952   */\n      0x00\n        /* \"#utility.yul\":944:956   */\n      revert\n        /* \"#utility.yul\":888:958   */\n    tag_304:\n        /* \"#utility.yul\":791:964   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":969:1269   */\n    tag_44:\n        /* \"#utility.yul\":1037:1043   */\n      0x00\n        /* \"#utility.yul\":1045:1051   */\n      0x00\n        /* \"#utility.yul\":1098:1100   */\n      0x40\n        /* \"#utility.yul\":1086:1095   */\n      dup4\n        /* \"#utility.yul\":1077:1084   */\n      dup6\n        /* \"#utility.yul\":1073:1096   */\n      sub\n        /* \"#utility.yul\":1069:1101   */\n      slt\n        /* \"#utility.yul\":1066:1118   */\n      iszero\n      tag_306\n      jumpi\n        /* \"#utility.yul\":1114:1115   */\n      0x00\n        /* \"#utility.yul\":1111:1112   */\n      0x00\n        /* \"#utility.yul\":1104:1116   */\n      revert\n        /* \"#utility.yul\":1066:1118   */\n    tag_306:\n        /* \"#utility.yul\":1137:1166   */\n      tag_307\n        /* \"#utility.yul\":1156:1165   */\n      dup4\n        /* \"#utility.yul\":1137:1166   */\n      tag_298\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":1127:1166   */\n      swap5\n        /* \"#utility.yul\":1235:1237   */\n      0x20\n        /* \"#utility.yul\":1220:1238   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1207:1239   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":969:1269   */\n      jump\t// out\n        /* \"#utility.yul\":1466:1692   */\n    tag_51:\n        /* \"#utility.yul\":1525:1531   */\n      0x00\n        /* \"#utility.yul\":1578:1580   */\n      0x20\n        /* \"#utility.yul\":1566:1575   */\n      dup3\n        /* \"#utility.yul\":1557:1564   */\n      dup5\n        /* \"#utility.yul\":1553:1576   */\n      sub\n        /* \"#utility.yul\":1549:1581   */\n      slt\n        /* \"#utility.yul\":1546:1598   */\n      iszero\n      tag_310\n      jumpi\n        /* \"#utility.yul\":1594:1595   */\n      0x00\n        /* \"#utility.yul\":1591:1592   */\n      0x00\n        /* \"#utility.yul\":1584:1596   */\n      revert\n        /* \"#utility.yul\":1546:1598   */\n    tag_310:\n      pop\n        /* \"#utility.yul\":1639:1662   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1466:1692   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1879:2253   */\n    tag_62:\n        /* \"#utility.yul\":1956:1962   */\n      0x00\n        /* \"#utility.yul\":1964:1970   */\n      0x00\n        /* \"#utility.yul\":1972:1978   */\n      0x00\n        /* \"#utility.yul\":2025:2027   */\n      0x60\n        /* \"#utility.yul\":2013:2022   */\n      dup5\n        /* \"#utility.yul\":2004:2011   */\n      dup7\n        /* \"#utility.yul\":2000:2023   */\n      sub\n        /* \"#utility.yul\":1996:2028   */\n      slt\n        /* \"#utility.yul\":1993:2045   */\n      iszero\n      tag_313\n      jumpi\n        /* \"#utility.yul\":2041:2042   */\n      0x00\n        /* \"#utility.yul\":2038:2039   */\n      0x00\n        /* \"#utility.yul\":2031:2043   */\n      revert\n        /* \"#utility.yul\":1993:2045   */\n    tag_313:\n        /* \"#utility.yul\":2064:2093   */\n      tag_314\n        /* \"#utility.yul\":2083:2092   */\n      dup5\n        /* \"#utility.yul\":2064:2093   */\n      tag_298\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":2054:2093   */\n      swap3\n      pop\n        /* \"#utility.yul\":2112:2150   */\n      tag_315\n        /* \"#utility.yul\":2146:2148   */\n      0x20\n        /* \"#utility.yul\":2135:2144   */\n      dup6\n        /* \"#utility.yul\":2131:2149   */\n      add\n        /* \"#utility.yul\":2112:2150   */\n      tag_298\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":1879:2253   */\n      swap3\n      swap6\n        /* \"#utility.yul\":2102:2150   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2219:2221   */\n      0x40\n        /* \"#utility.yul\":2204:2222   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2191:2223   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1879:2253   */\n      jump\t// out\n        /* \"#utility.yul\":2655:2841   */\n    tag_86:\n        /* \"#utility.yul\":2714:2720   */\n      0x00\n        /* \"#utility.yul\":2767:2769   */\n      0x20\n        /* \"#utility.yul\":2755:2764   */\n      dup3\n        /* \"#utility.yul\":2746:2753   */\n      dup5\n        /* \"#utility.yul\":2742:2765   */\n      sub\n        /* \"#utility.yul\":2738:2770   */\n      slt\n        /* \"#utility.yul\":2735:2787   */\n      iszero\n      tag_319\n      jumpi\n        /* \"#utility.yul\":2783:2784   */\n      0x00\n        /* \"#utility.yul\":2780:2781   */\n      0x00\n        /* \"#utility.yul\":2773:2785   */\n      revert\n        /* \"#utility.yul\":2735:2787   */\n    tag_319:\n        /* \"#utility.yul\":2806:2835   */\n      tag_159\n        /* \"#utility.yul\":2825:2834   */\n      dup3\n        /* \"#utility.yul\":2806:2835   */\n      tag_298\n      jump\t// in\n        /* \"#utility.yul\":2846:3192   */\n    tag_128:\n        /* \"#utility.yul\":2914:2920   */\n      0x00\n        /* \"#utility.yul\":2922:2928   */\n      0x00\n        /* \"#utility.yul\":2975:2977   */\n      0x40\n        /* \"#utility.yul\":2963:2972   */\n      dup4\n        /* \"#utility.yul\":2954:2961   */\n      dup6\n        /* \"#utility.yul\":2950:2973   */\n      sub\n        /* \"#utility.yul\":2946:2978   */\n      slt\n        /* \"#utility.yul\":2943:2995   */\n      iszero\n      tag_322\n      jumpi\n        /* \"#utility.yul\":2991:2992   */\n      0x00\n        /* \"#utility.yul\":2988:2989   */\n      0x00\n        /* \"#utility.yul\":2981:2993   */\n      revert\n        /* \"#utility.yul\":2943:2995   */\n    tag_322:\n      pop\n      pop\n        /* \"#utility.yul\":3036:3059   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":3156:3158   */\n      0x20\n        /* \"#utility.yul\":3141:3159   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":3128:3160   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":2846:3192   */\n      jump\t// out\n        /* \"#utility.yul\":3197:3457   */\n    tag_133:\n        /* \"#utility.yul\":3265:3271   */\n      0x00\n        /* \"#utility.yul\":3273:3279   */\n      0x00\n        /* \"#utility.yul\":3326:3328   */\n      0x40\n        /* \"#utility.yul\":3314:3323   */\n      dup4\n        /* \"#utility.yul\":3305:3312   */\n      dup6\n        /* \"#utility.yul\":3301:3324   */\n      sub\n        /* \"#utility.yul\":3297:3329   */\n      slt\n        /* \"#utility.yul\":3294:3346   */\n      iszero\n      tag_324\n      jumpi\n        /* \"#utility.yul\":3342:3343   */\n      0x00\n        /* \"#utility.yul\":3339:3340   */\n      0x00\n        /* \"#utility.yul\":3332:3344   */\n      revert\n        /* \"#utility.yul\":3294:3346   */\n    tag_324:\n        /* \"#utility.yul\":3365:3394   */\n      tag_325\n        /* \"#utility.yul\":3384:3393   */\n      dup4\n        /* \"#utility.yul\":3365:3394   */\n      tag_298\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":3355:3394   */\n      swap2\n      pop\n        /* \"#utility.yul\":3413:3451   */\n      tag_326\n        /* \"#utility.yul\":3447:3449   */\n      0x20\n        /* \"#utility.yul\":3436:3445   */\n      dup5\n        /* \"#utility.yul\":3432:3450   */\n      add\n        /* \"#utility.yul\":3413:3451   */\n      tag_298\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":3403:3451   */\n      swap1\n      pop\n        /* \"#utility.yul\":3197:3457   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3462:3842   */\n    tag_145:\n        /* \"#utility.yul\":3541:3542   */\n      0x01\n        /* \"#utility.yul\":3537:3549   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":3584:3596   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":3605:3666   */\n      tag_328\n      jumpi\n        /* \"#utility.yul\":3659:3663   */\n      0x7f\n        /* \"#utility.yul\":3651:3657   */\n      dup3\n        /* \"#utility.yul\":3647:3664   */\n      and\n        /* \"#utility.yul\":3637:3664   */\n      swap2\n      pop\n        /* \"#utility.yul\":3605:3666   */\n    tag_328:\n        /* \"#utility.yul\":3712:3714   */\n      0x20\n        /* \"#utility.yul\":3704:3710   */\n      dup3\n        /* \"#utility.yul\":3701:3715   */\n      lt\n        /* \"#utility.yul\":3681:3699   */\n      dup2\n        /* \"#utility.yul\":3678:3716   */\n      sub\n        /* \"#utility.yul\":3675:3836   */\n      tag_329\n      jumpi\n        /* \"#utility.yul\":3758:3768   */\n      0x4e487b71\n        /* \"#utility.yul\":3753:3756   */\n      0xe0\n        /* \"#utility.yul\":3749:3769   */\n      shl\n        /* \"#utility.yul\":3746:3747   */\n      0x00\n        /* \"#utility.yul\":3739:3770   */\n      mstore\n        /* \"#utility.yul\":3793:3797   */\n      0x22\n        /* \"#utility.yul\":3790:3791   */\n      0x04\n        /* \"#utility.yul\":3783:3798   */\n      mstore\n        /* \"#utility.yul\":3821:3825   */\n      0x24\n        /* \"#utility.yul\":3818:3819   */\n      0x00\n        /* \"#utility.yul\":3811:3826   */\n      revert\n        /* \"#utility.yul\":3675:3836   */\n    tag_329:\n      pop\n        /* \"#utility.yul\":3462:3842   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3847:3974   */\n    tag_299:\n        /* \"#utility.yul\":3908:3918   */\n      0x4e487b71\n        /* \"#utility.yul\":3903:3906   */\n      0xe0\n        /* \"#utility.yul\":3899:3919   */\n      shl\n        /* \"#utility.yul\":3896:3897   */\n      0x00\n        /* \"#utility.yul\":3889:3920   */\n      mstore\n        /* \"#utility.yul\":3939:3943   */\n      0x11\n        /* \"#utility.yul\":3936:3937   */\n      0x04\n        /* \"#utility.yul\":3929:3944   */\n      mstore\n        /* \"#utility.yul\":3963:3967   */\n      0x24\n        /* \"#utility.yul\":3960:3961   */\n      0x00\n        /* \"#utility.yul\":3953:3968   */\n      revert\n        /* \"#utility.yul\":3979:4147   */\n    tag_158:\n        /* \"#utility.yul\":4052:4061   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":4083:4092   */\n      dup2\n      iszero\n        /* \"#utility.yul\":4100:4115   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":4094:4116   */\n      dup5\n      eq\n        /* \"#utility.yul\":4080:4117   */\n      or\n        /* \"#utility.yul\":4070:4141   */\n      tag_150\n      jumpi\n        /* \"#utility.yul\":4121:4139   */\n      tag_150\n      tag_299\n      jump\t// in\n        /* \"#utility.yul\":4152:4369   */\n    tag_160:\n        /* \"#utility.yul\":4192:4193   */\n      0x00\n        /* \"#utility.yul\":4218:4219   */\n      dup3\n        /* \"#utility.yul\":4208:4340   */\n      tag_335\n      jumpi\n        /* \"#utility.yul\":4262:4272   */\n      0x4e487b71\n        /* \"#utility.yul\":4257:4260   */\n      0xe0\n        /* \"#utility.yul\":4253:4273   */\n      shl\n        /* \"#utility.yul\":4250:4251   */\n      0x00\n        /* \"#utility.yul\":4243:4274   */\n      mstore\n        /* \"#utility.yul\":4297:4301   */\n      0x12\n        /* \"#utility.yul\":4294:4295   */\n      0x04\n        /* \"#utility.yul\":4287:4302   */\n      mstore\n        /* \"#utility.yul\":4325:4329   */\n      0x24\n        /* \"#utility.yul\":4322:4323   */\n      0x00\n        /* \"#utility.yul\":4315:4330   */\n      revert\n        /* \"#utility.yul\":4208:4340   */\n    tag_335:\n      pop\n        /* \"#utility.yul\":4354:4363   */\n      div\n      swap1\n        /* \"#utility.yul\":4152:4369   */\n      jump\t// out\n        /* \"#utility.yul\":4374:4499   */\n    tag_183:\n        /* \"#utility.yul\":4439:4448   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4460:4470   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":4457:4493   */\n      iszero\n      tag_150\n      jumpi\n        /* \"#utility.yul\":4473:4491   */\n      tag_150\n      tag_299\n      jump\t// in\n        /* \"#utility.yul\":5560:5688   */\n    tag_231:\n        /* \"#utility.yul\":5627:5636   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":5648:5659   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":5645:5682   */\n      iszero\n      tag_150\n      jumpi\n        /* \"#utility.yul\":5662:5680   */\n      tag_150\n      tag_299\n      jump\t// in\n\n    auxdata: 0xa26469706673582212202ee59099ffb66578ac65e8eee5e7954b47dffc724569c0748437c12d6790b87264736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1148": {
									"entryPoint": null,
									"id": 1148,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_308": {
									"entryPoint": null,
									"id": 308,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_860": {
									"entryPoint": null,
									"id": 860,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_978": {
									"entryPoint": null,
									"id": 978,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_611": {
									"entryPoint": 598,
									"id": 611,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_956": {
									"entryPoint": 517,
									"id": 956,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_578": {
									"entryPoint": 654,
									"id": 578,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_uint256t_addresst_uint256t_uint256_fromMemory": {
									"entryPoint": 948,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1a7d2fe61ea3b46cf063320d3f94ed24f16b3846a0bb57ef7d22b70acf607e4b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d53bdfa93bb7a76d4743ea30578e2dc0750b008d141205debceac8f0891300eb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f632157a5b36b9e6a1b80a3c79c025445cf465bacf92b036da473b170c3d13d0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1406,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1377,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 1095,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 1039,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1357,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1019,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5517:1",
										"nodeType": "YulBlock",
										"src": "0:5517:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "146:500:1",
													"nodeType": "YulBlock",
													"src": "146:500:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "193:16:1",
																"nodeType": "YulBlock",
																"src": "193:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "202:1:1",
																					"nodeType": "YulLiteral",
																					"src": "202:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "205:1:1",
																					"nodeType": "YulLiteral",
																					"src": "205:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "195:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "195:6:1"
																			},
																			"nativeSrc": "195:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "195:12:1"
																		},
																		"nativeSrc": "195:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "195:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "167:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "167:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "176:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "176:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "163:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "163:3:1"
																		},
																		"nativeSrc": "163:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "163:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "188:3:1",
																		"nodeType": "YulLiteral",
																		"src": "188:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "159:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "159:3:1"
																},
																"nativeSrc": "159:33:1",
																"nodeType": "YulFunctionCall",
																"src": "159:33:1"
															},
															"nativeSrc": "156:53:1",
															"nodeType": "YulIf",
															"src": "156:53:1"
														},
														{
															"nativeSrc": "218:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "218:14:1",
															"value": {
																"kind": "number",
																"nativeSrc": "231:1:1",
																"nodeType": "YulLiteral",
																"src": "231:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "222:5:1",
																	"nodeType": "YulTypedName",
																	"src": "222:5:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "241:25:1",
															"nodeType": "YulAssignment",
															"src": "241:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "256:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "256:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "250:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "250:5:1"
																},
																"nativeSrc": "250:16:1",
																"nodeType": "YulFunctionCall",
																"src": "250:16:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "241:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "241:5:1"
																}
															]
														},
														{
															"nativeSrc": "275:15:1",
															"nodeType": "YulAssignment",
															"src": "275:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "285:5:1",
																"nodeType": "YulIdentifier",
																"src": "285:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "275:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "275:6:1"
																}
															]
														},
														{
															"nativeSrc": "299:40:1",
															"nodeType": "YulVariableDeclaration",
															"src": "299:40:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "324:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "324:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "335:2:1",
																				"nodeType": "YulLiteral",
																				"src": "335:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "320:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "320:3:1"
																		},
																		"nativeSrc": "320:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "320:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "314:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "314:5:1"
																},
																"nativeSrc": "314:25:1",
																"nodeType": "YulFunctionCall",
																"src": "314:25:1"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "303:7:1",
																	"nodeType": "YulTypedName",
																	"src": "303:7:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "406:16:1",
																"nodeType": "YulBlock",
																"src": "406:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "415:1:1",
																					"nodeType": "YulLiteral",
																					"src": "415:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "418:1:1",
																					"nodeType": "YulLiteral",
																					"src": "418:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "408:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:1"
																			},
																			"nativeSrc": "408:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "408:12:1"
																		},
																		"nativeSrc": "408:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "408:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nativeSrc": "361:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "361:7:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value_1",
																						"nativeSrc": "374:7:1",
																						"nodeType": "YulIdentifier",
																						"src": "374:7:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "391:3:1",
																										"nodeType": "YulLiteral",
																										"src": "391:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "396:1:1",
																										"nodeType": "YulLiteral",
																										"src": "396:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "387:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "387:3:1"
																								},
																								"nativeSrc": "387:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "387:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "400:1:1",
																								"nodeType": "YulLiteral",
																								"src": "400:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "383:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "383:3:1"
																						},
																						"nativeSrc": "383:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "383:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "370:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "370:3:1"
																				},
																				"nativeSrc": "370:33:1",
																				"nodeType": "YulFunctionCall",
																				"src": "370:33:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "358:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "358:2:1"
																		},
																		"nativeSrc": "358:46:1",
																		"nodeType": "YulFunctionCall",
																		"src": "358:46:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "351:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "351:6:1"
																},
																"nativeSrc": "351:54:1",
																"nodeType": "YulFunctionCall",
																"src": "351:54:1"
															},
															"nativeSrc": "348:74:1",
															"nodeType": "YulIf",
															"src": "348:74:1"
														},
														{
															"nativeSrc": "431:17:1",
															"nodeType": "YulAssignment",
															"src": "431:17:1",
															"value": {
																"name": "value_1",
																"nativeSrc": "441:7:1",
																"nodeType": "YulIdentifier",
																"src": "441:7:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "431:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "431:6:1"
																}
															]
														},
														{
															"nativeSrc": "457:16:1",
															"nodeType": "YulVariableDeclaration",
															"src": "457:16:1",
															"value": {
																"kind": "number",
																"nativeSrc": "472:1:1",
																"nodeType": "YulLiteral",
																"src": "472:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "461:7:1",
																	"nodeType": "YulTypedName",
																	"src": "461:7:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "482:36:1",
															"nodeType": "YulAssignment",
															"src": "482:36:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "503:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "503:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "514:2:1",
																				"nodeType": "YulLiteral",
																				"src": "514:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "499:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "499:3:1"
																		},
																		"nativeSrc": "499:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "499:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "493:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "493:5:1"
																},
																"nativeSrc": "493:25:1",
																"nodeType": "YulFunctionCall",
																"src": "493:25:1"
															},
															"variableNames": [
																{
																	"name": "value_2",
																	"nativeSrc": "482:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "482:7:1"
																}
															]
														},
														{
															"nativeSrc": "527:17:1",
															"nodeType": "YulAssignment",
															"src": "527:17:1",
															"value": {
																"name": "value_2",
																"nativeSrc": "537:7:1",
																"nodeType": "YulIdentifier",
																"src": "537:7:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "527:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "527:6:1"
																}
															]
														},
														{
															"nativeSrc": "553:16:1",
															"nodeType": "YulVariableDeclaration",
															"src": "553:16:1",
															"value": {
																"kind": "number",
																"nativeSrc": "568:1:1",
																"nodeType": "YulLiteral",
																"src": "568:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nativeSrc": "557:7:1",
																	"nodeType": "YulTypedName",
																	"src": "557:7:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "578:36:1",
															"nodeType": "YulAssignment",
															"src": "578:36:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "599:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "599:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "610:2:1",
																				"nodeType": "YulLiteral",
																				"src": "610:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "595:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "595:3:1"
																		},
																		"nativeSrc": "595:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "595:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "589:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "589:5:1"
																},
																"nativeSrc": "589:25:1",
																"nodeType": "YulFunctionCall",
																"src": "589:25:1"
															},
															"variableNames": [
																{
																	"name": "value_3",
																	"nativeSrc": "578:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "578:7:1"
																}
															]
														},
														{
															"nativeSrc": "623:17:1",
															"nodeType": "YulAssignment",
															"src": "623:17:1",
															"value": {
																"name": "value_3",
																"nativeSrc": "633:7:1",
																"nodeType": "YulIdentifier",
																"src": "633:7:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "623:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "623:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_addresst_uint256t_uint256_fromMemory",
												"nativeSrc": "14:632:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "88:9:1",
														"nodeType": "YulTypedName",
														"src": "88:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "99:7:1",
														"nodeType": "YulTypedName",
														"src": "99:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "111:6:1",
														"nodeType": "YulTypedName",
														"src": "111:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "119:6:1",
														"nodeType": "YulTypedName",
														"src": "119:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "127:6:1",
														"nodeType": "YulTypedName",
														"src": "127:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "135:6:1",
														"nodeType": "YulTypedName",
														"src": "135:6:1",
														"type": ""
													}
												],
												"src": "14:632:1"
											},
											{
												"body": {
													"nativeSrc": "683:95:1",
													"nodeType": "YulBlock",
													"src": "683:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "700:1:1",
																		"nodeType": "YulLiteral",
																		"src": "700:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "707:3:1",
																				"nodeType": "YulLiteral",
																				"src": "707:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "712:10:1",
																				"nodeType": "YulLiteral",
																				"src": "712:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "703:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "703:3:1"
																		},
																		"nativeSrc": "703:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "703:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "693:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "693:6:1"
																},
																"nativeSrc": "693:31:1",
																"nodeType": "YulFunctionCall",
																"src": "693:31:1"
															},
															"nativeSrc": "693:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "693:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "740:1:1",
																		"nodeType": "YulLiteral",
																		"src": "740:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "743:4:1",
																		"nodeType": "YulLiteral",
																		"src": "743:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "733:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "733:6:1"
																},
																"nativeSrc": "733:15:1",
																"nodeType": "YulFunctionCall",
																"src": "733:15:1"
															},
															"nativeSrc": "733:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "733:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "764:1:1",
																		"nodeType": "YulLiteral",
																		"src": "764:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "767:4:1",
																		"nodeType": "YulLiteral",
																		"src": "767:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "757:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "757:6:1"
																},
																"nativeSrc": "757:15:1",
																"nodeType": "YulFunctionCall",
																"src": "757:15:1"
															},
															"nativeSrc": "757:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "757:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "651:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "651:127:1"
											},
											{
												"body": {
													"nativeSrc": "838:325:1",
													"nodeType": "YulBlock",
													"src": "838:325:1",
													"statements": [
														{
															"nativeSrc": "848:22:1",
															"nodeType": "YulAssignment",
															"src": "848:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "862:1:1",
																		"nodeType": "YulLiteral",
																		"src": "862:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "865:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "865:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "858:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "858:3:1"
																},
																"nativeSrc": "858:12:1",
																"nodeType": "YulFunctionCall",
																"src": "858:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "848:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "848:6:1"
																}
															]
														},
														{
															"nativeSrc": "879:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "879:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "909:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "909:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "915:1:1",
																		"nodeType": "YulLiteral",
																		"src": "915:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "905:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "905:3:1"
																},
																"nativeSrc": "905:12:1",
																"nodeType": "YulFunctionCall",
																"src": "905:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "883:18:1",
																	"nodeType": "YulTypedName",
																	"src": "883:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "956:31:1",
																"nodeType": "YulBlock",
																"src": "956:31:1",
																"statements": [
																	{
																		"nativeSrc": "958:27:1",
																		"nodeType": "YulAssignment",
																		"src": "958:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "972:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "972:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "980:4:1",
																					"nodeType": "YulLiteral",
																					"src": "980:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "968:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "968:3:1"
																			},
																			"nativeSrc": "968:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "968:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "958:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "958:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "936:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "936:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "929:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "929:6:1"
																},
																"nativeSrc": "929:26:1",
																"nodeType": "YulFunctionCall",
																"src": "929:26:1"
															},
															"nativeSrc": "926:61:1",
															"nodeType": "YulIf",
															"src": "926:61:1"
														},
														{
															"body": {
																"nativeSrc": "1046:111:1",
																"nodeType": "YulBlock",
																"src": "1046:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1067:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1067:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1074:3:1",
																							"nodeType": "YulLiteral",
																							"src": "1074:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1079:10:1",
																							"nodeType": "YulLiteral",
																							"src": "1079:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1070:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "1070:3:1"
																					},
																					"nativeSrc": "1070:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1070:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1060:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1060:6:1"
																			},
																			"nativeSrc": "1060:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1060:31:1"
																		},
																		"nativeSrc": "1060:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1060:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1111:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1111:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1114:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1114:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1104:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1104:6:1"
																			},
																			"nativeSrc": "1104:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1104:15:1"
																		},
																		"nativeSrc": "1104:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1104:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1139:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1139:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1142:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1142:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1132:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1132:6:1"
																			},
																			"nativeSrc": "1132:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1132:15:1"
																		},
																		"nativeSrc": "1132:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1132:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1002:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "1002:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1025:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1025:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1033:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1033:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1022:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1022:2:1"
																		},
																		"nativeSrc": "1022:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1022:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "999:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "999:2:1"
																},
																"nativeSrc": "999:38:1",
																"nodeType": "YulFunctionCall",
																"src": "999:38:1"
															},
															"nativeSrc": "996:161:1",
															"nodeType": "YulIf",
															"src": "996:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "783:380:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "818:4:1",
														"nodeType": "YulTypedName",
														"src": "818:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "827:6:1",
														"nodeType": "YulTypedName",
														"src": "827:6:1",
														"type": ""
													}
												],
												"src": "783:380:1"
											},
											{
												"body": {
													"nativeSrc": "1224:65:1",
													"nodeType": "YulBlock",
													"src": "1224:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1241:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1241:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "1244:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1244:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1234:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1234:6:1"
																},
																"nativeSrc": "1234:14:1",
																"nodeType": "YulFunctionCall",
																"src": "1234:14:1"
															},
															"nativeSrc": "1234:14:1",
															"nodeType": "YulExpressionStatement",
															"src": "1234:14:1"
														},
														{
															"nativeSrc": "1257:26:1",
															"nodeType": "YulAssignment",
															"src": "1257:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1275:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1275:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1278:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1278:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1265:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "1265:9:1"
																},
																"nativeSrc": "1265:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1265:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1257:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1257:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "1168:121:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1207:3:1",
														"nodeType": "YulTypedName",
														"src": "1207:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1215:4:1",
														"nodeType": "YulTypedName",
														"src": "1215:4:1",
														"type": ""
													}
												],
												"src": "1168:121:1"
											},
											{
												"body": {
													"nativeSrc": "1375:437:1",
													"nodeType": "YulBlock",
													"src": "1375:437:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1408:398:1",
																"nodeType": "YulBlock",
																"src": "1408:398:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1429:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1429:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "1432:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "1432:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1422:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1422:6:1"
																			},
																			"nativeSrc": "1422:16:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1422:16:1"
																		},
																		"nativeSrc": "1422:16:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1422:16:1"
																	},
																	{
																		"nativeSrc": "1451:30:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1451:30:1",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1473:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1473:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1476:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1476:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "1463:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1463:9:1"
																			},
																			"nativeSrc": "1463:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1463:18:1"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "1455:4:1",
																				"nodeType": "YulTypedName",
																				"src": "1455:4:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1494:57:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1494:57:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1517:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "1517:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1527:1:1",
																							"nodeType": "YulLiteral",
																							"src": "1527:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "1534:10:1",
																									"nodeType": "YulIdentifier",
																									"src": "1534:10:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1546:2:1",
																									"nodeType": "YulLiteral",
																									"src": "1546:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1530:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "1530:3:1"
																							},
																							"nativeSrc": "1530:19:1",
																							"nodeType": "YulFunctionCall",
																							"src": "1530:19:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1523:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "1523:3:1"
																					},
																					"nativeSrc": "1523:27:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1523:27:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1513:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1513:3:1"
																			},
																			"nativeSrc": "1513:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1513:38:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "1498:11:1",
																				"nodeType": "YulTypedName",
																				"src": "1498:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1588:23:1",
																			"nodeType": "YulBlock",
																			"src": "1588:23:1",
																			"statements": [
																				{
																					"nativeSrc": "1590:19:1",
																					"nodeType": "YulAssignment",
																					"src": "1590:19:1",
																					"value": {
																						"name": "data",
																						"nativeSrc": "1605:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "1605:4:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "1590:11:1",
																							"nodeType": "YulIdentifier",
																							"src": "1590:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "1570:10:1",
																					"nodeType": "YulIdentifier",
																					"src": "1570:10:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1582:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1582:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1567:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "1567:2:1"
																			},
																			"nativeSrc": "1567:20:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1567:20:1"
																		},
																		"nativeSrc": "1564:47:1",
																		"nodeType": "YulIf",
																		"src": "1564:47:1"
																	},
																	{
																		"nativeSrc": "1624:41:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1624:41:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1638:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "1638:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1648:1:1",
																							"nodeType": "YulLiteral",
																							"src": "1648:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1655:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1655:3:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1660:2:1",
																									"nodeType": "YulLiteral",
																									"src": "1660:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1651:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "1651:3:1"
																							},
																							"nativeSrc": "1651:12:1",
																							"nodeType": "YulFunctionCall",
																							"src": "1651:12:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1644:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "1644:3:1"
																					},
																					"nativeSrc": "1644:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1644:20:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1634:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1634:3:1"
																			},
																			"nativeSrc": "1634:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1634:31:1"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "1628:2:1",
																				"nodeType": "YulTypedName",
																				"src": "1628:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1678:24:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1678:24:1",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1691:11:1",
																			"nodeType": "YulIdentifier",
																			"src": "1691:11:1"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1682:5:1",
																				"nodeType": "YulTypedName",
																				"src": "1682:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1776:20:1",
																			"nodeType": "YulBlock",
																			"src": "1776:20:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1785:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "1785:5:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1792:1:1",
																								"nodeType": "YulLiteral",
																								"src": "1792:1:1",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1778:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "1778:6:1"
																						},
																						"nativeSrc": "1778:16:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1778:16:1"
																					},
																					"nativeSrc": "1778:16:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "1778:16:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1726:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "1726:5:1"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1733:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "1733:2:1"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1723:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "1723:2:1"
																			},
																			"nativeSrc": "1723:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1723:13:1"
																		},
																		"nativeSrc": "1715:81:1",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1737:26:1",
																			"nodeType": "YulBlock",
																			"src": "1737:26:1",
																			"statements": [
																				{
																					"nativeSrc": "1739:22:1",
																					"nodeType": "YulAssignment",
																					"src": "1739:22:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1752:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "1752:5:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1759:1:1",
																								"nodeType": "YulLiteral",
																								"src": "1759:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1748:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1748:3:1"
																						},
																						"nativeSrc": "1748:13:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1748:13:1"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1739:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "1739:5:1"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1719:3:1",
																			"nodeType": "YulBlock",
																			"src": "1719:3:1",
																			"statements": []
																		},
																		"src": "1715:81:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "1391:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1391:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1396:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1396:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1388:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1388:2:1"
																},
																"nativeSrc": "1388:11:1",
																"nodeType": "YulFunctionCall",
																"src": "1388:11:1"
															},
															"nativeSrc": "1385:421:1",
															"nodeType": "YulIf",
															"src": "1385:421:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "1294:518:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "1347:5:1",
														"nodeType": "YulTypedName",
														"src": "1347:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1354:3:1",
														"nodeType": "YulTypedName",
														"src": "1354:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "1359:10:1",
														"nodeType": "YulTypedName",
														"src": "1359:10:1",
														"type": ""
													}
												],
												"src": "1294:518:1"
											},
											{
												"body": {
													"nativeSrc": "1902:81:1",
													"nodeType": "YulBlock",
													"src": "1902:81:1",
													"statements": [
														{
															"nativeSrc": "1912:65:1",
															"nodeType": "YulAssignment",
															"src": "1912:65:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1927:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1927:4:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1945:1:1",
																										"nodeType": "YulLiteral",
																										"src": "1945:1:1",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1948:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "1948:3:1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1941:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1941:3:1"
																								},
																								"nativeSrc": "1941:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "1941:11:1"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1958:1:1",
																										"nodeType": "YulLiteral",
																										"src": "1958:1:1",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1954:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1954:3:1"
																								},
																								"nativeSrc": "1954:6:1",
																								"nodeType": "YulFunctionCall",
																								"src": "1954:6:1"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1937:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1937:3:1"
																						},
																						"nativeSrc": "1937:24:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1937:24:1"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1933:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1933:3:1"
																				},
																				"nativeSrc": "1933:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1933:29:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1923:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1923:3:1"
																		},
																		"nativeSrc": "1923:40:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1923:40:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1969:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1969:1:1",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1972:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1972:3:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1965:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1965:3:1"
																		},
																		"nativeSrc": "1965:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1965:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1920:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1920:2:1"
																},
																"nativeSrc": "1920:57:1",
																"nodeType": "YulFunctionCall",
																"src": "1920:57:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1912:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1912:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1817:166:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1879:4:1",
														"nodeType": "YulTypedName",
														"src": "1879:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1885:3:1",
														"nodeType": "YulTypedName",
														"src": "1885:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1893:4:1",
														"nodeType": "YulTypedName",
														"src": "1893:4:1",
														"type": ""
													}
												],
												"src": "1817:166:1"
											},
											{
												"body": {
													"nativeSrc": "2084:1203:1",
													"nodeType": "YulBlock",
													"src": "2084:1203:1",
													"statements": [
														{
															"nativeSrc": "2094:24:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2094:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2114:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2114:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2108:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2108:5:1"
																},
																"nativeSrc": "2108:10:1",
																"nodeType": "YulFunctionCall",
																"src": "2108:10:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "2098:6:1",
																	"nodeType": "YulTypedName",
																	"src": "2098:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2161:22:1",
																"nodeType": "YulBlock",
																"src": "2161:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2163:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "2163:16:1"
																			},
																			"nativeSrc": "2163:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2163:18:1"
																		},
																		"nativeSrc": "2163:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2163:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2133:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2133:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2149:2:1",
																						"nodeType": "YulLiteral",
																						"src": "2149:2:1",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2153:1:1",
																						"nodeType": "YulLiteral",
																						"src": "2153:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2145:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2145:3:1"
																				},
																				"nativeSrc": "2145:10:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:10:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2157:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2157:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2141:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2141:3:1"
																		},
																		"nativeSrc": "2141:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2141:18:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2130:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2130:2:1"
																},
																"nativeSrc": "2130:30:1",
																"nodeType": "YulFunctionCall",
																"src": "2130:30:1"
															},
															"nativeSrc": "2127:56:1",
															"nodeType": "YulIf",
															"src": "2127:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2236:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2236:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2274:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "2274:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2268:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "2268:5:1"
																				},
																				"nativeSrc": "2268:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2268:11:1"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "2242:25:1",
																			"nodeType": "YulIdentifier",
																			"src": "2242:25:1"
																		},
																		"nativeSrc": "2242:38:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2242:38:1"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "2282:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2282:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "2192:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "2192:43:1"
																},
																"nativeSrc": "2192:97:1",
																"nodeType": "YulFunctionCall",
																"src": "2192:97:1"
															},
															"nativeSrc": "2192:97:1",
															"nodeType": "YulExpressionStatement",
															"src": "2192:97:1"
														},
														{
															"nativeSrc": "2298:18:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2298:18:1",
															"value": {
																"kind": "number",
																"nativeSrc": "2315:1:1",
																"nodeType": "YulLiteral",
																"src": "2315:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2302:9:1",
																	"nodeType": "YulTypedName",
																	"src": "2302:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2325:17:1",
															"nodeType": "YulAssignment",
															"src": "2325:17:1",
															"value": {
																"kind": "number",
																"nativeSrc": "2338:4:1",
																"nodeType": "YulLiteral",
																"src": "2338:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2325:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "2325:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "2388:642:1",
																		"nodeType": "YulBlock",
																		"src": "2388:642:1",
																		"statements": [
																			{
																				"nativeSrc": "2402:35:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2402:35:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "2421:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "2421:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "2433:2:1",
																									"nodeType": "YulLiteral",
																									"src": "2433:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "2429:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "2429:3:1"
																							},
																							"nativeSrc": "2429:7:1",
																							"nodeType": "YulFunctionCall",
																							"src": "2429:7:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "2417:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "2417:3:1"
																					},
																					"nativeSrc": "2417:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2417:20:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "2406:7:1",
																						"nodeType": "YulTypedName",
																						"src": "2406:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2450:49:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2450:49:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2494:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "2494:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "2464:29:1",
																						"nodeType": "YulIdentifier",
																						"src": "2464:29:1"
																					},
																					"nativeSrc": "2464:35:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2464:35:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "2454:6:1",
																						"nodeType": "YulTypedName",
																						"src": "2454:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2512:10:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2512:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2521:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2521:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "2516:1:1",
																						"nodeType": "YulTypedName",
																						"src": "2516:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2592:165:1",
																					"nodeType": "YulBlock",
																					"src": "2592:165:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2617:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "2617:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2635:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "2635:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2640:9:1",
																														"nodeType": "YulIdentifier",
																														"src": "2640:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2631:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "2631:3:1"
																												},
																												"nativeSrc": "2631:19:1",
																												"nodeType": "YulFunctionCall",
																												"src": "2631:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2625:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "2625:5:1"
																										},
																										"nativeSrc": "2625:26:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2625:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2610:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2610:6:1"
																								},
																								"nativeSrc": "2610:42:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2610:42:1"
																							},
																							"nativeSrc": "2610:42:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "2610:42:1"
																						},
																						{
																							"nativeSrc": "2669:24:1",
																							"nodeType": "YulAssignment",
																							"src": "2669:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2683:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "2683:6:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2691:1:1",
																										"nodeType": "YulLiteral",
																										"src": "2691:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2679:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2679:3:1"
																								},
																								"nativeSrc": "2679:14:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2679:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2669:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2669:6:1"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2710:33:1",
																							"nodeType": "YulAssignment",
																							"src": "2710:33:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2727:9:1",
																										"nodeType": "YulIdentifier",
																										"src": "2727:9:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2738:4:1",
																										"nodeType": "YulLiteral",
																										"src": "2738:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2723:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2723:3:1"
																								},
																								"nativeSrc": "2723:20:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2723:20:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2710:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "2710:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "2546:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "2546:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2549:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "2549:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2543:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "2543:2:1"
																					},
																					"nativeSrc": "2543:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2543:14:1"
																				},
																				"nativeSrc": "2535:222:1",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "2558:21:1",
																					"nodeType": "YulBlock",
																					"src": "2558:21:1",
																					"statements": [
																						{
																							"nativeSrc": "2560:17:1",
																							"nodeType": "YulAssignment",
																							"src": "2560:17:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "2569:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "2569:1:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2572:4:1",
																										"nodeType": "YulLiteral",
																										"src": "2572:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2565:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2565:3:1"
																								},
																								"nativeSrc": "2565:12:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2565:12:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "2560:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "2560:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "2539:3:1",
																					"nodeType": "YulBlock",
																					"src": "2539:3:1",
																					"statements": []
																				},
																				"src": "2535:222:1"
																			},
																			{
																				"body": {
																					"nativeSrc": "2805:166:1",
																					"nodeType": "YulBlock",
																					"src": "2805:166:1",
																					"statements": [
																						{
																							"nativeSrc": "2823:43:1",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2823:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2850:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "2850:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2855:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "2855:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2846:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "2846:3:1"
																										},
																										"nativeSrc": "2846:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2846:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2840:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "2840:5:1"
																								},
																								"nativeSrc": "2840:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2840:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2827:9:1",
																									"nodeType": "YulTypedName",
																									"src": "2827:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2890:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "2890:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2902:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "2902:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2929:1:1",
																																				"nodeType": "YulLiteral",
																																				"src": "2929:1:1",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2932:6:1",
																																				"nodeType": "YulIdentifier",
																																				"src": "2932:6:1"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2925:3:1",
																																			"nodeType": "YulIdentifier",
																																			"src": "2925:3:1"
																																		},
																																		"nativeSrc": "2925:14:1",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2925:14:1"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2941:3:1",
																																		"nodeType": "YulLiteral",
																																		"src": "2941:3:1",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2921:3:1",
																																	"nodeType": "YulIdentifier",
																																	"src": "2921:3:1"
																																},
																																"nativeSrc": "2921:24:1",
																																"nodeType": "YulFunctionCall",
																																"src": "2921:24:1"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2951:1:1",
																																		"nodeType": "YulLiteral",
																																		"src": "2951:1:1",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2947:3:1",
																																	"nodeType": "YulIdentifier",
																																	"src": "2947:3:1"
																																},
																																"nativeSrc": "2947:6:1",
																																"nodeType": "YulFunctionCall",
																																"src": "2947:6:1"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2917:3:1",
																															"nodeType": "YulIdentifier",
																															"src": "2917:3:1"
																														},
																														"nativeSrc": "2917:37:1",
																														"nodeType": "YulFunctionCall",
																														"src": "2917:37:1"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2913:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "2913:3:1"
																												},
																												"nativeSrc": "2913:42:1",
																												"nodeType": "YulFunctionCall",
																												"src": "2913:42:1"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2898:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "2898:3:1"
																										},
																										"nativeSrc": "2898:58:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2898:58:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2883:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2883:6:1"
																								},
																								"nativeSrc": "2883:74:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2883:74:1"
																							},
																							"nativeSrc": "2883:74:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "2883:74:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2776:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "2776:7:1"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2785:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "2785:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2773:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "2773:2:1"
																					},
																					"nativeSrc": "2773:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2773:19:1"
																				},
																				"nativeSrc": "2770:201:1",
																				"nodeType": "YulIf",
																				"src": "2770:201:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2991:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "2991:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "3005:1:1",
																											"nodeType": "YulLiteral",
																											"src": "3005:1:1",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "3008:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "3008:6:1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "3001:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "3001:3:1"
																									},
																									"nativeSrc": "3001:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "3001:14:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3017:1:1",
																									"nodeType": "YulLiteral",
																									"src": "3017:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2997:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "2997:3:1"
																							},
																							"nativeSrc": "2997:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "2997:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2984:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2984:6:1"
																					},
																					"nativeSrc": "2984:36:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2984:36:1"
																				},
																				"nativeSrc": "2984:36:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "2984:36:1"
																			}
																		]
																	},
																	"nativeSrc": "2381:649:1",
																	"nodeType": "YulCase",
																	"src": "2381:649:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2386:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2386:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3047:234:1",
																		"nodeType": "YulBlock",
																		"src": "3047:234:1",
																		"statements": [
																			{
																				"nativeSrc": "3061:14:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3061:14:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3074:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3074:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "3065:5:1",
																						"nodeType": "YulTypedName",
																						"src": "3065:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3110:67:1",
																					"nodeType": "YulBlock",
																					"src": "3110:67:1",
																					"statements": [
																						{
																							"nativeSrc": "3128:35:1",
																							"nodeType": "YulAssignment",
																							"src": "3128:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3147:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "3147:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3152:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "3152:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3143:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "3143:3:1"
																										},
																										"nativeSrc": "3143:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "3143:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3137:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "3137:5:1"
																								},
																								"nativeSrc": "3137:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "3137:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "3128:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "3128:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "3091:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "3091:6:1"
																				},
																				"nativeSrc": "3088:89:1",
																				"nodeType": "YulIf",
																				"src": "3088:89:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3197:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "3197:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "3256:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "3256:5:1"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "3263:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "3263:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "3203:52:1",
																								"nodeType": "YulIdentifier",
																								"src": "3203:52:1"
																							},
																							"nativeSrc": "3203:67:1",
																							"nodeType": "YulFunctionCall",
																							"src": "3203:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3190:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3190:6:1"
																					},
																					"nativeSrc": "3190:81:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3190:81:1"
																				},
																				"nativeSrc": "3190:81:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "3190:81:1"
																			}
																		]
																	},
																	"nativeSrc": "3039:242:1",
																	"nodeType": "YulCase",
																	"src": "3039:242:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2361:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2361:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2369:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2369:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2358:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2358:2:1"
																},
																"nativeSrc": "2358:14:1",
																"nodeType": "YulFunctionCall",
																"src": "2358:14:1"
															},
															"nativeSrc": "2351:930:1",
															"nodeType": "YulSwitch",
															"src": "2351:930:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1988:1299:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2069:4:1",
														"nodeType": "YulTypedName",
														"src": "2069:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "2075:3:1",
														"nodeType": "YulTypedName",
														"src": "2075:3:1",
														"type": ""
													}
												],
												"src": "1988:1299:1"
											},
											{
												"body": {
													"nativeSrc": "3393:102:1",
													"nodeType": "YulBlock",
													"src": "3393:102:1",
													"statements": [
														{
															"nativeSrc": "3403:26:1",
															"nodeType": "YulAssignment",
															"src": "3403:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3415:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3415:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3426:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3426:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3411:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3411:3:1"
																},
																"nativeSrc": "3411:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3411:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3403:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3403:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3445:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3445:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3460:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3460:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3476:3:1",
																								"nodeType": "YulLiteral",
																								"src": "3476:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3481:1:1",
																								"nodeType": "YulLiteral",
																								"src": "3481:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3472:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "3472:3:1"
																						},
																						"nativeSrc": "3472:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "3472:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3485:1:1",
																						"nodeType": "YulLiteral",
																						"src": "3485:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3468:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3468:3:1"
																				},
																				"nativeSrc": "3468:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3468:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3456:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3456:3:1"
																		},
																		"nativeSrc": "3456:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3456:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3438:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3438:6:1"
																},
																"nativeSrc": "3438:51:1",
																"nodeType": "YulFunctionCall",
																"src": "3438:51:1"
															},
															"nativeSrc": "3438:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "3438:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3292:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3362:9:1",
														"nodeType": "YulTypedName",
														"src": "3362:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3373:6:1",
														"nodeType": "YulTypedName",
														"src": "3373:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3384:4:1",
														"nodeType": "YulTypedName",
														"src": "3384:4:1",
														"type": ""
													}
												],
												"src": "3292:203:1"
											},
											{
												"body": {
													"nativeSrc": "3674:181:1",
													"nodeType": "YulBlock",
													"src": "3674:181:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3691:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3691:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3702:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3702:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3684:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3684:6:1"
																},
																"nativeSrc": "3684:21:1",
																"nodeType": "YulFunctionCall",
																"src": "3684:21:1"
															},
															"nativeSrc": "3684:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "3684:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3725:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3725:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3736:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3736:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3721:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3721:3:1"
																		},
																		"nativeSrc": "3721:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3721:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3741:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3741:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3714:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3714:6:1"
																},
																"nativeSrc": "3714:30:1",
																"nodeType": "YulFunctionCall",
																"src": "3714:30:1"
															},
															"nativeSrc": "3714:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "3714:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3764:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3764:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3775:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3775:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3760:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3760:3:1"
																		},
																		"nativeSrc": "3760:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3760:18:1"
																	},
																	{
																		"hexValue": "48616c76696e6720726174652063616e6e6f74206578636565642031303025",
																		"kind": "string",
																		"nativeSrc": "3780:33:1",
																		"nodeType": "YulLiteral",
																		"src": "3780:33:1",
																		"type": "",
																		"value": "Halving rate cannot exceed 100%"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3753:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3753:6:1"
																},
																"nativeSrc": "3753:61:1",
																"nodeType": "YulFunctionCall",
																"src": "3753:61:1"
															},
															"nativeSrc": "3753:61:1",
															"nodeType": "YulExpressionStatement",
															"src": "3753:61:1"
														},
														{
															"nativeSrc": "3823:26:1",
															"nodeType": "YulAssignment",
															"src": "3823:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3835:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3835:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3846:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3846:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3831:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3831:3:1"
																},
																"nativeSrc": "3831:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3831:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3823:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3823:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d53bdfa93bb7a76d4743ea30578e2dc0750b008d141205debceac8f0891300eb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3500:355:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3651:9:1",
														"nodeType": "YulTypedName",
														"src": "3651:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3665:4:1",
														"nodeType": "YulTypedName",
														"src": "3665:4:1",
														"type": ""
													}
												],
												"src": "3500:355:1"
											},
											{
												"body": {
													"nativeSrc": "4034:168:1",
													"nodeType": "YulBlock",
													"src": "4034:168:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4051:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4051:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4062:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4062:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4044:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4044:6:1"
																},
																"nativeSrc": "4044:21:1",
																"nodeType": "YulFunctionCall",
																"src": "4044:21:1"
															},
															"nativeSrc": "4044:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "4044:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4085:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4085:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4096:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4096:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4081:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4081:3:1"
																		},
																		"nativeSrc": "4081:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4081:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4101:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4101:2:1",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4074:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4074:6:1"
																},
																"nativeSrc": "4074:30:1",
																"nodeType": "YulFunctionCall",
																"src": "4074:30:1"
															},
															"nativeSrc": "4074:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "4074:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4124:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4124:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4135:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4135:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4120:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4120:3:1"
																		},
																		"nativeSrc": "4120:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4120:18:1"
																	},
																	{
																		"hexValue": "496e74657276616c20746f6f2073686f7274",
																		"kind": "string",
																		"nativeSrc": "4140:20:1",
																		"nodeType": "YulLiteral",
																		"src": "4140:20:1",
																		"type": "",
																		"value": "Interval too short"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4113:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4113:6:1"
																},
																"nativeSrc": "4113:48:1",
																"nodeType": "YulFunctionCall",
																"src": "4113:48:1"
															},
															"nativeSrc": "4113:48:1",
															"nodeType": "YulExpressionStatement",
															"src": "4113:48:1"
														},
														{
															"nativeSrc": "4170:26:1",
															"nodeType": "YulAssignment",
															"src": "4170:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4182:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4182:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4193:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4178:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4178:3:1"
																},
																"nativeSrc": "4178:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4178:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4170:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4170:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1a7d2fe61ea3b46cf063320d3f94ed24f16b3846a0bb57ef7d22b70acf607e4b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3860:342:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4011:9:1",
														"nodeType": "YulTypedName",
														"src": "4011:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4025:4:1",
														"nodeType": "YulTypedName",
														"src": "4025:4:1",
														"type": ""
													}
												],
												"src": "3860:342:1"
											},
											{
												"body": {
													"nativeSrc": "4239:95:1",
													"nodeType": "YulBlock",
													"src": "4239:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4256:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4256:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4263:3:1",
																				"nodeType": "YulLiteral",
																				"src": "4263:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4268:10:1",
																				"nodeType": "YulLiteral",
																				"src": "4268:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "4259:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4259:3:1"
																		},
																		"nativeSrc": "4259:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4259:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4249:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4249:6:1"
																},
																"nativeSrc": "4249:31:1",
																"nodeType": "YulFunctionCall",
																"src": "4249:31:1"
															},
															"nativeSrc": "4249:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "4249:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4296:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4296:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4299:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4299:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4289:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4289:6:1"
																},
																"nativeSrc": "4289:15:1",
																"nodeType": "YulFunctionCall",
																"src": "4289:15:1"
															},
															"nativeSrc": "4289:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "4289:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4320:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4323:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4323:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4313:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4313:6:1"
																},
																"nativeSrc": "4313:15:1",
																"nodeType": "YulFunctionCall",
																"src": "4313:15:1"
															},
															"nativeSrc": "4313:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "4313:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4207:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "4207:127:1"
											},
											{
												"body": {
													"nativeSrc": "4391:116:1",
													"nodeType": "YulBlock",
													"src": "4391:116:1",
													"statements": [
														{
															"nativeSrc": "4401:20:1",
															"nodeType": "YulAssignment",
															"src": "4401:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4416:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4416:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4419:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4419:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4412:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4412:3:1"
																},
																"nativeSrc": "4412:9:1",
																"nodeType": "YulFunctionCall",
																"src": "4412:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "4401:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "4401:7:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4479:22:1",
																"nodeType": "YulBlock",
																"src": "4479:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4481:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "4481:16:1"
																			},
																			"nativeSrc": "4481:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4481:18:1"
																		},
																		"nativeSrc": "4481:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4481:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "4450:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "4450:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4443:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "4443:6:1"
																				},
																				"nativeSrc": "4443:9:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4443:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "4457:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "4457:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "4464:7:1",
																								"nodeType": "YulIdentifier",
																								"src": "4464:7:1"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "4473:1:1",
																								"nodeType": "YulIdentifier",
																								"src": "4473:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "4460:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "4460:3:1"
																						},
																						"nativeSrc": "4460:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "4460:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "4454:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "4454:2:1"
																				},
																				"nativeSrc": "4454:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4454:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "4440:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "4440:2:1"
																		},
																		"nativeSrc": "4440:37:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4440:37:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4433:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4433:6:1"
																},
																"nativeSrc": "4433:45:1",
																"nodeType": "YulFunctionCall",
																"src": "4433:45:1"
															},
															"nativeSrc": "4430:71:1",
															"nodeType": "YulIf",
															"src": "4430:71:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "4339:168:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4370:1:1",
														"nodeType": "YulTypedName",
														"src": "4370:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4373:1:1",
														"nodeType": "YulTypedName",
														"src": "4373:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "4379:7:1",
														"nodeType": "YulTypedName",
														"src": "4379:7:1",
														"type": ""
													}
												],
												"src": "4339:168:1"
											},
											{
												"body": {
													"nativeSrc": "4686:167:1",
													"nodeType": "YulBlock",
													"src": "4686:167:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4703:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4703:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4714:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4714:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4696:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4696:6:1"
																},
																"nativeSrc": "4696:21:1",
																"nodeType": "YulFunctionCall",
																"src": "4696:21:1"
															},
															"nativeSrc": "4696:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "4696:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4737:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4737:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4748:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4748:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4733:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4733:3:1"
																		},
																		"nativeSrc": "4733:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4733:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4753:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4753:2:1",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4726:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4726:6:1"
																},
																"nativeSrc": "4726:30:1",
																"nodeType": "YulFunctionCall",
																"src": "4726:30:1"
															},
															"nativeSrc": "4726:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "4726:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4776:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4776:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4787:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4787:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4772:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4772:3:1"
																		},
																		"nativeSrc": "4772:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4772:18:1"
																	},
																	{
																		"hexValue": "496e74657276616c20746f6f206c6f6e67",
																		"kind": "string",
																		"nativeSrc": "4792:19:1",
																		"nodeType": "YulLiteral",
																		"src": "4792:19:1",
																		"type": "",
																		"value": "Interval too long"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4765:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4765:6:1"
																},
																"nativeSrc": "4765:47:1",
																"nodeType": "YulFunctionCall",
																"src": "4765:47:1"
															},
															"nativeSrc": "4765:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "4765:47:1"
														},
														{
															"nativeSrc": "4821:26:1",
															"nodeType": "YulAssignment",
															"src": "4821:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4833:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4833:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4844:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4844:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4829:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4829:3:1"
																},
																"nativeSrc": "4829:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4829:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4821:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4821:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f632157a5b36b9e6a1b80a3c79c025445cf465bacf92b036da473b170c3d13d0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4512:341:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4663:9:1",
														"nodeType": "YulTypedName",
														"src": "4663:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4677:4:1",
														"nodeType": "YulTypedName",
														"src": "4677:4:1",
														"type": ""
													}
												],
												"src": "4512:341:1"
											},
											{
												"body": {
													"nativeSrc": "4906:77:1",
													"nodeType": "YulBlock",
													"src": "4906:77:1",
													"statements": [
														{
															"nativeSrc": "4916:16:1",
															"nodeType": "YulAssignment",
															"src": "4916:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4927:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4927:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4930:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4930:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4923:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4923:3:1"
																},
																"nativeSrc": "4923:9:1",
																"nodeType": "YulFunctionCall",
																"src": "4923:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4916:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4916:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4955:22:1",
																"nodeType": "YulBlock",
																"src": "4955:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4957:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "4957:16:1"
																			},
																			"nativeSrc": "4957:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4957:18:1"
																		},
																		"nativeSrc": "4957:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4957:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4947:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4947:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4950:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4950:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4944:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4944:2:1"
																},
																"nativeSrc": "4944:10:1",
																"nodeType": "YulFunctionCall",
																"src": "4944:10:1"
															},
															"nativeSrc": "4941:36:1",
															"nodeType": "YulIf",
															"src": "4941:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4858:125:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4889:1:1",
														"nodeType": "YulTypedName",
														"src": "4889:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4892:1:1",
														"nodeType": "YulTypedName",
														"src": "4892:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4898:3:1",
														"nodeType": "YulTypedName",
														"src": "4898:3:1",
														"type": ""
													}
												],
												"src": "4858:125:1"
											},
											{
												"body": {
													"nativeSrc": "5145:188:1",
													"nodeType": "YulBlock",
													"src": "5145:188:1",
													"statements": [
														{
															"nativeSrc": "5155:26:1",
															"nodeType": "YulAssignment",
															"src": "5155:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5167:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5167:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5178:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5178:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5163:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5163:3:1"
																},
																"nativeSrc": "5163:18:1",
																"nodeType": "YulFunctionCall",
																"src": "5163:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5155:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5155:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5197:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5197:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5212:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5212:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5228:3:1",
																								"nodeType": "YulLiteral",
																								"src": "5228:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5233:1:1",
																								"nodeType": "YulLiteral",
																								"src": "5233:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5224:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "5224:3:1"
																						},
																						"nativeSrc": "5224:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "5224:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5237:1:1",
																						"nodeType": "YulLiteral",
																						"src": "5237:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5220:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5220:3:1"
																				},
																				"nativeSrc": "5220:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5220:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5208:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5208:3:1"
																		},
																		"nativeSrc": "5208:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5208:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5190:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5190:6:1"
																},
																"nativeSrc": "5190:51:1",
																"nodeType": "YulFunctionCall",
																"src": "5190:51:1"
															},
															"nativeSrc": "5190:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "5190:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5261:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5261:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5272:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5272:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5257:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5257:3:1"
																		},
																		"nativeSrc": "5257:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5257:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5277:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5277:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5250:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5250:6:1"
																},
																"nativeSrc": "5250:34:1",
																"nodeType": "YulFunctionCall",
																"src": "5250:34:1"
															},
															"nativeSrc": "5250:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "5250:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5304:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5304:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5315:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5315:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5300:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5300:3:1"
																		},
																		"nativeSrc": "5300:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5300:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "5320:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5320:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5293:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5293:6:1"
																},
																"nativeSrc": "5293:34:1",
																"nodeType": "YulFunctionCall",
																"src": "5293:34:1"
															},
															"nativeSrc": "5293:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "5293:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "4988:345:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5098:9:1",
														"nodeType": "YulTypedName",
														"src": "5098:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5109:6:1",
														"nodeType": "YulTypedName",
														"src": "5109:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5117:6:1",
														"nodeType": "YulTypedName",
														"src": "5117:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5125:6:1",
														"nodeType": "YulTypedName",
														"src": "5125:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5136:4:1",
														"nodeType": "YulTypedName",
														"src": "5136:4:1",
														"type": ""
													}
												],
												"src": "4988:345:1"
											},
											{
												"body": {
													"nativeSrc": "5439:76:1",
													"nodeType": "YulBlock",
													"src": "5439:76:1",
													"statements": [
														{
															"nativeSrc": "5449:26:1",
															"nodeType": "YulAssignment",
															"src": "5449:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5461:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5461:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5472:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5472:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5457:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5457:3:1"
																},
																"nativeSrc": "5457:18:1",
																"nodeType": "YulFunctionCall",
																"src": "5457:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5449:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5449:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5491:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5491:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "5502:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5502:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5484:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5484:6:1"
																},
																"nativeSrc": "5484:25:1",
																"nodeType": "YulFunctionCall",
																"src": "5484:25:1"
															},
															"nativeSrc": "5484:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "5484:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5338:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5408:9:1",
														"nodeType": "YulTypedName",
														"src": "5408:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5419:6:1",
														"nodeType": "YulTypedName",
														"src": "5419:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5430:4:1",
														"nodeType": "YulTypedName",
														"src": "5430:4:1",
														"type": ""
													}
												],
												"src": "5338:177:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256t_addresst_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := 0\n        value := mload(headStart)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        if iszero(eq(value_1, and(value_1, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value1 := value_1\n        let value_2 := 0\n        value_2 := mload(add(headStart, 64))\n        value2 := value_2\n        let value_3 := 0\n        value_3 := mload(add(headStart, 96))\n        value3 := value_3\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_d53bdfa93bb7a76d4743ea30578e2dc0750b008d141205debceac8f0891300eb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Halving rate cannot exceed 100%\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1a7d2fe61ea3b46cf063320d3f94ed24f16b3846a0bb57ef7d22b70acf607e4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Interval too short\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_f632157a5b36b9e6a1b80a3c79c025445cf465bacf92b036da473b170c3d13d0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Interval too long\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x13FE CODESIZE SUB DUP1 PUSH2 0x13FE DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0x3B4 JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0x436172646569726F PUSH1 0xC0 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x10D115 PUSH1 0xEA SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x7B SWAP2 SWAP1 PUSH2 0x493 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x88 DUP3 DUP3 PUSH2 0x493 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC2 DUP2 PUSH2 0x205 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x6 SSTORE PUSH1 0x64 DUP2 GT ISZERO PUSH2 0x119 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x48616C76696E6720726174652063616E6E6F7420657863656564203130302500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB0 JUMP JUMPDEST PUSH3 0x15180 DUP3 LT ISZERO PUSH2 0x161 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B9D195C9D985B081D1BDBC81CDA1BDC9D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB0 JUMP JUMPDEST PUSH3 0x15180 PUSH2 0x172 PUSH2 0x16D PUSH1 0x2 PUSH2 0x561 JUMP JUMPDEST PUSH2 0x17C SWAP2 SWAP1 PUSH2 0x561 JUMP JUMPDEST PUSH2 0x187 SWAP1 PUSH1 0x2 PUSH2 0x561 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x1CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E74657276616C20746F6F206C6F6E67 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB0 JUMP JUMPDEST PUSH2 0x1D4 CALLER DUP6 PUSH2 0x256 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x8 SSTORE PUSH1 0xA SSTORE POP TIMESTAMP PUSH1 0x9 SSTORE PUSH2 0x591 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x27F JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB0 JUMP JUMPDEST PUSH2 0x28A PUSH0 DUP4 DUP4 PUSH2 0x28E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2B8 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x57E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x328 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x30A JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0xB0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x344 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x362 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x3A7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3C7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP5 MLOAD PUSH1 0x20 DUP7 ADD MLOAD SWAP1 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3E5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x40 DUP7 ADD MLOAD PUSH1 0x60 SWAP1 SWAP7 ADD MLOAD SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x423 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x441 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x48E JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x46C JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x48B JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x478 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4AC JUMPI PUSH2 0x4AC PUSH2 0x3FB JUMP JUMPDEST PUSH2 0x4C0 DUP2 PUSH2 0x4BA DUP5 SLOAD PUSH2 0x40F JUMP JUMPDEST DUP5 PUSH2 0x447 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4F2 JUMPI PUSH0 DUP4 ISZERO PUSH2 0x4DB JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x48B JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x521 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x501 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x53E JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x578 JUMPI PUSH2 0x578 PUSH2 0x54D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x578 JUMPI PUSH2 0x578 PUSH2 0x54D JUMP JUMPDEST PUSH2 0xE60 DUP1 PUSH2 0x59E PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x143 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x768A4173 GT PUSH2 0xB5 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x40B JUMPI DUP1 PUSH4 0xBBB0B1A6 EQ PUSH2 0x42A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x449 JUMPI DUP1 PUSH4 0xED299016 EQ PUSH2 0x48D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4A1 JUMPI PUSH2 0x191 JUMP JUMPDEST DUP1 PUSH4 0x768A4173 EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0x7E6335F4 EQ PUSH2 0x391 JUMPI DUP1 PUSH4 0x7F51BB1F EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0x8CBB6DF7 EQ PUSH2 0x3C5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3DA JUMPI PUSH2 0x191 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x107 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2A9 JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0x6A47AA06 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x34A JUMPI PUSH2 0x191 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x102B67AB EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x26F JUMPI PUSH2 0x191 JUMP JUMPDEST CALLDATASIZE PUSH2 0x191 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0xA8DED6CADC40C8DECAE640DCDEE840C2C6C6CAE0E8408AA89 PUSH1 0x3B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0xA8DED6CADC40C8DECAE640DCDEE840C2C6C6CAE0E8408AA89 PUSH1 0x3B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x188 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1E9 PUSH2 0x4C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0xC4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x21E PUSH2 0x219 CALLDATASIZE PUSH1 0x4 PUSH2 0xC9F JUMP JUMPDEST PUSH2 0x550 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x239 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x24D PUSH2 0x248 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC7 JUMP JUMPDEST PUSH2 0x569 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x266 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x24D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x21E PUSH2 0x289 CALLDATASIZE PUSH1 0x4 PUSH2 0xCDE JUMP JUMPDEST PUSH2 0x5A0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x299 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH2 0x2C3 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC7 JUMP JUMPDEST PUSH2 0x5C9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x2E9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x24D PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x321 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x24D PUSH2 0x330 CALLDATASIZE PUSH1 0x4 PUSH2 0xD18 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x355 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH2 0x5D6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x369 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x21E PUSH2 0x5E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH2 0x38C CALLDATASIZE PUSH1 0x4 PUSH2 0xC9F JUMP JUMPDEST PUSH2 0x60F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x24D PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH2 0x3C0 CALLDATASIZE PUSH1 0x4 PUSH2 0xD18 JUMP JUMPDEST PUSH2 0x628 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x24D PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x402 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1E9 PUSH2 0x652 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x416 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x21E PUSH2 0x425 CALLDATASIZE PUSH1 0x4 PUSH2 0xC9F JUMP JUMPDEST PUSH2 0x661 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x435 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH2 0x444 CALLDATASIZE PUSH1 0x4 PUSH2 0xD31 JUMP JUMPDEST PUSH2 0x681 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x454 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x24D PUSH2 0x463 CALLDATASIZE PUSH1 0x4 PUSH2 0xD51 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x498 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH2 0x725 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH2 0x4BB CALLDATASIZE PUSH1 0x4 PUSH2 0xD18 JUMP JUMPDEST PUSH2 0x82A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4CF SWAP1 PUSH2 0xD82 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4FB SWAP1 PUSH2 0xD82 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x546 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x51D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x546 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x529 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x55D DUP2 DUP6 DUP6 PUSH2 0x864 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x64 PUSH2 0x58F DUP5 DUP4 PUSH2 0xDCE JUMP JUMPDEST PUSH2 0x599 SWAP2 SWAP1 PUSH2 0xDE5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5A9 PUSH2 0x5E9 JUMP JUMPDEST ISZERO PUSH2 0x5B6 JUMPI PUSH2 0x5B6 PUSH2 0x725 JUMP JUMPDEST PUSH2 0x5C1 DUP5 DUP5 DUP5 PUSH2 0x876 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x5D3 CALLER DUP3 PUSH2 0x899 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x5DE PUSH2 0x8CD JUMP JUMPDEST PUSH2 0x5E7 PUSH0 PUSH2 0x8FA JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x708 PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH2 0x5FD SWAP2 SWAP1 PUSH2 0xE04 JUMP JUMPDEST PUSH2 0x607 SWAP2 SWAP1 PUSH2 0xE04 JUMP JUMPDEST TIMESTAMP LT ISZERO SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x61A DUP3 CALLER DUP4 PUSH2 0x94B JUMP JUMPDEST PUSH2 0x624 DUP3 DUP3 PUSH2 0x899 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x630 PUSH2 0x8CD JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x4CF SWAP1 PUSH2 0xD82 JUMP JUMPDEST PUSH0 PUSH2 0x66A PUSH2 0x5E9 JUMP JUMPDEST ISZERO PUSH2 0x677 JUMPI PUSH2 0x677 PUSH2 0x725 JUMP JUMPDEST PUSH2 0x599 DUP4 DUP4 PUSH2 0x9C7 JUMP JUMPDEST PUSH2 0x689 PUSH2 0x8CD JUMP JUMPDEST PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x6D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x48616C76696E67207261746520746F6F206C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x188 JUMP JUMPDEST PUSH1 0x14 DUP2 GT ISZERO PUSH2 0x71A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x90C2D8ECD2DCCE40E4C2E8CA40E8DEDE40D0D2CED PUSH1 0x5B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x188 JUMP JUMPDEST PUSH1 0x8 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0xA SSTORE JUMP JUMPDEST PUSH2 0x72D PUSH2 0x9D4 JUMP JUMPDEST PUSH2 0x735 PUSH2 0x5E9 JUMP JUMPDEST PUSH2 0x781 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x48616C76696E6720696E74657276616C206E6F74207265616368656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x188 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH1 0x64 PUSH1 0xA SLOAD DUP4 PUSH2 0x7AE SWAP2 SWAP1 PUSH2 0xDCE JUMP JUMPDEST PUSH2 0x7B8 SWAP2 SWAP1 PUSH2 0xDE5 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x81E JUMPI PUSH1 0x7 SLOAD PUSH2 0x7D6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH2 0x899 JUMP JUMPDEST PUSH2 0x7E2 PUSH2 0x708 TIMESTAMP PUSH2 0xE17 JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x394823B0BCAF78CD8F5876A52C05DBAB91512A05F5DA2A31E239A11AB66D605F SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP PUSH2 0x5E7 PUSH1 0x1 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0x832 PUSH2 0x8CD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x85B JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x188 JUMP JUMPDEST PUSH2 0x5D3 DUP2 PUSH2 0x8FA JUMP JUMPDEST PUSH2 0x871 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x9FE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x883 DUP6 DUP3 DUP6 PUSH2 0x94B JUMP JUMPDEST PUSH2 0x88E DUP6 DUP6 DUP6 PUSH2 0xAD0 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8C2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x188 JUMP JUMPDEST PUSH2 0x624 DUP3 PUSH0 DUP4 PUSH2 0xB29 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5E7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x188 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 LT ISZERO PUSH2 0x9C1 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x9B3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x188 JUMP JUMPDEST PUSH2 0x9C1 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x9FE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x55D DUP2 DUP6 DUP6 PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x9F7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xA27 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x188 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA50 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x188 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x9C1 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xAC2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xAF9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x188 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB22 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x188 JUMP JUMPDEST PUSH2 0x871 DUP4 DUP4 DUP4 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB53 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB48 SWAP2 SWAP1 PUSH2 0xE04 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xBC3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xBA5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x188 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBDF JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xC42 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC9A JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCB0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xCB9 DUP4 PUSH2 0xC84 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCD7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xCF0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xCF9 DUP5 PUSH2 0xC84 JUMP JUMPDEST SWAP3 POP PUSH2 0xD07 PUSH1 0x20 DUP6 ADD PUSH2 0xC84 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD28 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x599 DUP3 PUSH2 0xC84 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD42 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD62 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xD6B DUP4 PUSH2 0xC84 JUMP JUMPDEST SWAP2 POP PUSH2 0xD79 PUSH1 0x20 DUP5 ADD PUSH2 0xC84 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xD96 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDB4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x563 JUMPI PUSH2 0x563 PUSH2 0xDBA JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xDFF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x563 JUMPI PUSH2 0x563 PUSH2 0xDBA JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x563 JUMPI PUSH2 0x563 PUSH2 0xDBA JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E JUMPF 0x9099 SELFDESTRUCT 0xB6 PUSH6 0x78AC65E8EEE5 SWAPN 0x95 0x4B SELFBALANCE 0xDF 0xFC PUSH19 0x4569C0748437C12D6790B87264736F6C634300 ADDMOD SAR STOP CALLER ",
							"sourceMap": "29600:3967:0:-:0;;;30711:634;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;30885:10;12502:113;;;;;;;;;;;;;-1:-1:-1;;;12502:113:0;;;;;;;;;;;;;;;;-1:-1:-1;;;12502:113:0;;;12576:5;12568;:13;;;;;;:::i;:::-;-1:-1:-1;12591:7:0;:17;12601:7;12591;:17;:::i;:::-;-1:-1:-1;;;;;;;;24185:26:0;;24181:95;;24234:31;;-1:-1:-1;;;24234:31:0;;24262:1;24234:31;;;3438:51:1;3411:18;;24234:31:0;;;;;;;;24181:95;24285:32;24304:12;24285:18;:32::i;:::-;-1:-1:-1;27901:1:0;28105:7;:21;30931:3:::2;30915:19:::0;::::2;;30907:63;;;::::0;-1:-1:-1;;;30907:63:0;;3702:2:1;30907:63:0::2;::::0;::::2;3684:21:1::0;3741:2;3721:18;;;3714:30;3780:33;3760:18;;;3753:61;3831:18;;30907:63:0::2;3500:355:1::0;30907:63:0::2;30218:5;30988:16;:35;;30980:66;;;::::0;-1:-1:-1;;;30980:66:0;;4062:2:1;30980:66:0::2;::::0;::::2;4044:21:1::0;4101:2;4081:18;;;4074:30;-1:-1:-1;;;4120:18:1;;;4113:48;4178:18;;30980:66:0::2;3860:342:1::0;30980:66:0::2;30218:5;30299:16;30165:3;30314:1;30299:16;:::i;:::-;30298:36;;;;:::i;:::-;31084:28;::::0;31111:1:::2;31084:28;:::i;:::-;31064:16;:48;;31056:78;;;::::0;-1:-1:-1;;;31056:78:0;;4714:2:1;31056:78:0::2;::::0;::::2;4696:21:1::0;4753:2;4733:18;;;4726:30;-1:-1:-1;;;4772:18:1;;;4765:47;4829:18;;31056:78:0::2;4512:341:1::0;31056:78:0::2;31153:32;31159:10;31171:13:::0;31153:5:::2;:32::i;:::-;31195:8;:20:::0;;-1:-1:-1;;;;;;31195:20:0::2;-1:-1:-1::0;;;;;31195:20:0;;;::::2;::::0;;;::::2;::::0;;;31225:15:::2;:34:::0;31269:11:::2;:26:::0;-1:-1:-1;31323:15:0::2;31305;:33:::0;29600:3967;;25824:187;25916:6;;;-1:-1:-1;;;;;25932:17:0;;;-1:-1:-1;;;;;;25932:17:0;;;;;;;25964:40;;25916:6;;;25932:17;25916:6;;25964:40;;25897:16;;25964:40;25887:124;25824:187;:::o;18359:208::-;-1:-1:-1;;;;;18429:21:0;;18425:91;;18473:32;;-1:-1:-1;;;18473:32:0;;18502:1;18473:32;;;3438:51:1;3411:18;;18473:32:0;3292:203:1;18425:91:0;18525:35;18541:1;18545:7;18554:5;18525:7;:35::i;:::-;18359:208;;:::o;16909:1107::-;-1:-1:-1;;;;;16998:18:0;;16994:540;;17150:5;17134:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;16994:540:0;;-1:-1:-1;16994:540:0;;-1:-1:-1;;;;;17208:15:0;;17186:19;17208:15;;;;;;;;;;;17241:19;;;17237:115;;;17287:50;;-1:-1:-1;;;17287:50:0;;-1:-1:-1;;;;;5208:32:1;;17287:50:0;;;5190:51:1;5257:18;;;5250:34;;;5300:18;;;5293:34;;;5163:18;;17287:50:0;4988:345:1;17237:115:0;-1:-1:-1;;;;;17472:15:0;;:9;:15;;;;;;;;;;17490:19;;;;17472:37;;16994:540;-1:-1:-1;;;;;17548:16:0;;17544:425;;17711:12;:21;;;;;;;17544:425;;;-1:-1:-1;;;;;17922:13:0;;:9;:13;;;;;;;;;;:22;;;;;;17544:425;17999:2;-1:-1:-1;;;;;17984:25:0;17993:4;-1:-1:-1;;;;;17984:25:0;;18003:5;17984:25;;;;5484::1;;5472:2;5457:18;;5338:177;17984:25:0;;;;;;;;16909:1107;;;:::o;14:632:1:-;111:6;119;127;135;188:3;176:9;167:7;163:23;159:33;156:53;;;205:1;202;195:12;156:53;250:16;;335:2;320:18;;314:25;250:16;;-1:-1:-1;;;;;;370:33:1;;358:46;;348:74;;418:1;415;408:12;348:74;514:2;499:18;;493:25;610:2;595:18;;;589:25;14:632;;441:7;;-1:-1:-1;14:632:1;-1:-1:-1;;;14:632:1:o;651:127::-;712:10;707:3;703:20;700:1;693:31;743:4;740:1;733:15;767:4;764:1;757:15;783:380;862:1;858:12;;;;905;;;926:61;;980:4;972:6;968:17;958:27;;926:61;1033:2;1025:6;1022:14;1002:18;999:38;996:161;;1079:10;1074:3;1070:20;1067:1;1060:31;1114:4;1111:1;1104:15;1142:4;1139:1;1132:15;996:161;;783:380;;;:::o;1294:518::-;1396:2;1391:3;1388:11;1385:421;;;1432:5;1429:1;1422:16;1476:4;1473:1;1463:18;1546:2;1534:10;1530:19;1527:1;1523:27;1517:4;1513:38;1582:4;1570:10;1567:20;1564:47;;;-1:-1:-1;1605:4:1;1564:47;1660:2;1655:3;1651:12;1648:1;1644:20;1638:4;1634:31;1624:41;;1715:81;1733:2;1726:5;1723:13;1715:81;;;1792:1;1778:16;;1759:1;1748:13;1715:81;;;1719:3;;1385:421;1294:518;;;:::o;1988:1299::-;2108:10;;-1:-1:-1;;;;;2130:30:1;;2127:56;;;2163:18;;:::i;:::-;2192:97;2282:6;2242:38;2274:4;2268:11;2242:38;:::i;:::-;2236:4;2192:97;:::i;:::-;2338:4;2369:2;2358:14;;2386:1;2381:649;;;;3074:1;3091:6;3088:89;;;-1:-1:-1;3143:19:1;;;3137:26;3088:89;-1:-1:-1;;1945:1:1;1941:11;;;1937:24;1933:29;1923:40;1969:1;1965:11;;;1920:57;3190:81;;2351:930;;2381:649;1241:1;1234:14;;;1278:4;1265:18;;-1:-1:-1;;2417:20:1;;;2535:222;2549:7;2546:1;2543:14;2535:222;;;2631:19;;;2625:26;2610:42;;2738:4;2723:20;;;;2691:1;2679:14;;;;2565:12;2535:222;;;2539:3;2785:6;2776:7;2773:19;2770:201;;;2846:19;;;2840:26;-1:-1:-1;;2929:1:1;2925:14;;;2941:3;2921:24;2917:37;2913:42;2898:58;2883:74;;2770:201;-1:-1:-1;;;;3017:1:1;3001:14;;;2997:22;2984:36;;-1:-1:-1;1988:1299:1:o;4207:127::-;4268:10;4263:3;4259:20;4256:1;4249:31;4299:4;4296:1;4289:15;4323:4;4320:1;4313:15;4339:168;4412:9;;;4443;;4460:15;;;4454:22;;4440:37;4430:71;;4481:18;;:::i;:::-;4339:168;;;;:::o;4858:125::-;4923:9;;;4944:10;;;4941:36;;;4957:18;;:::i;5338:177::-;29600:3967:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_1328": {
									"entryPoint": null,
									"id": 1328,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1336": {
									"entryPoint": null,
									"id": 1336,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_662": {
									"entryPoint": 2148,
									"id": 662,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_722": {
									"entryPoint": 2558,
									"id": 722,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_644": {
									"entryPoint": 2201,
									"id": 644,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_894": {
									"entryPoint": 2253,
									"id": 894,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_111": {
									"entryPoint": null,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_1013": {
									"entryPoint": null,
									"id": 1013,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_1005": {
									"entryPoint": 2516,
									"id": 1005,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_770": {
									"entryPoint": 2379,
									"id": 770,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_956": {
									"entryPoint": 2298,
									"id": 956,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_501": {
									"entryPoint": 2768,
									"id": 501,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_578": {
									"entryPoint": 2857,
									"id": 578,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_398": {
									"entryPoint": null,
									"id": 398,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_422": {
									"entryPoint": 1360,
									"id": 422,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_357": {
									"entryPoint": null,
									"id": 357,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_811": {
									"entryPoint": 1551,
									"id": 811,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_790": {
									"entryPoint": 1481,
									"id": 790,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_335": {
									"entryPoint": null,
									"id": 335,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@executeHalving_1214": {
									"entryPoint": 1829,
									"id": 1214,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getExpectedBurn_1279": {
									"entryPoint": 1385,
									"id": 1279,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@halvingInterval_1038": {
									"entryPoint": null,
									"id": 1038,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@halvingRate_1042": {
									"entryPoint": null,
									"id": 1042,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isHalvingDue_1164": {
									"entryPoint": 1513,
									"id": 1164,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@lastHalvingTime_1040": {
									"entryPoint": null,
									"id": 1040,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_317": {
									"entryPoint": 1216,
									"id": 317,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_877": {
									"entryPoint": null,
									"id": 877,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_908": {
									"entryPoint": 1494,
									"id": 908,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_326": {
									"entryPoint": 1618,
									"id": 326,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_344": {
									"entryPoint": null,
									"id": 344,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1320": {
									"entryPoint": 1440,
									"id": 1320,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferFrom_454": {
									"entryPoint": 2166,
									"id": 454,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_936": {
									"entryPoint": 2090,
									"id": 936,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_1298": {
									"entryPoint": 1633,
									"id": 1298,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transfer_381": {
									"entryPoint": 2503,
									"id": 381,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@treasury_1036": {
									"entryPoint": null,
									"id": 1036,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateHalvingParams_1246": {
									"entryPoint": 1665,
									"id": 1246,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@updateTreasury_1258": {
									"entryPoint": 1576,
									"id": 1258,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 3204,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3352,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3409,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3294,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3231,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3271,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 3377,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3151,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2e96fdf67c9a0dad3ac1d60e5f88d1dea6af5eff3e2029d19a787ff8fa105135__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_78c4f9f3f3ed4ed6c78e4a6a7613e359adf3a3d4265b99c6653232671bf676f8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d6ef7acea0261efd64d5d7c6dec050eec6b82a90a97a4ff7324326876f46a190__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d9685d7b83f94a8526cd378518e03ae5cdd64f3bc22b0ae59b808c415888bde8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3588,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3557,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3534,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3607,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 3458,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3514,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6293:1",
										"nodeType": "YulBlock",
										"src": "0:6293:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "188:175:1",
													"nodeType": "YulBlock",
													"src": "188:175:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "205:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "205:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "216:2:1",
																		"nodeType": "YulLiteral",
																		"src": "216:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "198:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "198:6:1"
																},
																"nativeSrc": "198:21:1",
																"nodeType": "YulFunctionCall",
																"src": "198:21:1"
															},
															"nativeSrc": "198:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "198:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "239:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "239:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "250:2:1",
																				"nodeType": "YulLiteral",
																				"src": "250:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "235:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:1"
																		},
																		"nativeSrc": "235:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "235:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "255:2:1",
																		"nodeType": "YulLiteral",
																		"src": "255:2:1",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "228:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "228:6:1"
																},
																"nativeSrc": "228:30:1",
																"nodeType": "YulFunctionCall",
																"src": "228:30:1"
															},
															"nativeSrc": "228:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "228:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "278:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "278:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "289:2:1",
																				"nodeType": "YulLiteral",
																				"src": "289:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "274:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "274:3:1"
																		},
																		"nativeSrc": "274:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "274:18:1"
																	},
																	{
																		"hexValue": "546f6b656e20646f6573206e6f742061636365707420455448",
																		"kind": "string",
																		"nativeSrc": "294:27:1",
																		"nodeType": "YulLiteral",
																		"src": "294:27:1",
																		"type": "",
																		"value": "Token does not accept ETH"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "267:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "267:6:1"
																},
																"nativeSrc": "267:55:1",
																"nodeType": "YulFunctionCall",
																"src": "267:55:1"
															},
															"nativeSrc": "267:55:1",
															"nodeType": "YulExpressionStatement",
															"src": "267:55:1"
														},
														{
															"nativeSrc": "331:26:1",
															"nodeType": "YulAssignment",
															"src": "331:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "343:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "343:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "354:2:1",
																		"nodeType": "YulLiteral",
																		"src": "354:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "339:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "339:3:1"
																},
																"nativeSrc": "339:18:1",
																"nodeType": "YulFunctionCall",
																"src": "339:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "331:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "331:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d6ef7acea0261efd64d5d7c6dec050eec6b82a90a97a4ff7324326876f46a190__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:349:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "165:9:1",
														"nodeType": "YulTypedName",
														"src": "165:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "179:4:1",
														"nodeType": "YulTypedName",
														"src": "179:4:1",
														"type": ""
													}
												],
												"src": "14:349:1"
											},
											{
												"body": {
													"nativeSrc": "489:297:1",
													"nodeType": "YulBlock",
													"src": "489:297:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "506:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "506:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "517:2:1",
																		"nodeType": "YulLiteral",
																		"src": "517:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "499:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "499:6:1"
																},
																"nativeSrc": "499:21:1",
																"nodeType": "YulFunctionCall",
																"src": "499:21:1"
															},
															"nativeSrc": "499:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "499:21:1"
														},
														{
															"nativeSrc": "529:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "529:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "549:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "549:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "543:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "543:5:1"
																},
																"nativeSrc": "543:13:1",
																"nodeType": "YulFunctionCall",
																"src": "543:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "533:6:1",
																	"nodeType": "YulTypedName",
																	"src": "533:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "576:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "576:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "587:2:1",
																				"nodeType": "YulLiteral",
																				"src": "587:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "572:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "572:3:1"
																		},
																		"nativeSrc": "572:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "572:18:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "592:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "592:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "565:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "565:6:1"
																},
																"nativeSrc": "565:34:1",
																"nodeType": "YulFunctionCall",
																"src": "565:34:1"
															},
															"nativeSrc": "565:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "565:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "618:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "618:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "629:2:1",
																				"nodeType": "YulLiteral",
																				"src": "629:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "614:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "614:3:1"
																		},
																		"nativeSrc": "614:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "614:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "638:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "638:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "646:2:1",
																				"nodeType": "YulLiteral",
																				"src": "646:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "634:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "634:3:1"
																		},
																		"nativeSrc": "634:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "634:15:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "651:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "651:6:1"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "608:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "608:5:1"
																},
																"nativeSrc": "608:50:1",
																"nodeType": "YulFunctionCall",
																"src": "608:50:1"
															},
															"nativeSrc": "608:50:1",
															"nodeType": "YulExpressionStatement",
															"src": "608:50:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "682:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "682:9:1"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "693:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "693:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "678:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "678:3:1"
																				},
																				"nativeSrc": "678:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "678:22:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "702:2:1",
																				"nodeType": "YulLiteral",
																				"src": "702:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "674:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "674:3:1"
																		},
																		"nativeSrc": "674:31:1",
																		"nodeType": "YulFunctionCall",
																		"src": "674:31:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "707:1:1",
																		"nodeType": "YulLiteral",
																		"src": "707:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "667:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:1"
																},
																"nativeSrc": "667:42:1",
																"nodeType": "YulFunctionCall",
																"src": "667:42:1"
															},
															"nativeSrc": "667:42:1",
															"nodeType": "YulExpressionStatement",
															"src": "667:42:1"
														},
														{
															"nativeSrc": "718:62:1",
															"nodeType": "YulAssignment",
															"src": "718:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "734:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "734:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "753:6:1",
																								"nodeType": "YulIdentifier",
																								"src": "753:6:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "761:2:1",
																								"nodeType": "YulLiteral",
																								"src": "761:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "749:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "749:3:1"
																						},
																						"nativeSrc": "749:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "749:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "770:2:1",
																								"nodeType": "YulLiteral",
																								"src": "770:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "766:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "766:3:1"
																						},
																						"nativeSrc": "766:7:1",
																						"nodeType": "YulFunctionCall",
																						"src": "766:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "745:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "745:3:1"
																				},
																				"nativeSrc": "745:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "745:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "730:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "730:3:1"
																		},
																		"nativeSrc": "730:45:1",
																		"nodeType": "YulFunctionCall",
																		"src": "730:45:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "777:2:1",
																		"nodeType": "YulLiteral",
																		"src": "777:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "726:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "726:3:1"
																},
																"nativeSrc": "726:54:1",
																"nodeType": "YulFunctionCall",
																"src": "726:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "718:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "718:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "368:418:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "458:9:1",
														"nodeType": "YulTypedName",
														"src": "458:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "469:6:1",
														"nodeType": "YulTypedName",
														"src": "469:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "480:4:1",
														"nodeType": "YulTypedName",
														"src": "480:4:1",
														"type": ""
													}
												],
												"src": "368:418:1"
											},
											{
												"body": {
													"nativeSrc": "840:124:1",
													"nodeType": "YulBlock",
													"src": "840:124:1",
													"statements": [
														{
															"nativeSrc": "850:29:1",
															"nodeType": "YulAssignment",
															"src": "850:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "872:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "872:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "859:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "859:12:1"
																},
																"nativeSrc": "859:20:1",
																"nodeType": "YulFunctionCall",
																"src": "859:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "850:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "850:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "942:16:1",
																"nodeType": "YulBlock",
																"src": "942:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "951:1:1",
																					"nodeType": "YulLiteral",
																					"src": "951:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "954:1:1",
																					"nodeType": "YulLiteral",
																					"src": "954:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "944:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "944:6:1"
																			},
																			"nativeSrc": "944:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "944:12:1"
																		},
																		"nativeSrc": "944:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "944:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "901:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "901:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "912:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "912:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "927:3:1",
																										"nodeType": "YulLiteral",
																										"src": "927:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "932:1:1",
																										"nodeType": "YulLiteral",
																										"src": "932:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "923:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "923:3:1"
																								},
																								"nativeSrc": "923:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "923:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "936:1:1",
																								"nodeType": "YulLiteral",
																								"src": "936:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "919:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "919:3:1"
																						},
																						"nativeSrc": "919:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "919:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "908:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "908:3:1"
																				},
																				"nativeSrc": "908:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "908:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "898:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "898:2:1"
																		},
																		"nativeSrc": "898:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "898:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "891:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "891:6:1"
																},
																"nativeSrc": "891:50:1",
																"nodeType": "YulFunctionCall",
																"src": "891:50:1"
															},
															"nativeSrc": "888:70:1",
															"nodeType": "YulIf",
															"src": "888:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "791:173:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "819:6:1",
														"nodeType": "YulTypedName",
														"src": "819:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "830:5:1",
														"nodeType": "YulTypedName",
														"src": "830:5:1",
														"type": ""
													}
												],
												"src": "791:173:1"
											},
											{
												"body": {
													"nativeSrc": "1056:213:1",
													"nodeType": "YulBlock",
													"src": "1056:213:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1102:16:1",
																"nodeType": "YulBlock",
																"src": "1102:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1111:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1111:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1114:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1114:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1104:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1104:6:1"
																			},
																			"nativeSrc": "1104:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1104:12:1"
																		},
																		"nativeSrc": "1104:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1104:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1077:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1077:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1086:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1086:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1073:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1073:3:1"
																		},
																		"nativeSrc": "1073:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1073:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1098:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1098:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1069:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1069:3:1"
																},
																"nativeSrc": "1069:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1069:32:1"
															},
															"nativeSrc": "1066:52:1",
															"nodeType": "YulIf",
															"src": "1066:52:1"
														},
														{
															"nativeSrc": "1127:39:1",
															"nodeType": "YulAssignment",
															"src": "1127:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1156:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1156:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1137:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1137:18:1"
																},
																"nativeSrc": "1137:29:1",
																"nodeType": "YulFunctionCall",
																"src": "1137:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1127:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:1"
																}
															]
														},
														{
															"nativeSrc": "1175:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1175:14:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1188:1:1",
																"nodeType": "YulLiteral",
																"src": "1188:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1179:5:1",
																	"nodeType": "YulTypedName",
																	"src": "1179:5:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1198:41:1",
															"nodeType": "YulAssignment",
															"src": "1198:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1224:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1224:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1235:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1235:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1220:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:1"
																		},
																		"nativeSrc": "1220:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1220:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1207:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1207:12:1"
																},
																"nativeSrc": "1207:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1207:32:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1198:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1198:5:1"
																}
															]
														},
														{
															"nativeSrc": "1248:15:1",
															"nodeType": "YulAssignment",
															"src": "1248:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "1258:5:1",
																"nodeType": "YulIdentifier",
																"src": "1258:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1248:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1248:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "969:300:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1014:9:1",
														"nodeType": "YulTypedName",
														"src": "1014:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1025:7:1",
														"nodeType": "YulTypedName",
														"src": "1025:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1037:6:1",
														"nodeType": "YulTypedName",
														"src": "1037:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1045:6:1",
														"nodeType": "YulTypedName",
														"src": "1045:6:1",
														"type": ""
													}
												],
												"src": "969:300:1"
											},
											{
												"body": {
													"nativeSrc": "1369:92:1",
													"nodeType": "YulBlock",
													"src": "1369:92:1",
													"statements": [
														{
															"nativeSrc": "1379:26:1",
															"nodeType": "YulAssignment",
															"src": "1379:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1391:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1391:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1402:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1402:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1387:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1387:3:1"
																},
																"nativeSrc": "1387:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1387:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1379:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1379:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1421:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1421:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1446:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1446:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1439:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "1439:6:1"
																				},
																				"nativeSrc": "1439:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1439:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1432:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1432:6:1"
																		},
																		"nativeSrc": "1432:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1432:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1414:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1414:6:1"
																},
																"nativeSrc": "1414:41:1",
																"nodeType": "YulFunctionCall",
																"src": "1414:41:1"
															},
															"nativeSrc": "1414:41:1",
															"nodeType": "YulExpressionStatement",
															"src": "1414:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1274:187:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1338:9:1",
														"nodeType": "YulTypedName",
														"src": "1338:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1349:6:1",
														"nodeType": "YulTypedName",
														"src": "1349:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1360:4:1",
														"nodeType": "YulTypedName",
														"src": "1360:4:1",
														"type": ""
													}
												],
												"src": "1274:187:1"
											},
											{
												"body": {
													"nativeSrc": "1536:156:1",
													"nodeType": "YulBlock",
													"src": "1536:156:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1582:16:1",
																"nodeType": "YulBlock",
																"src": "1582:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1591:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1591:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1594:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1594:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1584:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1584:6:1"
																			},
																			"nativeSrc": "1584:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1584:12:1"
																		},
																		"nativeSrc": "1584:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1584:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1557:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1557:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1566:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1566:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1553:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1553:3:1"
																		},
																		"nativeSrc": "1553:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1553:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1578:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1578:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1549:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1549:3:1"
																},
																"nativeSrc": "1549:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1549:32:1"
															},
															"nativeSrc": "1546:52:1",
															"nodeType": "YulIf",
															"src": "1546:52:1"
														},
														{
															"nativeSrc": "1607:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1607:14:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1620:1:1",
																"nodeType": "YulLiteral",
																"src": "1620:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1611:5:1",
																	"nodeType": "YulTypedName",
																	"src": "1611:5:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1630:32:1",
															"nodeType": "YulAssignment",
															"src": "1630:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1652:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1652:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1639:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1639:12:1"
																},
																"nativeSrc": "1639:23:1",
																"nodeType": "YulFunctionCall",
																"src": "1639:23:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1630:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1630:5:1"
																}
															]
														},
														{
															"nativeSrc": "1671:15:1",
															"nodeType": "YulAssignment",
															"src": "1671:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "1681:5:1",
																"nodeType": "YulIdentifier",
																"src": "1681:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1671:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1671:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1466:226:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1502:9:1",
														"nodeType": "YulTypedName",
														"src": "1502:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1513:7:1",
														"nodeType": "YulTypedName",
														"src": "1513:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1525:6:1",
														"nodeType": "YulTypedName",
														"src": "1525:6:1",
														"type": ""
													}
												],
												"src": "1466:226:1"
											},
											{
												"body": {
													"nativeSrc": "1798:76:1",
													"nodeType": "YulBlock",
													"src": "1798:76:1",
													"statements": [
														{
															"nativeSrc": "1808:26:1",
															"nodeType": "YulAssignment",
															"src": "1808:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1820:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1820:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1831:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1831:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1816:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1816:3:1"
																},
																"nativeSrc": "1816:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1816:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1808:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1808:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1850:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1850:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1861:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1861:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1843:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1843:6:1"
																},
																"nativeSrc": "1843:25:1",
																"nodeType": "YulFunctionCall",
																"src": "1843:25:1"
															},
															"nativeSrc": "1843:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "1843:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1697:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1767:9:1",
														"nodeType": "YulTypedName",
														"src": "1767:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1778:6:1",
														"nodeType": "YulTypedName",
														"src": "1778:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1789:4:1",
														"nodeType": "YulTypedName",
														"src": "1789:4:1",
														"type": ""
													}
												],
												"src": "1697:177:1"
											},
											{
												"body": {
													"nativeSrc": "1983:270:1",
													"nodeType": "YulBlock",
													"src": "1983:270:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2029:16:1",
																"nodeType": "YulBlock",
																"src": "2029:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2038:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2038:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2041:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2041:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2031:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2031:6:1"
																			},
																			"nativeSrc": "2031:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2031:12:1"
																		},
																		"nativeSrc": "2031:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2031:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2004:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2004:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2013:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2013:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2000:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2000:3:1"
																		},
																		"nativeSrc": "2000:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2000:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2025:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2025:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1996:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1996:3:1"
																},
																"nativeSrc": "1996:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1996:32:1"
															},
															"nativeSrc": "1993:52:1",
															"nodeType": "YulIf",
															"src": "1993:52:1"
														},
														{
															"nativeSrc": "2054:39:1",
															"nodeType": "YulAssignment",
															"src": "2054:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2083:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2083:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2064:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2064:18:1"
																},
																"nativeSrc": "2064:29:1",
																"nodeType": "YulFunctionCall",
																"src": "2064:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2054:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2054:6:1"
																}
															]
														},
														{
															"nativeSrc": "2102:48:1",
															"nodeType": "YulAssignment",
															"src": "2102:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2135:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2135:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2146:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2146:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2131:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2131:3:1"
																		},
																		"nativeSrc": "2131:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2131:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2112:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2112:18:1"
																},
																"nativeSrc": "2112:38:1",
																"nodeType": "YulFunctionCall",
																"src": "2112:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2102:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2102:6:1"
																}
															]
														},
														{
															"nativeSrc": "2159:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2159:14:1",
															"value": {
																"kind": "number",
																"nativeSrc": "2172:1:1",
																"nodeType": "YulLiteral",
																"src": "2172:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2163:5:1",
																	"nodeType": "YulTypedName",
																	"src": "2163:5:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2182:41:1",
															"nodeType": "YulAssignment",
															"src": "2182:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2208:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2208:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2219:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2219:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2204:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2204:3:1"
																		},
																		"nativeSrc": "2204:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2204:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2191:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2191:12:1"
																},
																"nativeSrc": "2191:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2191:32:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2182:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2182:5:1"
																}
															]
														},
														{
															"nativeSrc": "2232:15:1",
															"nodeType": "YulAssignment",
															"src": "2232:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "2242:5:1",
																"nodeType": "YulIdentifier",
																"src": "2242:5:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2232:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2232:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1879:374:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1933:9:1",
														"nodeType": "YulTypedName",
														"src": "1933:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1944:7:1",
														"nodeType": "YulTypedName",
														"src": "1944:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1956:6:1",
														"nodeType": "YulTypedName",
														"src": "1956:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1964:6:1",
														"nodeType": "YulTypedName",
														"src": "1964:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1972:6:1",
														"nodeType": "YulTypedName",
														"src": "1972:6:1",
														"type": ""
													}
												],
												"src": "1879:374:1"
											},
											{
												"body": {
													"nativeSrc": "2355:87:1",
													"nodeType": "YulBlock",
													"src": "2355:87:1",
													"statements": [
														{
															"nativeSrc": "2365:26:1",
															"nodeType": "YulAssignment",
															"src": "2365:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2377:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2377:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2388:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2388:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2373:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2373:3:1"
																},
																"nativeSrc": "2373:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2373:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2365:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2365:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2407:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2407:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2422:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2422:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2430:4:1",
																				"nodeType": "YulLiteral",
																				"src": "2430:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2418:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2418:3:1"
																		},
																		"nativeSrc": "2418:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2418:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2400:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2400:6:1"
																},
																"nativeSrc": "2400:36:1",
																"nodeType": "YulFunctionCall",
																"src": "2400:36:1"
															},
															"nativeSrc": "2400:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "2400:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "2258:184:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2324:9:1",
														"nodeType": "YulTypedName",
														"src": "2324:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2335:6:1",
														"nodeType": "YulTypedName",
														"src": "2335:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2346:4:1",
														"nodeType": "YulTypedName",
														"src": "2346:4:1",
														"type": ""
													}
												],
												"src": "2258:184:1"
											},
											{
												"body": {
													"nativeSrc": "2548:102:1",
													"nodeType": "YulBlock",
													"src": "2548:102:1",
													"statements": [
														{
															"nativeSrc": "2558:26:1",
															"nodeType": "YulAssignment",
															"src": "2558:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2570:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2570:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2581:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2581:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2566:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2566:3:1"
																},
																"nativeSrc": "2566:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2566:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2558:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2558:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2600:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2600:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2615:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2615:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2631:3:1",
																								"nodeType": "YulLiteral",
																								"src": "2631:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2636:1:1",
																								"nodeType": "YulLiteral",
																								"src": "2636:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2627:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "2627:3:1"
																						},
																						"nativeSrc": "2627:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "2627:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2640:1:1",
																						"nodeType": "YulLiteral",
																						"src": "2640:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2623:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2623:3:1"
																				},
																				"nativeSrc": "2623:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2623:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2611:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2611:3:1"
																		},
																		"nativeSrc": "2611:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2611:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2593:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2593:6:1"
																},
																"nativeSrc": "2593:51:1",
																"nodeType": "YulFunctionCall",
																"src": "2593:51:1"
															},
															"nativeSrc": "2593:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "2593:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2447:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2517:9:1",
														"nodeType": "YulTypedName",
														"src": "2517:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2528:6:1",
														"nodeType": "YulTypedName",
														"src": "2528:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2539:4:1",
														"nodeType": "YulTypedName",
														"src": "2539:4:1",
														"type": ""
													}
												],
												"src": "2447:203:1"
											},
											{
												"body": {
													"nativeSrc": "2725:116:1",
													"nodeType": "YulBlock",
													"src": "2725:116:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2771:16:1",
																"nodeType": "YulBlock",
																"src": "2771:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2780:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2780:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2783:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2783:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2773:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2773:6:1"
																			},
																			"nativeSrc": "2773:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2773:12:1"
																		},
																		"nativeSrc": "2773:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2773:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2746:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2746:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2755:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2755:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2742:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2742:3:1"
																		},
																		"nativeSrc": "2742:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2742:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2767:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2767:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2738:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2738:3:1"
																},
																"nativeSrc": "2738:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2738:32:1"
															},
															"nativeSrc": "2735:52:1",
															"nodeType": "YulIf",
															"src": "2735:52:1"
														},
														{
															"nativeSrc": "2796:39:1",
															"nodeType": "YulAssignment",
															"src": "2796:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2825:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2825:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2806:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2806:18:1"
																},
																"nativeSrc": "2806:29:1",
																"nodeType": "YulFunctionCall",
																"src": "2806:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2796:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2796:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2655:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2691:9:1",
														"nodeType": "YulTypedName",
														"src": "2691:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2702:7:1",
														"nodeType": "YulTypedName",
														"src": "2702:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2714:6:1",
														"nodeType": "YulTypedName",
														"src": "2714:6:1",
														"type": ""
													}
												],
												"src": "2655:186:1"
											},
											{
												"body": {
													"nativeSrc": "2933:259:1",
													"nodeType": "YulBlock",
													"src": "2933:259:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2979:16:1",
																"nodeType": "YulBlock",
																"src": "2979:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2988:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2988:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2991:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2991:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2981:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2981:6:1"
																			},
																			"nativeSrc": "2981:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2981:12:1"
																		},
																		"nativeSrc": "2981:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2981:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2954:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2954:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2963:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2963:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2950:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2950:3:1"
																		},
																		"nativeSrc": "2950:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2950:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2975:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2975:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2946:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2946:3:1"
																},
																"nativeSrc": "2946:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2946:32:1"
															},
															"nativeSrc": "2943:52:1",
															"nodeType": "YulIf",
															"src": "2943:52:1"
														},
														{
															"nativeSrc": "3004:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3004:14:1",
															"value": {
																"kind": "number",
																"nativeSrc": "3017:1:1",
																"nodeType": "YulLiteral",
																"src": "3017:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3008:5:1",
																	"nodeType": "YulTypedName",
																	"src": "3008:5:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3027:32:1",
															"nodeType": "YulAssignment",
															"src": "3027:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3049:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3049:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3036:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "3036:12:1"
																},
																"nativeSrc": "3036:23:1",
																"nodeType": "YulFunctionCall",
																"src": "3036:23:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3027:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "3027:5:1"
																}
															]
														},
														{
															"nativeSrc": "3068:15:1",
															"nodeType": "YulAssignment",
															"src": "3068:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "3078:5:1",
																"nodeType": "YulIdentifier",
																"src": "3078:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3068:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3068:6:1"
																}
															]
														},
														{
															"nativeSrc": "3092:16:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3092:16:1",
															"value": {
																"kind": "number",
																"nativeSrc": "3107:1:1",
																"nodeType": "YulLiteral",
																"src": "3107:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "3096:7:1",
																	"nodeType": "YulTypedName",
																	"src": "3096:7:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3117:43:1",
															"nodeType": "YulAssignment",
															"src": "3117:43:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3145:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3145:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3156:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3156:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3141:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3141:3:1"
																		},
																		"nativeSrc": "3141:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3141:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3128:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "3128:12:1"
																},
																"nativeSrc": "3128:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3128:32:1"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "3117:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "3117:7:1"
																}
															]
														},
														{
															"nativeSrc": "3169:17:1",
															"nodeType": "YulAssignment",
															"src": "3169:17:1",
															"value": {
																"name": "value_1",
																"nativeSrc": "3179:7:1",
																"nodeType": "YulIdentifier",
																"src": "3179:7:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3169:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3169:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "2846:346:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2891:9:1",
														"nodeType": "YulTypedName",
														"src": "2891:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2902:7:1",
														"nodeType": "YulTypedName",
														"src": "2902:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2914:6:1",
														"nodeType": "YulTypedName",
														"src": "2914:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2922:6:1",
														"nodeType": "YulTypedName",
														"src": "2922:6:1",
														"type": ""
													}
												],
												"src": "2846:346:1"
											},
											{
												"body": {
													"nativeSrc": "3284:173:1",
													"nodeType": "YulBlock",
													"src": "3284:173:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3330:16:1",
																"nodeType": "YulBlock",
																"src": "3330:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3339:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3339:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3342:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3342:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3332:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3332:6:1"
																			},
																			"nativeSrc": "3332:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3332:12:1"
																		},
																		"nativeSrc": "3332:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3332:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3305:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3305:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3314:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3314:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3301:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3301:3:1"
																		},
																		"nativeSrc": "3301:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3301:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3326:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3326:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3297:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3297:3:1"
																},
																"nativeSrc": "3297:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3297:32:1"
															},
															"nativeSrc": "3294:52:1",
															"nodeType": "YulIf",
															"src": "3294:52:1"
														},
														{
															"nativeSrc": "3355:39:1",
															"nodeType": "YulAssignment",
															"src": "3355:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3384:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3384:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3365:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "3365:18:1"
																},
																"nativeSrc": "3365:29:1",
																"nodeType": "YulFunctionCall",
																"src": "3365:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3355:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3355:6:1"
																}
															]
														},
														{
															"nativeSrc": "3403:48:1",
															"nodeType": "YulAssignment",
															"src": "3403:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3436:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3436:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3447:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3447:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3432:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3432:3:1"
																		},
																		"nativeSrc": "3432:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3432:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3413:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "3413:18:1"
																},
																"nativeSrc": "3413:38:1",
																"nodeType": "YulFunctionCall",
																"src": "3413:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3403:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3403:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "3197:260:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3242:9:1",
														"nodeType": "YulTypedName",
														"src": "3242:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3253:7:1",
														"nodeType": "YulTypedName",
														"src": "3253:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3265:6:1",
														"nodeType": "YulTypedName",
														"src": "3265:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3273:6:1",
														"nodeType": "YulTypedName",
														"src": "3273:6:1",
														"type": ""
													}
												],
												"src": "3197:260:1"
											},
											{
												"body": {
													"nativeSrc": "3517:325:1",
													"nodeType": "YulBlock",
													"src": "3517:325:1",
													"statements": [
														{
															"nativeSrc": "3527:22:1",
															"nodeType": "YulAssignment",
															"src": "3527:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3541:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3541:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "3544:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3544:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3537:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3537:3:1"
																},
																"nativeSrc": "3537:12:1",
																"nodeType": "YulFunctionCall",
																"src": "3537:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3527:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3527:6:1"
																}
															]
														},
														{
															"nativeSrc": "3558:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3558:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3588:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3588:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3594:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3584:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3584:3:1"
																},
																"nativeSrc": "3584:12:1",
																"nodeType": "YulFunctionCall",
																"src": "3584:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "3562:18:1",
																	"nodeType": "YulTypedName",
																	"src": "3562:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3635:31:1",
																"nodeType": "YulBlock",
																"src": "3635:31:1",
																"statements": [
																	{
																		"nativeSrc": "3637:27:1",
																		"nodeType": "YulAssignment",
																		"src": "3637:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "3651:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "3651:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3659:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3659:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3647:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3647:3:1"
																			},
																			"nativeSrc": "3647:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3647:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "3637:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3637:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3615:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "3615:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3608:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3608:6:1"
																},
																"nativeSrc": "3608:26:1",
																"nodeType": "YulFunctionCall",
																"src": "3608:26:1"
															},
															"nativeSrc": "3605:61:1",
															"nodeType": "YulIf",
															"src": "3605:61:1"
														},
														{
															"body": {
																"nativeSrc": "3725:111:1",
																"nodeType": "YulBlock",
																"src": "3725:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3746:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3746:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3753:3:1",
																							"nodeType": "YulLiteral",
																							"src": "3753:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3758:10:1",
																							"nodeType": "YulLiteral",
																							"src": "3758:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3749:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "3749:3:1"
																					},
																					"nativeSrc": "3749:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3749:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3739:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3739:6:1"
																			},
																			"nativeSrc": "3739:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3739:31:1"
																		},
																		"nativeSrc": "3739:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3739:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3790:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3790:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3793:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3793:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3783:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3783:6:1"
																			},
																			"nativeSrc": "3783:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3783:15:1"
																		},
																		"nativeSrc": "3783:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3783:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3818:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3818:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3821:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3821:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3811:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3811:6:1"
																			},
																			"nativeSrc": "3811:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3811:15:1"
																		},
																		"nativeSrc": "3811:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3811:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3681:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "3681:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3704:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3704:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3712:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3712:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3701:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "3701:2:1"
																		},
																		"nativeSrc": "3701:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3701:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "3678:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3678:2:1"
																},
																"nativeSrc": "3678:38:1",
																"nodeType": "YulFunctionCall",
																"src": "3678:38:1"
															},
															"nativeSrc": "3675:161:1",
															"nodeType": "YulIf",
															"src": "3675:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "3462:380:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3497:4:1",
														"nodeType": "YulTypedName",
														"src": "3497:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3506:6:1",
														"nodeType": "YulTypedName",
														"src": "3506:6:1",
														"type": ""
													}
												],
												"src": "3462:380:1"
											},
											{
												"body": {
													"nativeSrc": "3879:95:1",
													"nodeType": "YulBlock",
													"src": "3879:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3896:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3896:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3903:3:1",
																				"nodeType": "YulLiteral",
																				"src": "3903:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3908:10:1",
																				"nodeType": "YulLiteral",
																				"src": "3908:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3899:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3899:3:1"
																		},
																		"nativeSrc": "3899:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3899:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3889:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3889:6:1"
																},
																"nativeSrc": "3889:31:1",
																"nodeType": "YulFunctionCall",
																"src": "3889:31:1"
															},
															"nativeSrc": "3889:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "3889:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3936:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3936:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3939:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3939:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3929:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3929:6:1"
																},
																"nativeSrc": "3929:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3929:15:1"
															},
															"nativeSrc": "3929:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "3929:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3960:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3960:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3963:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3963:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3953:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3953:6:1"
																},
																"nativeSrc": "3953:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3953:15:1"
															},
															"nativeSrc": "3953:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "3953:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3847:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "3847:127:1"
											},
											{
												"body": {
													"nativeSrc": "4031:116:1",
													"nodeType": "YulBlock",
													"src": "4031:116:1",
													"statements": [
														{
															"nativeSrc": "4041:20:1",
															"nodeType": "YulAssignment",
															"src": "4041:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4056:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4056:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4059:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4059:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4052:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4052:3:1"
																},
																"nativeSrc": "4052:9:1",
																"nodeType": "YulFunctionCall",
																"src": "4052:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "4041:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "4041:7:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4119:22:1",
																"nodeType": "YulBlock",
																"src": "4119:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4121:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "4121:16:1"
																			},
																			"nativeSrc": "4121:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4121:18:1"
																		},
																		"nativeSrc": "4121:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4121:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "4090:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "4090:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4083:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "4083:6:1"
																				},
																				"nativeSrc": "4083:9:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4083:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "4097:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "4097:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "4104:7:1",
																								"nodeType": "YulIdentifier",
																								"src": "4104:7:1"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "4113:1:1",
																								"nodeType": "YulIdentifier",
																								"src": "4113:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "4100:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "4100:3:1"
																						},
																						"nativeSrc": "4100:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "4100:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "4094:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "4094:2:1"
																				},
																				"nativeSrc": "4094:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4094:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "4080:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "4080:2:1"
																		},
																		"nativeSrc": "4080:37:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4080:37:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4073:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4073:6:1"
																},
																"nativeSrc": "4073:45:1",
																"nodeType": "YulFunctionCall",
																"src": "4073:45:1"
															},
															"nativeSrc": "4070:71:1",
															"nodeType": "YulIf",
															"src": "4070:71:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "3979:168:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4010:1:1",
														"nodeType": "YulTypedName",
														"src": "4010:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4013:1:1",
														"nodeType": "YulTypedName",
														"src": "4013:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "4019:7:1",
														"nodeType": "YulTypedName",
														"src": "4019:7:1",
														"type": ""
													}
												],
												"src": "3979:168:1"
											},
											{
												"body": {
													"nativeSrc": "4198:171:1",
													"nodeType": "YulBlock",
													"src": "4198:171:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "4229:111:1",
																"nodeType": "YulBlock",
																"src": "4229:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4250:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4250:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "4257:3:1",
																							"nodeType": "YulLiteral",
																							"src": "4257:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4262:10:1",
																							"nodeType": "YulLiteral",
																							"src": "4262:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4253:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "4253:3:1"
																					},
																					"nativeSrc": "4253:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4253:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4243:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4243:6:1"
																			},
																			"nativeSrc": "4243:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4243:31:1"
																		},
																		"nativeSrc": "4243:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4243:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4294:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4294:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4297:4:1",
																					"nodeType": "YulLiteral",
																					"src": "4297:4:1",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4287:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4287:6:1"
																			},
																			"nativeSrc": "4287:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4287:15:1"
																		},
																		"nativeSrc": "4287:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4287:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4322:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4322:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4325:4:1",
																					"nodeType": "YulLiteral",
																					"src": "4325:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4315:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4315:6:1"
																			},
																			"nativeSrc": "4315:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4315:15:1"
																		},
																		"nativeSrc": "4315:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4315:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4218:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4218:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4211:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4211:6:1"
																},
																"nativeSrc": "4211:9:1",
																"nodeType": "YulFunctionCall",
																"src": "4211:9:1"
															},
															"nativeSrc": "4208:132:1",
															"nodeType": "YulIf",
															"src": "4208:132:1"
														},
														{
															"nativeSrc": "4349:14:1",
															"nodeType": "YulAssignment",
															"src": "4349:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4358:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4358:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4361:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4361:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4354:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4354:3:1"
																},
																"nativeSrc": "4354:9:1",
																"nodeType": "YulFunctionCall",
																"src": "4354:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "4349:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "4349:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "4152:217:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4183:1:1",
														"nodeType": "YulTypedName",
														"src": "4183:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4186:1:1",
														"nodeType": "YulTypedName",
														"src": "4186:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "4192:1:1",
														"nodeType": "YulTypedName",
														"src": "4192:1:1",
														"type": ""
													}
												],
												"src": "4152:217:1"
											},
											{
												"body": {
													"nativeSrc": "4422:77:1",
													"nodeType": "YulBlock",
													"src": "4422:77:1",
													"statements": [
														{
															"nativeSrc": "4432:16:1",
															"nodeType": "YulAssignment",
															"src": "4432:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4443:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4443:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4446:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4446:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4439:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4439:3:1"
																},
																"nativeSrc": "4439:9:1",
																"nodeType": "YulFunctionCall",
																"src": "4439:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4432:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4432:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4471:22:1",
																"nodeType": "YulBlock",
																"src": "4471:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4473:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "4473:16:1"
																			},
																			"nativeSrc": "4473:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4473:18:1"
																		},
																		"nativeSrc": "4473:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4473:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4463:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4463:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4466:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4466:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4460:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4460:2:1"
																},
																"nativeSrc": "4460:10:1",
																"nodeType": "YulFunctionCall",
																"src": "4460:10:1"
															},
															"nativeSrc": "4457:36:1",
															"nodeType": "YulIf",
															"src": "4457:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4374:125:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4405:1:1",
														"nodeType": "YulTypedName",
														"src": "4405:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4408:1:1",
														"nodeType": "YulTypedName",
														"src": "4408:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4414:3:1",
														"nodeType": "YulTypedName",
														"src": "4414:3:1",
														"type": ""
													}
												],
												"src": "4374:125:1"
											},
											{
												"body": {
													"nativeSrc": "4678:170:1",
													"nodeType": "YulBlock",
													"src": "4678:170:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4695:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4695:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4706:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4706:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4688:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4688:6:1"
																},
																"nativeSrc": "4688:21:1",
																"nodeType": "YulFunctionCall",
																"src": "4688:21:1"
															},
															"nativeSrc": "4688:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "4688:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4729:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4729:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4740:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4740:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4725:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4725:3:1"
																		},
																		"nativeSrc": "4725:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4725:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4745:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4745:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4718:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4718:6:1"
																},
																"nativeSrc": "4718:30:1",
																"nodeType": "YulFunctionCall",
																"src": "4718:30:1"
															},
															"nativeSrc": "4718:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "4718:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4768:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4768:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4779:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4779:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4764:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4764:3:1"
																		},
																		"nativeSrc": "4764:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4764:18:1"
																	},
																	{
																		"hexValue": "48616c76696e67207261746520746f6f206c6f77",
																		"kind": "string",
																		"nativeSrc": "4784:22:1",
																		"nodeType": "YulLiteral",
																		"src": "4784:22:1",
																		"type": "",
																		"value": "Halving rate too low"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4757:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4757:6:1"
																},
																"nativeSrc": "4757:50:1",
																"nodeType": "YulFunctionCall",
																"src": "4757:50:1"
															},
															"nativeSrc": "4757:50:1",
															"nodeType": "YulExpressionStatement",
															"src": "4757:50:1"
														},
														{
															"nativeSrc": "4816:26:1",
															"nodeType": "YulAssignment",
															"src": "4816:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4828:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4828:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4839:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4839:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4824:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4824:3:1"
																},
																"nativeSrc": "4824:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4824:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4816:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4816:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d9685d7b83f94a8526cd378518e03ae5cdd64f3bc22b0ae59b808c415888bde8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4504:344:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4655:9:1",
														"nodeType": "YulTypedName",
														"src": "4655:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4669:4:1",
														"nodeType": "YulTypedName",
														"src": "4669:4:1",
														"type": ""
													}
												],
												"src": "4504:344:1"
											},
											{
												"body": {
													"nativeSrc": "5027:171:1",
													"nodeType": "YulBlock",
													"src": "5027:171:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5044:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5044:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5055:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5055:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5037:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5037:6:1"
																},
																"nativeSrc": "5037:21:1",
																"nodeType": "YulFunctionCall",
																"src": "5037:21:1"
															},
															"nativeSrc": "5037:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "5037:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5078:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5078:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5089:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5089:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5074:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5074:3:1"
																		},
																		"nativeSrc": "5074:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5074:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5094:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5094:2:1",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5067:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5067:6:1"
																},
																"nativeSrc": "5067:30:1",
																"nodeType": "YulFunctionCall",
																"src": "5067:30:1"
															},
															"nativeSrc": "5067:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "5067:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5117:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5117:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5128:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5128:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5113:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5113:3:1"
																		},
																		"nativeSrc": "5113:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5113:18:1"
																	},
																	{
																		"hexValue": "48616c76696e67207261746520746f6f2068696768",
																		"kind": "string",
																		"nativeSrc": "5133:23:1",
																		"nodeType": "YulLiteral",
																		"src": "5133:23:1",
																		"type": "",
																		"value": "Halving rate too high"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5106:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5106:6:1"
																},
																"nativeSrc": "5106:51:1",
																"nodeType": "YulFunctionCall",
																"src": "5106:51:1"
															},
															"nativeSrc": "5106:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "5106:51:1"
														},
														{
															"nativeSrc": "5166:26:1",
															"nodeType": "YulAssignment",
															"src": "5166:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5178:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5178:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5189:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5189:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5174:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5174:3:1"
																},
																"nativeSrc": "5174:18:1",
																"nodeType": "YulFunctionCall",
																"src": "5174:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5166:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5166:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2e96fdf67c9a0dad3ac1d60e5f88d1dea6af5eff3e2029d19a787ff8fa105135__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4853:345:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5004:9:1",
														"nodeType": "YulTypedName",
														"src": "5004:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5018:4:1",
														"nodeType": "YulTypedName",
														"src": "5018:4:1",
														"type": ""
													}
												],
												"src": "4853:345:1"
											},
											{
												"body": {
													"nativeSrc": "5377:178:1",
													"nodeType": "YulBlock",
													"src": "5377:178:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5394:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5394:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5405:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5405:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5387:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5387:6:1"
																},
																"nativeSrc": "5387:21:1",
																"nodeType": "YulFunctionCall",
																"src": "5387:21:1"
															},
															"nativeSrc": "5387:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "5387:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5428:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5428:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5439:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5439:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5424:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5424:3:1"
																		},
																		"nativeSrc": "5424:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5424:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5444:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5444:2:1",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5417:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5417:6:1"
																},
																"nativeSrc": "5417:30:1",
																"nodeType": "YulFunctionCall",
																"src": "5417:30:1"
															},
															"nativeSrc": "5417:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "5417:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5467:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5467:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5478:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5478:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5463:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5463:3:1"
																		},
																		"nativeSrc": "5463:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5463:18:1"
																	},
																	{
																		"hexValue": "48616c76696e6720696e74657276616c206e6f742072656163686564",
																		"kind": "string",
																		"nativeSrc": "5483:30:1",
																		"nodeType": "YulLiteral",
																		"src": "5483:30:1",
																		"type": "",
																		"value": "Halving interval not reached"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5456:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5456:6:1"
																},
																"nativeSrc": "5456:58:1",
																"nodeType": "YulFunctionCall",
																"src": "5456:58:1"
															},
															"nativeSrc": "5456:58:1",
															"nodeType": "YulExpressionStatement",
															"src": "5456:58:1"
														},
														{
															"nativeSrc": "5523:26:1",
															"nodeType": "YulAssignment",
															"src": "5523:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5535:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5535:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5546:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5546:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5531:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5531:3:1"
																},
																"nativeSrc": "5531:18:1",
																"nodeType": "YulFunctionCall",
																"src": "5531:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5523:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5523:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_78c4f9f3f3ed4ed6c78e4a6a7613e359adf3a3d4265b99c6653232671bf676f8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5203:352:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5354:9:1",
														"nodeType": "YulTypedName",
														"src": "5354:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5368:4:1",
														"nodeType": "YulTypedName",
														"src": "5368:4:1",
														"type": ""
													}
												],
												"src": "5203:352:1"
											},
											{
												"body": {
													"nativeSrc": "5609:79:1",
													"nodeType": "YulBlock",
													"src": "5609:79:1",
													"statements": [
														{
															"nativeSrc": "5619:17:1",
															"nodeType": "YulAssignment",
															"src": "5619:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5631:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "5631:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5634:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "5634:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "5627:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5627:3:1"
																},
																"nativeSrc": "5627:9:1",
																"nodeType": "YulFunctionCall",
																"src": "5627:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "5619:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5619:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5660:22:1",
																"nodeType": "YulBlock",
																"src": "5660:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5662:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "5662:16:1"
																			},
																			"nativeSrc": "5662:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5662:18:1"
																		},
																		"nativeSrc": "5662:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5662:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "5651:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "5651:4:1"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "5657:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "5657:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5648:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "5648:2:1"
																},
																"nativeSrc": "5648:11:1",
																"nodeType": "YulFunctionCall",
																"src": "5648:11:1"
															},
															"nativeSrc": "5645:37:1",
															"nodeType": "YulIf",
															"src": "5645:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "5560:128:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5591:1:1",
														"nodeType": "YulTypedName",
														"src": "5591:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5594:1:1",
														"nodeType": "YulTypedName",
														"src": "5594:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "5600:4:1",
														"nodeType": "YulTypedName",
														"src": "5600:4:1",
														"type": ""
													}
												],
												"src": "5560:128:1"
											},
											{
												"body": {
													"nativeSrc": "5822:119:1",
													"nodeType": "YulBlock",
													"src": "5822:119:1",
													"statements": [
														{
															"nativeSrc": "5832:26:1",
															"nodeType": "YulAssignment",
															"src": "5832:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5844:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5844:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5855:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5855:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5840:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5840:3:1"
																},
																"nativeSrc": "5840:18:1",
																"nodeType": "YulFunctionCall",
																"src": "5840:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5832:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5832:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5874:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5874:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "5885:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5885:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5867:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5867:6:1"
																},
																"nativeSrc": "5867:25:1",
																"nodeType": "YulFunctionCall",
																"src": "5867:25:1"
															},
															"nativeSrc": "5867:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "5867:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5912:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5912:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5923:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5923:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5908:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5908:3:1"
																		},
																		"nativeSrc": "5908:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5908:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5928:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5928:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5901:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5901:6:1"
																},
																"nativeSrc": "5901:34:1",
																"nodeType": "YulFunctionCall",
																"src": "5901:34:1"
															},
															"nativeSrc": "5901:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "5901:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "5693:248:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5783:9:1",
														"nodeType": "YulTypedName",
														"src": "5783:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5794:6:1",
														"nodeType": "YulTypedName",
														"src": "5794:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5802:6:1",
														"nodeType": "YulTypedName",
														"src": "5802:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5813:4:1",
														"nodeType": "YulTypedName",
														"src": "5813:4:1",
														"type": ""
													}
												],
												"src": "5693:248:1"
											},
											{
												"body": {
													"nativeSrc": "6103:188:1",
													"nodeType": "YulBlock",
													"src": "6103:188:1",
													"statements": [
														{
															"nativeSrc": "6113:26:1",
															"nodeType": "YulAssignment",
															"src": "6113:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6125:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6125:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6136:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6136:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6121:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6121:3:1"
																},
																"nativeSrc": "6121:18:1",
																"nodeType": "YulFunctionCall",
																"src": "6121:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6113:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6113:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6155:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6155:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6170:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6170:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6186:3:1",
																								"nodeType": "YulLiteral",
																								"src": "6186:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6191:1:1",
																								"nodeType": "YulLiteral",
																								"src": "6191:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6182:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "6182:3:1"
																						},
																						"nativeSrc": "6182:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "6182:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6195:1:1",
																						"nodeType": "YulLiteral",
																						"src": "6195:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6178:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6178:3:1"
																				},
																				"nativeSrc": "6178:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6178:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6166:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6166:3:1"
																		},
																		"nativeSrc": "6166:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6166:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6148:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6148:6:1"
																},
																"nativeSrc": "6148:51:1",
																"nodeType": "YulFunctionCall",
																"src": "6148:51:1"
															},
															"nativeSrc": "6148:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "6148:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6219:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6219:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6230:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6230:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6215:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6215:3:1"
																		},
																		"nativeSrc": "6215:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6215:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "6235:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6235:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6208:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6208:6:1"
																},
																"nativeSrc": "6208:34:1",
																"nodeType": "YulFunctionCall",
																"src": "6208:34:1"
															},
															"nativeSrc": "6208:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "6208:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6262:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6262:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6273:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6273:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6258:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6258:3:1"
																		},
																		"nativeSrc": "6258:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6258:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "6278:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6278:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6251:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6251:6:1"
																},
																"nativeSrc": "6251:34:1",
																"nodeType": "YulFunctionCall",
																"src": "6251:34:1"
															},
															"nativeSrc": "6251:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "6251:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "5946:345:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6056:9:1",
														"nodeType": "YulTypedName",
														"src": "6056:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6067:6:1",
														"nodeType": "YulTypedName",
														"src": "6067:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6075:6:1",
														"nodeType": "YulTypedName",
														"src": "6075:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6083:6:1",
														"nodeType": "YulTypedName",
														"src": "6083:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6094:4:1",
														"nodeType": "YulTypedName",
														"src": "6094:4:1",
														"type": ""
													}
												],
												"src": "5946:345:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_stringliteral_d6ef7acea0261efd64d5d7c6dec050eec6b82a90a97a4ff7324326876f46a190__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Token does not accept ETH\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_d9685d7b83f94a8526cd378518e03ae5cdd64f3bc22b0ae59b808c415888bde8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Halving rate too low\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2e96fdf67c9a0dad3ac1d60e5f88d1dea6af5eff3e2029d19a787ff8fa105135__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Halving rate too high\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_78c4f9f3f3ed4ed6c78e4a6a7613e359adf3a3d4265b99c6653232671bf676f8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Halving interval not reached\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610143575f3560e01c8063768a4173116100b557806395d89b411161006e57806395d89b41146103f7578063a9059cbb1461040b578063bbb0b1a61461042a578063dd62ed3e14610449578063ed2990161461048d578063f2fde38b146104a157610191565b8063768a41731461035e57806379cc6790146103725780637e6335f4146103915780637f51bb1f146103a65780638cbb6df7146103c55780638da5cb5b146103da57610191565b8063313ce56711610107578063313ce5671461028e57806342966c68146102a957806361d027b3146102ca5780636a47aa061461030157806370a0823114610316578063715018a61461034a57610191565b806306fdde03146101d5578063095ea7b3146101ff578063102b67ab1461022e57806318160ddd1461025b57806323b872dd1461026f57610191565b366101915760405162461bcd60e51b81526020600482015260196024820152780a8ded6cadc40c8decae640dcdee840c2c6c6cae0e8408aa89603b1b60448201526064015b60405180910390fd5b60405162461bcd60e51b81526020600482015260196024820152780a8ded6cadc40c8decae640dcdee840c2c6c6cae0e8408aa89603b1b6044820152606401610188565b3480156101e0575f5ffd5b506101e96104c0565b6040516101f69190610c4f565b60405180910390f35b34801561020a575f5ffd5b5061021e610219366004610c9f565b610550565b60405190151581526020016101f6565b348015610239575f5ffd5b5061024d610248366004610cc7565b610569565b6040519081526020016101f6565b348015610266575f5ffd5b5060025461024d565b34801561027a575f5ffd5b5061021e610289366004610cde565b6105a0565b348015610299575f5ffd5b50604051601281526020016101f6565b3480156102b4575f5ffd5b506102c86102c3366004610cc7565b6105c9565b005b3480156102d5575f5ffd5b506007546102e9906001600160a01b031681565b6040516001600160a01b0390911681526020016101f6565b34801561030c575f5ffd5b5061024d60085481565b348015610321575f5ffd5b5061024d610330366004610d18565b6001600160a01b03165f9081526020819052604090205490565b348015610355575f5ffd5b506102c86105d6565b348015610369575f5ffd5b5061021e6105e9565b34801561037d575f5ffd5b506102c861038c366004610c9f565b61060f565b34801561039c575f5ffd5b5061024d600a5481565b3480156103b1575f5ffd5b506102c86103c0366004610d18565b610628565b3480156103d0575f5ffd5b5061024d60095481565b3480156103e5575f5ffd5b506005546001600160a01b03166102e9565b348015610402575f5ffd5b506101e9610652565b348015610416575f5ffd5b5061021e610425366004610c9f565b610661565b348015610435575f5ffd5b506102c8610444366004610d31565b610681565b348015610454575f5ffd5b5061024d610463366004610d51565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b348015610498575f5ffd5b506102c8610725565b3480156104ac575f5ffd5b506102c86104bb366004610d18565b61082a565b6060600380546104cf90610d82565b80601f01602080910402602001604051908101604052809291908181526020018280546104fb90610d82565b80156105465780601f1061051d57610100808354040283529160200191610546565b820191905f5260205f20905b81548152906001019060200180831161052957829003601f168201915b5050505050905090565b5f3361055d818585610864565b60019150505b92915050565b6007546001600160a01b03165f90815260208190526040812054606461058f8483610dce565b6105999190610de5565b9392505050565b5f6105a96105e9565b156105b6576105b6610725565b6105c1848484610876565b949350505050565b6105d33382610899565b50565b6105de6108cd565b6105e75f6108fa565b565b5f6107086008546009546105fd9190610e04565b6106079190610e04565b421015905090565b61061a82338361094b565b6106248282610899565b5050565b6106306108cd565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b6060600480546104cf90610d82565b5f61066a6105e9565b1561067757610677610725565b61059983836109c7565b6106896108cd565b60058110156106d15760405162461bcd60e51b815260206004820152601460248201527348616c76696e67207261746520746f6f206c6f7760601b6044820152606401610188565b601481111561071a5760405162461bcd60e51b8152602060048201526015602482015274090c2d8ecd2dcce40e4c2e8ca40e8dede40d0d2ced605b1b6044820152606401610188565b600891909155600a55565b61072d6109d4565b6107356105e9565b6107815760405162461bcd60e51b815260206004820152601c60248201527f48616c76696e6720696e74657276616c206e6f742072656163686564000000006044820152606401610188565b6007546001600160a01b03165f9081526020819052604081205490505f6064600a54836107ae9190610dce565b6107b89190610de5565b9050801561081e576007546107d6906001600160a01b031682610899565b6107e261070842610e17565b600955604080518281524260208201527f394823b0bcaf78cd8f5876a52c05dbab91512a05f5da2a31e239a11ab66d605f910160405180910390a15b50506105e76001600655565b6108326108cd565b6001600160a01b03811661085b57604051631e4fbdf760e01b81525f6004820152602401610188565b6105d3816108fa565b61087183838360016109fe565b505050565b5f3361088385828561094b565b61088e858585610ad0565b506001949350505050565b6001600160a01b0382166108c257604051634b637e8f60e11b81525f6004820152602401610188565b610624825f83610b29565b6005546001600160a01b031633146105e75760405163118cdaa760e01b8152336004820152602401610188565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f198110156109c157818110156109b357604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610188565b6109c184848484035f6109fe565b50505050565b5f3361055d818585610ad0565b6002600654036109f757604051633ee5aeb560e01b815260040160405180910390fd5b6002600655565b6001600160a01b038416610a275760405163e602df0560e01b81525f6004820152602401610188565b6001600160a01b038316610a5057604051634a1406b160e11b81525f6004820152602401610188565b6001600160a01b038085165f90815260016020908152604080832093871683529290522082905580156109c157826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610ac291815260200190565b60405180910390a350505050565b6001600160a01b038316610af957604051634b637e8f60e11b81525f6004820152602401610188565b6001600160a01b038216610b225760405163ec442f0560e01b81525f6004820152602401610188565b6108718383835b6001600160a01b038316610b53578060025f828254610b489190610e04565b90915550610bc39050565b6001600160a01b0383165f9081526020819052604090205481811015610ba55760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610188565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b038216610bdf57600280548290039055610bfd565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610c4291815260200190565b60405180910390a3505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b0381168114610c9a575f5ffd5b919050565b5f5f60408385031215610cb0575f5ffd5b610cb983610c84565b946020939093013593505050565b5f60208284031215610cd7575f5ffd5b5035919050565b5f5f5f60608486031215610cf0575f5ffd5b610cf984610c84565b9250610d0760208501610c84565b929592945050506040919091013590565b5f60208284031215610d28575f5ffd5b61059982610c84565b5f5f60408385031215610d42575f5ffd5b50508035926020909101359150565b5f5f60408385031215610d62575f5ffd5b610d6b83610c84565b9150610d7960208401610c84565b90509250929050565b600181811c90821680610d9657607f821691505b602082108103610db457634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b808202811582820484141761056357610563610dba565b5f82610dff57634e487b7160e01b5f52601260045260245ffd5b500490565b8082018082111561056357610563610dba565b8181038181111561056357610563610dba56fea26469706673582212202ee59099ffb66578ac65e8eee5e7954b47dffc724569c0748437c12d6790b87264736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x143 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x768A4173 GT PUSH2 0xB5 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x40B JUMPI DUP1 PUSH4 0xBBB0B1A6 EQ PUSH2 0x42A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x449 JUMPI DUP1 PUSH4 0xED299016 EQ PUSH2 0x48D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4A1 JUMPI PUSH2 0x191 JUMP JUMPDEST DUP1 PUSH4 0x768A4173 EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0x7E6335F4 EQ PUSH2 0x391 JUMPI DUP1 PUSH4 0x7F51BB1F EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0x8CBB6DF7 EQ PUSH2 0x3C5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3DA JUMPI PUSH2 0x191 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x107 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2A9 JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0x6A47AA06 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x34A JUMPI PUSH2 0x191 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x102B67AB EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x26F JUMPI PUSH2 0x191 JUMP JUMPDEST CALLDATASIZE PUSH2 0x191 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0xA8DED6CADC40C8DECAE640DCDEE840C2C6C6CAE0E8408AA89 PUSH1 0x3B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0xA8DED6CADC40C8DECAE640DCDEE840C2C6C6CAE0E8408AA89 PUSH1 0x3B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x188 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1E9 PUSH2 0x4C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0xC4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x21E PUSH2 0x219 CALLDATASIZE PUSH1 0x4 PUSH2 0xC9F JUMP JUMPDEST PUSH2 0x550 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x239 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x24D PUSH2 0x248 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC7 JUMP JUMPDEST PUSH2 0x569 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x266 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x24D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x21E PUSH2 0x289 CALLDATASIZE PUSH1 0x4 PUSH2 0xCDE JUMP JUMPDEST PUSH2 0x5A0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x299 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH2 0x2C3 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC7 JUMP JUMPDEST PUSH2 0x5C9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x2E9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x24D PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x321 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x24D PUSH2 0x330 CALLDATASIZE PUSH1 0x4 PUSH2 0xD18 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x355 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH2 0x5D6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x369 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x21E PUSH2 0x5E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH2 0x38C CALLDATASIZE PUSH1 0x4 PUSH2 0xC9F JUMP JUMPDEST PUSH2 0x60F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x24D PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH2 0x3C0 CALLDATASIZE PUSH1 0x4 PUSH2 0xD18 JUMP JUMPDEST PUSH2 0x628 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x24D PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x402 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1E9 PUSH2 0x652 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x416 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x21E PUSH2 0x425 CALLDATASIZE PUSH1 0x4 PUSH2 0xC9F JUMP JUMPDEST PUSH2 0x661 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x435 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH2 0x444 CALLDATASIZE PUSH1 0x4 PUSH2 0xD31 JUMP JUMPDEST PUSH2 0x681 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x454 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x24D PUSH2 0x463 CALLDATASIZE PUSH1 0x4 PUSH2 0xD51 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x498 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH2 0x725 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH2 0x4BB CALLDATASIZE PUSH1 0x4 PUSH2 0xD18 JUMP JUMPDEST PUSH2 0x82A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4CF SWAP1 PUSH2 0xD82 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4FB SWAP1 PUSH2 0xD82 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x546 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x51D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x546 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x529 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x55D DUP2 DUP6 DUP6 PUSH2 0x864 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x64 PUSH2 0x58F DUP5 DUP4 PUSH2 0xDCE JUMP JUMPDEST PUSH2 0x599 SWAP2 SWAP1 PUSH2 0xDE5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5A9 PUSH2 0x5E9 JUMP JUMPDEST ISZERO PUSH2 0x5B6 JUMPI PUSH2 0x5B6 PUSH2 0x725 JUMP JUMPDEST PUSH2 0x5C1 DUP5 DUP5 DUP5 PUSH2 0x876 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x5D3 CALLER DUP3 PUSH2 0x899 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x5DE PUSH2 0x8CD JUMP JUMPDEST PUSH2 0x5E7 PUSH0 PUSH2 0x8FA JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x708 PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH2 0x5FD SWAP2 SWAP1 PUSH2 0xE04 JUMP JUMPDEST PUSH2 0x607 SWAP2 SWAP1 PUSH2 0xE04 JUMP JUMPDEST TIMESTAMP LT ISZERO SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x61A DUP3 CALLER DUP4 PUSH2 0x94B JUMP JUMPDEST PUSH2 0x624 DUP3 DUP3 PUSH2 0x899 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x630 PUSH2 0x8CD JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x4CF SWAP1 PUSH2 0xD82 JUMP JUMPDEST PUSH0 PUSH2 0x66A PUSH2 0x5E9 JUMP JUMPDEST ISZERO PUSH2 0x677 JUMPI PUSH2 0x677 PUSH2 0x725 JUMP JUMPDEST PUSH2 0x599 DUP4 DUP4 PUSH2 0x9C7 JUMP JUMPDEST PUSH2 0x689 PUSH2 0x8CD JUMP JUMPDEST PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x6D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x48616C76696E67207261746520746F6F206C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x188 JUMP JUMPDEST PUSH1 0x14 DUP2 GT ISZERO PUSH2 0x71A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x90C2D8ECD2DCCE40E4C2E8CA40E8DEDE40D0D2CED PUSH1 0x5B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x188 JUMP JUMPDEST PUSH1 0x8 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0xA SSTORE JUMP JUMPDEST PUSH2 0x72D PUSH2 0x9D4 JUMP JUMPDEST PUSH2 0x735 PUSH2 0x5E9 JUMP JUMPDEST PUSH2 0x781 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x48616C76696E6720696E74657276616C206E6F74207265616368656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x188 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH1 0x64 PUSH1 0xA SLOAD DUP4 PUSH2 0x7AE SWAP2 SWAP1 PUSH2 0xDCE JUMP JUMPDEST PUSH2 0x7B8 SWAP2 SWAP1 PUSH2 0xDE5 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x81E JUMPI PUSH1 0x7 SLOAD PUSH2 0x7D6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH2 0x899 JUMP JUMPDEST PUSH2 0x7E2 PUSH2 0x708 TIMESTAMP PUSH2 0xE17 JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x394823B0BCAF78CD8F5876A52C05DBAB91512A05F5DA2A31E239A11AB66D605F SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP PUSH2 0x5E7 PUSH1 0x1 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0x832 PUSH2 0x8CD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x85B JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x188 JUMP JUMPDEST PUSH2 0x5D3 DUP2 PUSH2 0x8FA JUMP JUMPDEST PUSH2 0x871 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x9FE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x883 DUP6 DUP3 DUP6 PUSH2 0x94B JUMP JUMPDEST PUSH2 0x88E DUP6 DUP6 DUP6 PUSH2 0xAD0 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8C2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x188 JUMP JUMPDEST PUSH2 0x624 DUP3 PUSH0 DUP4 PUSH2 0xB29 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5E7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x188 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 LT ISZERO PUSH2 0x9C1 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x9B3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x188 JUMP JUMPDEST PUSH2 0x9C1 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x9FE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x55D DUP2 DUP6 DUP6 PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x9F7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xA27 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x188 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA50 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x188 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x9C1 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xAC2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xAF9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x188 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB22 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x188 JUMP JUMPDEST PUSH2 0x871 DUP4 DUP4 DUP4 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB53 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB48 SWAP2 SWAP1 PUSH2 0xE04 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xBC3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xBA5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x188 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBDF JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xC42 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC9A JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCB0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xCB9 DUP4 PUSH2 0xC84 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCD7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xCF0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xCF9 DUP5 PUSH2 0xC84 JUMP JUMPDEST SWAP3 POP PUSH2 0xD07 PUSH1 0x20 DUP6 ADD PUSH2 0xC84 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD28 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x599 DUP3 PUSH2 0xC84 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD42 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD62 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xD6B DUP4 PUSH2 0xC84 JUMP JUMPDEST SWAP2 POP PUSH2 0xD79 PUSH1 0x20 DUP5 ADD PUSH2 0xC84 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xD96 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDB4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x563 JUMPI PUSH2 0x563 PUSH2 0xDBA JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xDFF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x563 JUMPI PUSH2 0x563 PUSH2 0xDBA JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x563 JUMPI PUSH2 0x563 PUSH2 0xDBA JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E JUMPF 0x9099 SELFDESTRUCT 0xB6 PUSH6 0x78AC65E8EEE5 SWAPN 0x95 0x4B SELFBALANCE 0xDF 0xFC PUSH19 0x4569C0748437C12D6790B87264736F6C634300 ADDMOD SAR STOP CALLER ",
							"sourceMap": "29600:3967:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;33522:35;;-1:-1:-1;;;33522:35:0;;216:2:1;33522:35:0;;;198:21:1;255:2;235:18;;;228:30;-1:-1:-1;;;274:18:1;;;267:55;339:18;;33522:35:0;;;;;;;;29600:3967;33433:35;;-1:-1:-1;;;33433:35:0;;216:2:1;33433:35:0;;;198:21:1;255:2;235:18;;;228:30;-1:-1:-1;;;274:18:1;;;267:55;339:18;;33433:35:0;14:349:1;12680:89:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14899:186;;;;;;;;;;-1:-1:-1;14899:186:0;;;;;:::i;:::-;;:::i;:::-;;;1439:14:1;;1432:22;1414:41;;1402:2;1387:18;14899:186:0;1274:187:1;32783:178:0;;;;;;;;;;-1:-1:-1;32783:178:0;;;;;:::i;:::-;;:::i;:::-;;;1843:25:1;;;1831:2;1816:18;32783:178:0;1697:177:1;13750:97:0;;;;;;;;;;-1:-1:-1;13828:12:0;;13750:97;;33170:219;;;;;;;;;;-1:-1:-1;33170:219:0;;;;;:::i;:::-;;:::i;13608:82::-;;;;;;;;;;-1:-1:-1;13608:82:0;;13681:2;2400:36:1;;2388:2;2373:18;13608:82:0;2258:184:1;22371:87:0;;;;;;;;;;-1:-1:-1;22371:87:0;;;;;:::i;:::-;;:::i;:::-;;29728:23;;;;;;;;;;-1:-1:-1;29728:23:0;;;;-1:-1:-1;;;;;29728:23:0;;;;;;-1:-1:-1;;;;;2611:32:1;;;2593:51;;2581:2;2566:18;29728:23:0;2447:203:1;29799:30:0;;;;;;;;;;;;;;;;13905:116;;;;;;;;;;-1:-1:-1;13905:116:0;;;;;:::i;:::-;-1:-1:-1;;;;;13996:18:0;13970:7;13996:18;;;;;;;;;;;;13905:116;25205:101;;;;;;;;;;;;;:::i;31394:147::-;;;;;;;;;;;;;:::i;22774:158::-;;;;;;;;;;-1:-1:-1;22774:158:0;;;;;:::i;:::-;;:::i;29974:26::-;;;;;;;;;;;;;;;;32680:97;;;;;;;;;;-1:-1:-1;32680:97:0;;;;;:::i;:::-;;:::i;29877:30::-;;;;;;;;;;;;;;;;24550:85;;;;;;;;;;-1:-1:-1;24622:6:0;;-1:-1:-1;;;;;24622:6:0;24550:85;;12882:93;;;;;;;;;;;;;:::i;32967:197::-;;;;;;;;;;-1:-1:-1;32967:197:0;;;;;:::i;:::-;;:::i;32282:332::-;;;;;;;;;;-1:-1:-1;32282:332:0;;;;;:::i;:::-;;:::i;14452:140::-;;;;;;;;;;-1:-1:-1;14452:140:0;;;;;:::i;:::-;-1:-1:-1;;;;;14558:18:0;;;14532:7;14558:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;14452:140;31613:601;;;;;;;;;;;;;:::i;25455:215::-;;;;;;;;;;-1:-1:-1;25455:215:0;;;;;:::i;:::-;;:::i;12680:89::-;12725:13;12757:5;12750:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12680:89;:::o;14899:186::-;14972:4;4288:10;15026:31;4288:10;15042:7;15051:5;15026:8;:31::i;:::-;15074:4;15067:11;;;14899:186;;;;;:::o;32783:178::-;32898:8;;-1:-1:-1;;;;;32898:8:0;32843:7;13996:18;;;;;;;;;;;32951:3;32925:22;32943:4;32862:45;32925:22;:::i;:::-;32924:30;;;;:::i;:::-;32917:37;32783:178;-1:-1:-1;;;32783:178:0:o;33170:219::-;33319:4;30627:14;:12;:14::i;:::-;30623:61;;;30657:16;:14;:16::i;:::-;33346:36:::1;33365:4;33371:2;33375:6;33346:18;:36::i;:::-;33339:43:::0;33170:219;-1:-1:-1;;;;33170:219:0:o;22371:87::-;22425:26;4288:10;22445:5;22425;:26::i;:::-;22371:87;:::o;25205:101::-;24443:13;:11;:13::i;:::-;25269:30:::1;25296:1;25269:18;:30::i;:::-;25205:101::o:0;31394:147::-;31439:4;30473;31500:15;;31482;;:33;;;;:::i;:::-;:51;;;;:::i;:::-;31462:15;:72;;31455:79;;31394:147;:::o;22774:158::-;22849:45;22865:7;4288:10;22888:5;22849:15;:45::i;:::-;22904:21;22910:7;22919:5;22904;:21::i;:::-;22774:158;;:::o;32680:97::-;24443:13;:11;:13::i;:::-;32750:8:::1;:20:::0;;-1:-1:-1;;;;;;32750:20:0::1;-1:-1:-1::0;;;;;32750:20:0;;;::::1;::::0;;;::::1;::::0;;32680:97::o;12882:93::-;12929:13;12961:7;12954:14;;;;;:::i;32967:197::-;33103:4;30627:14;:12;:14::i;:::-;30623:61;;;30657:16;:14;:16::i;:::-;33131:26:::1;33146:2;33150:6;33131:14;:26::i;32282:332::-:0;24443:13;:11;:13::i;:::-;30051:1:::1;32394:12;:32;;32386:65;;;::::0;-1:-1:-1;;;32386:65:0;;4706:2:1;32386:65:0::1;::::0;::::1;4688:21:1::0;4745:2;4725:18;;;4718:30;-1:-1:-1;;;4764:18:1;;;4757:50;4824:18;;32386:65:0::1;4504:344:1::0;32386:65:0::1;30109:2;32469:12;:32;;32461:66;;;::::0;-1:-1:-1;;;32461:66:0;;5055:2:1;32461:66:0::1;::::0;::::1;5037:21:1::0;5094:2;5074:18;;;5067:30;-1:-1:-1;;;5113:18:1;;;5106:51;5174:18;;32461:66:0::1;4853:345:1::0;32461:66:0::1;32537:15;:34:::0;;;;32581:11:::1;:26:::0;32282:332::o;31613:601::-;28544:21;:19;:21::i;:::-;31677:14:::1;:12;:14::i;:::-;31669:55;;;::::0;-1:-1:-1;;;31669:55:0;;5405:2:1;31669:55:0::1;::::0;::::1;5387:21:1::0;5444:2;5424:18;;;5417:30;5483;5463:18;;;5456:58;5531:18;;31669:55:0::1;5203:352:1::0;31669:55:0::1;31779:8;::::0;-1:-1:-1;;;;;31779:8:0::1;31743:23;13996:18:::0;;;;;;;;;;;31743:45:::1;;31798:18;31853:3;31838:11;;31820:15;:29;;;;:::i;:::-;31819:37;;;;:::i;:::-;31798:58:::0;-1:-1:-1;31879:14:0;;31875:333:::1;;31956:8;::::0;31950:27:::1;::::0;-1:-1:-1;;;;;31956:8:0::1;31966:10:::0;31950:5:::1;:27::i;:::-;32062:33;30473:4;32062:15;:33;:::i;:::-;32044:15;:51:::0;32161:36:::1;::::0;;5867:25:1;;;32181:15:0::1;5923:2:1::0;5908:18;;5901:34;32161:36:0::1;::::0;5840:18:1;32161:36:0::1;;;;;;;31875:333;31659:555;;28586:20:::0;27901:1;29112:7;:21;28932:208;25455:215;24443:13;:11;:13::i;:::-;-1:-1:-1;;;;;25539:22:0;::::1;25535:91;;25584:31;::::0;-1:-1:-1;;;25584:31:0;;25612:1:::1;25584:31;::::0;::::1;2593:51:1::0;2566:18;;25584:31:0::1;2447:203:1::0;25535:91:0::1;25635:28;25654:8;25635:18;:28::i;19627:128::-:0;19711:37;19720:5;19727:7;19736:5;19743:4;19711:8;:37::i;:::-;19627:128;;;:::o;15677:244::-;15764:4;4288:10;15820:37;15836:4;4288:10;15851:5;15820:15;:37::i;:::-;15867:26;15877:4;15883:2;15887:5;15867:9;:26::i;:::-;-1:-1:-1;15910:4:0;;15677:244;-1:-1:-1;;;;15677:244:0:o;18885:206::-;-1:-1:-1;;;;;18955:21:0;;18951:89;;18999:30;;-1:-1:-1;;;18999:30:0;;19026:1;18999:30;;;2593:51:1;2566:18;;18999:30:0;2447:203:1;18951:89:0;19049:35;19057:7;19074:1;19078:5;19049:7;:35::i;24708:162::-;24622:6;;-1:-1:-1;;;;;24622:6:0;4288:10;24767:23;24763:101;;24813:40;;-1:-1:-1;;;24813:40:0;;4288:10;24813:40;;;2593:51:1;2566:18;;24813:40:0;2447:203:1;25824:187:0;25916:6;;;-1:-1:-1;;;;;25932:17:0;;;-1:-1:-1;;;;;;25932:17:0;;;;;;;25964:40;;25916:6;;;25932:17;25916:6;;25964:40;;25897:16;;25964:40;25887:124;25824:187;:::o;21316:476::-;-1:-1:-1;;;;;14558:18:0;;;21415:24;14558:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;21481:36:0;;21477:309;;;21556:5;21537:16;:24;21533:130;;;21588:60;;-1:-1:-1;;;21588:60:0;;-1:-1:-1;;;;;6166:32:1;;21588:60:0;;;6148:51:1;6215:18;;;6208:34;;;6258:18;;;6251:34;;;6121:18;;21588:60:0;5946:345:1;21533:130:0;21704:57;21713:5;21720:7;21748:5;21729:16;:24;21755:5;21704:8;:57::i;:::-;21405:387;21316:476;;;:::o;14216:178::-;14285:4;4288:10;14339:27;4288:10;14356:2;14360:5;14339:9;:27::i;28619:307::-;27943:1;28746:7;;:18;28742:86;;28787:30;;-1:-1:-1;;;28787:30:0;;;;;;;;;;;28742:86;27943:1;28902:7;:17;28619:307::o;20602:432::-;-1:-1:-1;;;;;20714:19:0;;20710:89;;20756:32;;-1:-1:-1;;;20756:32:0;;20785:1;20756:32;;;2593:51:1;2566:18;;20756:32:0;2447:203:1;20710:89:0;-1:-1:-1;;;;;20812:21:0;;20808:90;;20856:31;;-1:-1:-1;;;20856:31:0;;20884:1;20856:31;;;2593:51:1;2566:18;;20856:31:0;2447:203:1;20808:90:0;-1:-1:-1;;;;;20907:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;20952:76;;;;21002:7;-1:-1:-1;;;;;20986:31:0;20995:5;-1:-1:-1;;;;;20986:31:0;;21011:5;20986:31;;;;1843:25:1;;1831:2;1816:18;;1697:177;20986:31:0;;;;;;;;20602:432;;;;:::o;16294:300::-;-1:-1:-1;;;;;16377:18:0;;16373:86;;16418:30;;-1:-1:-1;;;16418:30:0;;16445:1;16418:30;;;2593:51:1;2566:18;;16418:30:0;2447:203:1;16373:86:0;-1:-1:-1;;;;;16472:16:0;;16468:86;;16511:32;;-1:-1:-1;;;16511:32:0;;16540:1;16511:32;;;2593:51:1;2566:18;;16511:32:0;2447:203:1;16468:86:0;16563:24;16571:4;16577:2;16581:5;16909:1107;-1:-1:-1;;;;;16998:18:0;;16994:540;;17150:5;17134:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;16994:540:0;;-1:-1:-1;16994:540:0;;-1:-1:-1;;;;;17208:15:0;;17186:19;17208:15;;;;;;;;;;;17241:19;;;17237:115;;;17287:50;;-1:-1:-1;;;17287:50:0;;-1:-1:-1;;;;;6166:32:1;;17287:50:0;;;6148:51:1;6215:18;;;6208:34;;;6258:18;;;6251:34;;;6121:18;;17287:50:0;5946:345:1;17237:115:0;-1:-1:-1;;;;;17472:15:0;;:9;:15;;;;;;;;;;17490:19;;;;17472:37;;16994:540;-1:-1:-1;;;;;17548:16:0;;17544:425;;17711:12;:21;;;;;;;17544:425;;;-1:-1:-1;;;;;17922:13:0;;:9;:13;;;;;;;;;;:22;;;;;;17544:425;17999:2;-1:-1:-1;;;;;17984:25:0;17993:4;-1:-1:-1;;;;;17984:25:0;;18003:5;17984:25;;;;1843::1;;1831:2;1816:18;;1697:177;17984:25:0;;;;;;;;16909:1107;;;:::o;368:418:1:-;517:2;506:9;499:21;480:4;549:6;543:13;592:6;587:2;576:9;572:18;565:34;651:6;646:2;638:6;634:15;629:2;618:9;614:18;608:50;707:1;702:2;693:6;682:9;678:22;674:31;667:42;777:2;770;766:7;761:2;753:6;749:15;745:29;734:9;730:45;726:54;718:62;;;368:418;;;;:::o;791:173::-;859:20;;-1:-1:-1;;;;;908:31:1;;898:42;;888:70;;954:1;951;944:12;888:70;791:173;;;:::o;969:300::-;1037:6;1045;1098:2;1086:9;1077:7;1073:23;1069:32;1066:52;;;1114:1;1111;1104:12;1066:52;1137:29;1156:9;1137:29;:::i;:::-;1127:39;1235:2;1220:18;;;;1207:32;;-1:-1:-1;;;969:300:1:o;1466:226::-;1525:6;1578:2;1566:9;1557:7;1553:23;1549:32;1546:52;;;1594:1;1591;1584:12;1546:52;-1:-1:-1;1639:23:1;;1466:226;-1:-1:-1;1466:226:1:o;1879:374::-;1956:6;1964;1972;2025:2;2013:9;2004:7;2000:23;1996:32;1993:52;;;2041:1;2038;2031:12;1993:52;2064:29;2083:9;2064:29;:::i;:::-;2054:39;;2112:38;2146:2;2135:9;2131:18;2112:38;:::i;:::-;1879:374;;2102:48;;-1:-1:-1;;;2219:2:1;2204:18;;;;2191:32;;1879:374::o;2655:186::-;2714:6;2767:2;2755:9;2746:7;2742:23;2738:32;2735:52;;;2783:1;2780;2773:12;2735:52;2806:29;2825:9;2806:29;:::i;2846:346::-;2914:6;2922;2975:2;2963:9;2954:7;2950:23;2946:32;2943:52;;;2991:1;2988;2981:12;2943:52;-1:-1:-1;;3036:23:1;;;3156:2;3141:18;;;3128:32;;-1:-1:-1;2846:346:1:o;3197:260::-;3265:6;3273;3326:2;3314:9;3305:7;3301:23;3297:32;3294:52;;;3342:1;3339;3332:12;3294:52;3365:29;3384:9;3365:29;:::i;:::-;3355:39;;3413:38;3447:2;3436:9;3432:18;3413:38;:::i;:::-;3403:48;;3197:260;;;;;:::o;3462:380::-;3541:1;3537:12;;;;3584;;;3605:61;;3659:4;3651:6;3647:17;3637:27;;3605:61;3712:2;3704:6;3701:14;3681:18;3678:38;3675:161;;3758:10;3753:3;3749:20;3746:1;3739:31;3793:4;3790:1;3783:15;3821:4;3818:1;3811:15;3675:161;;3462:380;;;:::o;3847:127::-;3908:10;3903:3;3899:20;3896:1;3889:31;3939:4;3936:1;3929:15;3963:4;3960:1;3953:15;3979:168;4052:9;;;4083;;4100:15;;;4094:22;;4080:37;4070:71;;4121:18;;:::i;4152:217::-;4192:1;4218;4208:132;;4262:10;4257:3;4253:20;4250:1;4243:31;4297:4;4294:1;4287:15;4325:4;4322:1;4315:15;4208:132;-1:-1:-1;4354:9:1;;4152:217::o;4374:125::-;4439:9;;;4460:10;;;4457:36;;;4473:18;;:::i;5560:128::-;5627:9;;;5648:11;;;5645:37;;;5662:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "736000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "341",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24757",
								"balanceOf(address)": "2648",
								"burn(uint256)": "50961",
								"burnFrom(address,uint256)": "infinite",
								"decimals()": "199",
								"executeHalving()": "infinite",
								"getExpectedBurn(uint256)": "4801",
								"halvingInterval()": "2383",
								"halvingRate()": "2361",
								"isHalvingDue()": "infinite",
								"lastHalvingTime()": "2405",
								"name()": "infinite",
								"owner()": "2463",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2381",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28465",
								"treasury()": "2403",
								"updateHalvingParams(uint256,uint256)": "46738",
								"updateTreasury(address)": "26822"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 29600,
									"end": 33567,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 29600,
									"end": 33567,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 29600,
									"end": 33567,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30711,
									"end": 31345,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 30711,
									"end": 31345,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30711,
									"end": 31345,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 30711,
									"end": 31345,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 30711,
									"end": 31345,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 30711,
									"end": 31345,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30711,
									"end": 31345,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30711,
									"end": 31345,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 30711,
									"end": 31345,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 30711,
									"end": 31345,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30711,
									"end": 31345,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30711,
									"end": 31345,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 30711,
									"end": 31345,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 30711,
									"end": 31345,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 30711,
									"end": 31345,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 30711,
									"end": 31345,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 30711,
									"end": 31345,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30711,
									"end": 31345,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 30711,
									"end": 31345,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 30711,
									"end": 31345,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 30711,
									"end": 31345,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30711,
									"end": 31345,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30711,
									"end": 31345,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 30711,
									"end": 31345,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30711,
									"end": 31345,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30711,
									"end": 31345,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30711,
									"end": 31345,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 30711,
									"end": 31345,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 30711,
									"end": 31345,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 30711,
									"end": 31345,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 30711,
									"end": 31345,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 30711,
									"end": 31345,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30885,
									"end": 30895,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "436172646569726F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "10D115"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EA"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12576,
									"end": 12581,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12568,
									"end": 12573,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 12568,
									"end": 12581,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12568,
									"end": 12581,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12568,
									"end": 12581,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 12568,
									"end": 12581,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12568,
									"end": 12581,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12568,
									"end": 12581,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 12568,
									"end": 12581,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12568,
									"end": 12581,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 12568,
									"end": 12581,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 12591,
									"end": 12598,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12591,
									"end": 12608,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 12601,
									"end": 12608,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12591,
									"end": 12598,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12591,
									"end": 12608,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 12591,
									"end": 12608,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12591,
									"end": 12608,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 12591,
									"end": 12608,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 24185,
									"end": 24211,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24185,
									"end": 24211,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24181,
									"end": 24276,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 24181,
									"end": 24276,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 24234,
									"end": 24265,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24234,
									"end": 24265,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 24234,
									"end": 24265,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24234,
									"end": 24265,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24262,
									"end": 24263,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24234,
									"end": 24265,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 24234,
									"end": 24265,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24234,
									"end": 24265,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3438,
									"end": 3489,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3411,
									"end": 3429,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 3411,
									"end": 3429,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 24234,
									"end": 24265,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 24234,
									"end": 24265,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24234,
									"end": 24265,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24234,
									"end": 24265,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24234,
									"end": 24265,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24234,
									"end": 24265,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24234,
									"end": 24265,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 24234,
									"end": 24265,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24234,
									"end": 24265,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 24181,
									"end": 24276,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 24181,
									"end": 24276,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24285,
									"end": 24317,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 24304,
									"end": 24316,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24285,
									"end": 24303,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 24285,
									"end": 24317,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 24285,
									"end": 24317,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 24285,
									"end": 24317,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 27901,
									"end": 27902,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 28105,
									"end": 28112,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 28105,
									"end": 28126,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 30931,
									"end": 30934,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 30915,
									"end": 30934,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30915,
									"end": 30934,
									"modifierDepth": 2,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 30915,
									"end": 30934,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 30907,
									"end": 30970,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 30907,
									"end": 30970,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 30907,
									"end": 30970,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 30907,
									"end": 30970,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 30907,
									"end": 30970,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30907,
									"end": 30970,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3702,
									"end": 3704,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 30907,
									"end": 30970,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 30907,
									"end": 30970,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30907,
									"end": 30970,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3684,
									"end": 3705,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3741,
									"end": 3743,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 3721,
									"end": 3739,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 3721,
									"end": 3739,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3721,
									"end": 3739,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3714,
									"end": 3744,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3780,
									"end": 3813,
									"name": "PUSH",
									"source": 1,
									"value": "48616C76696E6720726174652063616E6E6F7420657863656564203130302500"
								},
								{
									"begin": 3760,
									"end": 3778,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 3760,
									"end": 3778,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3760,
									"end": 3778,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3753,
									"end": 3814,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3831,
									"end": 3849,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 3831,
									"end": 3849,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30907,
									"end": 30970,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 3500,
									"end": 3855,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 30907,
									"end": 30970,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 30907,
									"end": 30970,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30218,
									"end": 30223,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "15180"
								},
								{
									"begin": 30988,
									"end": 31004,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30988,
									"end": 31023,
									"modifierDepth": 2,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 30988,
									"end": 31023,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 30980,
									"end": 31046,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 30980,
									"end": 31046,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 30980,
									"end": 31046,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 30980,
									"end": 31046,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 30980,
									"end": 31046,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30980,
									"end": 31046,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4062,
									"end": 4064,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 30980,
									"end": 31046,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 30980,
									"end": 31046,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30980,
									"end": 31046,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 4044,
									"end": 4065,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4101,
									"end": 4103,
									"name": "PUSH",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 4081,
									"end": 4099,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 4081,
									"end": 4099,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4081,
									"end": 4099,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4074,
									"end": 4104,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "125B9D195C9D985B081D1BDBC81CDA1BDC9D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "72"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 4120,
									"end": 4138,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 4120,
									"end": 4138,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4120,
									"end": 4138,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4113,
									"end": 4161,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4178,
									"end": 4196,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 4178,
									"end": 4196,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30980,
									"end": 31046,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 3860,
									"end": 4202,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 30980,
									"end": 31046,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 30980,
									"end": 31046,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30218,
									"end": 30223,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "15180"
								},
								{
									"begin": 30299,
									"end": 30315,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 30165,
									"end": 30168,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "16D"
								},
								{
									"begin": 30314,
									"end": 30315,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 30299,
									"end": 30315,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 30299,
									"end": 30315,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 30299,
									"end": 30315,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 30299,
									"end": 30315,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30298,
									"end": 30334,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 30298,
									"end": 30334,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 30298,
									"end": 30334,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30298,
									"end": 30334,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 30298,
									"end": 30334,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 30298,
									"end": 30334,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 30298,
									"end": 30334,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 31084,
									"end": 31112,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 31084,
									"end": 31112,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31111,
									"end": 31112,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 31084,
									"end": 31112,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 31084,
									"end": 31112,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 31084,
									"end": 31112,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 31084,
									"end": 31112,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 31064,
									"end": 31080,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 31064,
									"end": 31112,
									"modifierDepth": 2,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 31064,
									"end": 31112,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 31056,
									"end": 31134,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 31056,
									"end": 31134,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 31056,
									"end": 31134,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 31056,
									"end": 31134,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 31056,
									"end": 31134,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 31056,
									"end": 31134,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4714,
									"end": 4716,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 31056,
									"end": 31134,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 31056,
									"end": 31134,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 31056,
									"end": 31134,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 4696,
									"end": 4717,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4753,
									"end": 4755,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 4733,
									"end": 4751,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 4733,
									"end": 4751,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4733,
									"end": 4751,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4726,
									"end": 4756,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "496E74657276616C20746F6F206C6F6E67"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "78"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 4772,
									"end": 4790,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 4772,
									"end": 4790,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4772,
									"end": 4790,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4765,
									"end": 4812,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4829,
									"end": 4847,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 4829,
									"end": 4847,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 31056,
									"end": 31134,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 4512,
									"end": 4853,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 31056,
									"end": 31134,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 31056,
									"end": 31134,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 31153,
									"end": 31185,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 31159,
									"end": 31169,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 31171,
									"end": 31184,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 31153,
									"end": 31158,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 31153,
									"end": 31185,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 31153,
									"end": 31185,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 31153,
									"end": 31185,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 31195,
									"end": 31203,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 31195,
									"end": 31215,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 31195,
									"end": 31215,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 31195,
									"end": 31215,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 31195,
									"end": 31215,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 31195,
									"end": 31215,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31195,
									"end": 31215,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 31195,
									"end": 31215,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 31195,
									"end": 31215,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 31195,
									"end": 31215,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31195,
									"end": 31215,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 31195,
									"end": 31215,
									"modifierDepth": 2,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 31195,
									"end": 31215,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31195,
									"end": 31215,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 31195,
									"end": 31215,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 31225,
									"end": 31240,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 31225,
									"end": 31259,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 31269,
									"end": 31280,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 31269,
									"end": 31295,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 31323,
									"end": 31338,
									"modifierDepth": 2,
									"name": "TIMESTAMP",
									"source": 0
								},
								{
									"begin": 31305,
									"end": 31320,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 31305,
									"end": 31338,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 29600,
									"end": 33567,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 29600,
									"end": 33567,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 25824,
									"end": 26011,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 25824,
									"end": 26011,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25916,
									"end": 25922,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 25916,
									"end": 25922,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25916,
									"end": 25922,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 25932,
									"end": 25949,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 25932,
									"end": 25949,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25932,
									"end": 25949,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 25932,
									"end": 25949,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 25932,
									"end": 25949,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 25932,
									"end": 25949,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25932,
									"end": 25949,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 25932,
									"end": 25949,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25932,
									"end": 25949,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 25932,
									"end": 25949,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 25964,
									"end": 26004,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25964,
									"end": 26004,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 25916,
									"end": 25922,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 25916,
									"end": 25922,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 25916,
									"end": 25922,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 25932,
									"end": 25949,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25916,
									"end": 25922,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 25916,
									"end": 25922,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25964,
									"end": 26004,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 25964,
									"end": 26004,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25897,
									"end": 25913,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25897,
									"end": 25913,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25964,
									"end": 26004,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 25887,
									"end": 26011,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25824,
									"end": 26011,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25824,
									"end": 26011,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18359,
									"end": 18567,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 18359,
									"end": 18567,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 18429,
									"end": 18450,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18429,
									"end": 18450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18425,
									"end": 18516,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 18425,
									"end": 18516,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 18473,
									"end": 18505,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18473,
									"end": 18505,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EC442F05"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 18473,
									"end": 18505,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18473,
									"end": 18505,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18502,
									"end": 18503,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18473,
									"end": 18505,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 18473,
									"end": 18505,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18473,
									"end": 18505,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3438,
									"end": 3489,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3411,
									"end": 3429,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 3411,
									"end": 3429,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 18473,
									"end": 18505,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 3292,
									"end": 3495,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 18425,
									"end": 18516,
									"name": "tag",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 18425,
									"end": 18516,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18525,
									"end": 18560,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18541,
									"end": 18542,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18545,
									"end": 18552,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18554,
									"end": 18559,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18525,
									"end": 18532,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 18525,
									"end": 18560,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18525,
									"end": 18560,
									"name": "tag",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18525,
									"end": 18560,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18359,
									"end": 18567,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18359,
									"end": 18567,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18359,
									"end": 18567,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 16909,
									"end": 18016,
									"name": "tag",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 16909,
									"end": 18016,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 16998,
									"end": 17016,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 16998,
									"end": 17016,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16994,
									"end": 17534,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 16994,
									"end": 17534,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17150,
									"end": 17155,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17134,
									"end": 17146,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 17134,
									"end": 17146,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17134,
									"end": 17155,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17134,
									"end": 17155,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17134,
									"end": 17155,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17134,
									"end": 17155,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 17134,
									"end": 17155,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17134,
									"end": 17155,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17134,
									"end": 17155,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 17134,
									"end": 17155,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17134,
									"end": 17155,
									"name": "tag",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 17134,
									"end": 17155,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17134,
									"end": 17155,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17134,
									"end": 17155,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17134,
									"end": 17155,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 16994,
									"end": 17534,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 16994,
									"end": 17534,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 16994,
									"end": 17534,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 16994,
									"end": 17534,
									"name": "tag",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 16994,
									"end": 17534,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17208,
									"end": 17223,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17208,
									"end": 17223,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17186,
									"end": 17205,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17208,
									"end": 17223,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17208,
									"end": 17223,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17208,
									"end": 17223,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17208,
									"end": 17223,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17208,
									"end": 17223,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17208,
									"end": 17223,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17208,
									"end": 17223,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17208,
									"end": 17223,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17208,
									"end": 17223,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17208,
									"end": 17223,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17208,
									"end": 17223,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17241,
									"end": 17260,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17241,
									"end": 17260,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17241,
									"end": 17260,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 17237,
									"end": 17352,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 17237,
									"end": 17352,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "47"
								},
								{
									"begin": 17237,
									"end": 17352,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17287,
									"end": 17337,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17287,
									"end": 17337,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "391434E3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 17287,
									"end": 17337,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17287,
									"end": 17337,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5208,
									"end": 5240,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5208,
									"end": 5240,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 17287,
									"end": 17337,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 17287,
									"end": 17337,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17287,
									"end": 17337,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5190,
									"end": 5241,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5257,
									"end": 5275,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 5257,
									"end": 5275,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5257,
									"end": 5275,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5250,
									"end": 5284,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5250,
									"end": 5284,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5250,
									"end": 5284,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5300,
									"end": 5318,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 5300,
									"end": 5318,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5300,
									"end": 5318,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5293,
									"end": 5327,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5293,
									"end": 5327,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5293,
									"end": 5327,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5163,
									"end": 5181,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 5163,
									"end": 5181,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 17287,
									"end": 17337,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 4988,
									"end": 5333,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 17237,
									"end": 17352,
									"name": "tag",
									"source": 0,
									"value": "47"
								},
								{
									"begin": 17237,
									"end": 17352,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17472,
									"end": 17487,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 17472,
									"end": 17487,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17472,
									"end": 17481,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17472,
									"end": 17487,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17472,
									"end": 17487,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17472,
									"end": 17487,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17472,
									"end": 17487,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17472,
									"end": 17487,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17472,
									"end": 17487,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17472,
									"end": 17487,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17472,
									"end": 17487,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17472,
									"end": 17487,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17472,
									"end": 17487,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17490,
									"end": 17509,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17490,
									"end": 17509,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17490,
									"end": 17509,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17490,
									"end": 17509,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17472,
									"end": 17509,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17472,
									"end": 17509,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 16994,
									"end": 17534,
									"name": "tag",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 16994,
									"end": 17534,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17548,
									"end": 17564,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17548,
									"end": 17564,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17544,
									"end": 17969,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "50"
								},
								{
									"begin": 17544,
									"end": 17969,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17711,
									"end": 17723,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 17711,
									"end": 17732,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17711,
									"end": 17732,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17711,
									"end": 17732,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17711,
									"end": 17732,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17711,
									"end": 17732,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17711,
									"end": 17732,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17711,
									"end": 17732,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17544,
									"end": 17969,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "51"
								},
								{
									"begin": 17544,
									"end": 17969,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17544,
									"end": 17969,
									"name": "tag",
									"source": 0,
									"value": "50"
								},
								{
									"begin": 17544,
									"end": 17969,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17922,
									"end": 17935,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17922,
									"end": 17935,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17922,
									"end": 17931,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17922,
									"end": 17935,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17922,
									"end": 17935,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17922,
									"end": 17935,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17922,
									"end": 17935,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17922,
									"end": 17935,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17922,
									"end": 17935,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17922,
									"end": 17935,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17922,
									"end": 17935,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17922,
									"end": 17935,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17922,
									"end": 17935,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17922,
									"end": 17944,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17922,
									"end": 17944,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17922,
									"end": 17944,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17922,
									"end": 17944,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17922,
									"end": 17944,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17922,
									"end": 17944,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17544,
									"end": 17969,
									"name": "tag",
									"source": 0,
									"value": "51"
								},
								{
									"begin": 17544,
									"end": 17969,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17999,
									"end": 18001,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17984,
									"end": 18009,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17993,
									"end": 17997,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17984,
									"end": 18009,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17984,
									"end": 18009,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 18003,
									"end": 18008,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17984,
									"end": 18009,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17984,
									"end": 18009,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17984,
									"end": 18009,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "52"
								},
								{
									"begin": 17984,
									"end": 18009,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5484,
									"end": 5509,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5484,
									"end": 5509,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5472,
									"end": 5474,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5457,
									"end": 5475,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5457,
									"end": 5475,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5338,
									"end": 5515,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 17984,
									"end": 18009,
									"name": "tag",
									"source": 0,
									"value": "52"
								},
								{
									"begin": 17984,
									"end": 18009,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17984,
									"end": 18009,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17984,
									"end": 18009,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17984,
									"end": 18009,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17984,
									"end": 18009,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17984,
									"end": 18009,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17984,
									"end": 18009,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17984,
									"end": 18009,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 16909,
									"end": 18016,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16909,
									"end": 18016,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16909,
									"end": 18016,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16909,
									"end": 18016,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 646,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 646,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 111,
									"end": 117,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 119,
									"end": 125,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 127,
									"end": 133,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 135,
									"end": 141,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 191,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 176,
									"end": 185,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 167,
									"end": 174,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 163,
									"end": 186,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 159,
									"end": 192,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 156,
									"end": 209,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 156,
									"end": 209,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 156,
									"end": 209,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 205,
									"end": 206,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 203,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 207,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 156,
									"end": 209,
									"name": "tag",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 156,
									"end": 209,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 250,
									"end": 266,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 250,
									"end": 266,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 335,
									"end": 337,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 320,
									"end": 338,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 320,
									"end": 338,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 314,
									"end": 339,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 250,
									"end": 266,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 250,
									"end": 266,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 370,
									"end": 403,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 370,
									"end": 403,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 358,
									"end": 404,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 358,
									"end": 404,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 348,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 348,
									"end": 422,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 418,
									"end": 419,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 415,
									"end": 416,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 408,
									"end": 420,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 348,
									"end": 422,
									"name": "tag",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 348,
									"end": 422,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 514,
									"end": 516,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 499,
									"end": 517,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 499,
									"end": 517,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 493,
									"end": 518,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 610,
									"end": 612,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 595,
									"end": 613,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 595,
									"end": 613,
									"name": "SWAP7",
									"source": 1
								},
								{
									"begin": 595,
									"end": 613,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 589,
									"end": 614,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 14,
									"end": 646,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 14,
									"end": 646,
									"name": "SWAP8",
									"source": 1
								},
								{
									"begin": 441,
									"end": 448,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 441,
									"end": 448,
									"name": "SWAP7",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 646,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 646,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 651,
									"end": 778,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 651,
									"end": 778,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 712,
									"end": 722,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 707,
									"end": 710,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 703,
									"end": 723,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 700,
									"end": 701,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 693,
									"end": 724,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 743,
									"end": 747,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 740,
									"end": 741,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 733,
									"end": 748,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 767,
									"end": 771,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 764,
									"end": 765,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 757,
									"end": 772,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 783,
									"end": 1163,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 783,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 862,
									"end": 863,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 858,
									"end": 870,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 858,
									"end": 870,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 858,
									"end": 870,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 858,
									"end": 870,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 905,
									"end": 917,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 905,
									"end": 917,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 905,
									"end": 917,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 926,
									"end": 987,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 926,
									"end": 987,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 980,
									"end": 984,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 972,
									"end": 978,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 968,
									"end": 985,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 958,
									"end": 985,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 958,
									"end": 985,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 926,
									"end": 987,
									"name": "tag",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 926,
									"end": 987,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1033,
									"end": 1035,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1025,
									"end": 1031,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1022,
									"end": 1036,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1002,
									"end": 1020,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 999,
									"end": 1037,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1157,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 996,
									"end": 1157,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1079,
									"end": 1089,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1074,
									"end": 1077,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1070,
									"end": 1090,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1067,
									"end": 1068,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1060,
									"end": 1091,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1114,
									"end": 1118,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1111,
									"end": 1112,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1104,
									"end": 1119,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1142,
									"end": 1146,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1139,
									"end": 1140,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1147,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1157,
									"name": "tag",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 996,
									"end": 1157,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1157,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 783,
									"end": 1163,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 783,
									"end": 1163,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 783,
									"end": 1163,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 783,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1294,
									"end": 1812,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 1294,
									"end": 1812,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1396,
									"end": 1398,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1391,
									"end": 1394,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 1399,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1385,
									"end": 1806,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1385,
									"end": 1806,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 1385,
									"end": 1806,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1432,
									"end": 1437,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1430,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1422,
									"end": 1438,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1476,
									"end": 1480,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1473,
									"end": 1474,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1463,
									"end": 1481,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 1546,
									"end": 1548,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1534,
									"end": 1544,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1530,
									"end": 1549,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1527,
									"end": 1528,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1523,
									"end": 1550,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1517,
									"end": 1521,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1513,
									"end": 1551,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1586,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1570,
									"end": 1580,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1567,
									"end": 1587,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1564,
									"end": 1611,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1564,
									"end": 1611,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 1564,
									"end": 1611,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1605,
									"end": 1609,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1564,
									"end": 1611,
									"name": "tag",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 1564,
									"end": 1611,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1660,
									"end": 1662,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1655,
									"end": 1658,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1663,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1649,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1644,
									"end": 1664,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1638,
									"end": 1642,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1634,
									"end": 1665,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1624,
									"end": 1665,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1624,
									"end": 1665,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1715,
									"end": 1796,
									"name": "tag",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 1715,
									"end": 1796,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1733,
									"end": 1735,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1726,
									"end": 1731,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1723,
									"end": 1736,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1715,
									"end": 1796,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1715,
									"end": 1796,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 1715,
									"end": 1796,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1792,
									"end": 1793,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1778,
									"end": 1794,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1778,
									"end": 1794,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1759,
									"end": 1760,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1748,
									"end": 1761,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1715,
									"end": 1796,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 1715,
									"end": 1796,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1715,
									"end": 1796,
									"name": "tag",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 1715,
									"end": 1796,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1719,
									"end": 1722,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1719,
									"end": 1722,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1385,
									"end": 1806,
									"name": "tag",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 1385,
									"end": 1806,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1294,
									"end": 1812,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1294,
									"end": 1812,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1294,
									"end": 1812,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1294,
									"end": 1812,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1988,
									"end": 3287,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1988,
									"end": 3287,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2108,
									"end": 2118,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2108,
									"end": 2118,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2130,
									"end": 2160,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2130,
									"end": 2160,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2127,
									"end": 2183,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2127,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 2127,
									"end": 2183,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2163,
									"end": 2181,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 2163,
									"end": 2181,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 2163,
									"end": 2181,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2163,
									"end": 2181,
									"name": "tag",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 2163,
									"end": 2181,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2192,
									"end": 2289,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 2282,
									"end": 2288,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2242,
									"end": 2280,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 2274,
									"end": 2278,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2268,
									"end": 2279,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2242,
									"end": 2280,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 2242,
									"end": 2280,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2242,
									"end": 2280,
									"name": "tag",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 2242,
									"end": 2280,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2236,
									"end": 2240,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2192,
									"end": 2289,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 2192,
									"end": 2289,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2192,
									"end": 2289,
									"name": "tag",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 2192,
									"end": 2289,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2338,
									"end": 2342,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2369,
									"end": 2371,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2358,
									"end": 2372,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2358,
									"end": 2372,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2386,
									"end": 2387,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2381,
									"end": 3030,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2381,
									"end": 3030,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 2381,
									"end": 3030,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 2381,
									"end": 3030,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3074,
									"end": 3075,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3091,
									"end": 3097,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3088,
									"end": 3177,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3088,
									"end": 3177,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 3088,
									"end": 3177,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3143,
									"end": 3162,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3143,
									"end": 3162,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3143,
									"end": 3162,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3137,
									"end": 3163,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3088,
									"end": 3177,
									"name": "tag",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 3088,
									"end": 3177,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1945,
									"end": 1946,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1941,
									"end": 1952,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1941,
									"end": 1952,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1941,
									"end": 1952,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1937,
									"end": 1961,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 1962,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1923,
									"end": 1963,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1969,
									"end": 1970,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1965,
									"end": 1976,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1965,
									"end": 1976,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1965,
									"end": 1976,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1920,
									"end": 1977,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3190,
									"end": 3271,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3190,
									"end": 3271,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2351,
									"end": 3281,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 2351,
									"end": 3281,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2381,
									"end": 3030,
									"name": "tag",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 2381,
									"end": 3030,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1241,
									"end": 1242,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1234,
									"end": 1248,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1234,
									"end": 1248,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1234,
									"end": 1248,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1278,
									"end": 1282,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1265,
									"end": 1283,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1265,
									"end": 1283,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2417,
									"end": 2437,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2417,
									"end": 2437,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2417,
									"end": 2437,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2535,
									"end": 2757,
									"name": "tag",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 2535,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2549,
									"end": 2556,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2546,
									"end": 2547,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2543,
									"end": 2557,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2535,
									"end": 2757,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2535,
									"end": 2757,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 2535,
									"end": 2757,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2631,
									"end": 2650,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 2631,
									"end": 2650,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2631,
									"end": 2650,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2625,
									"end": 2651,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2610,
									"end": 2652,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2610,
									"end": 2652,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2738,
									"end": 2742,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2723,
									"end": 2743,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2723,
									"end": 2743,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2723,
									"end": 2743,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2723,
									"end": 2743,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2691,
									"end": 2692,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2679,
									"end": 2693,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2679,
									"end": 2693,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2679,
									"end": 2693,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2679,
									"end": 2693,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2565,
									"end": 2577,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2535,
									"end": 2757,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 2535,
									"end": 2757,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2535,
									"end": 2757,
									"name": "tag",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 2535,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2539,
									"end": 2542,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2785,
									"end": 2791,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2776,
									"end": 2783,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2773,
									"end": 2792,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2770,
									"end": 2971,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2770,
									"end": 2971,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 2770,
									"end": 2971,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2846,
									"end": 2865,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2846,
									"end": 2865,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2846,
									"end": 2865,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2840,
									"end": 2866,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2929,
									"end": 2930,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2925,
									"end": 2939,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 2925,
									"end": 2939,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2925,
									"end": 2939,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2941,
									"end": 2944,
									"name": "PUSH",
									"source": 1,
									"value": "F8"
								},
								{
									"begin": 2921,
									"end": 2945,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2917,
									"end": 2954,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2913,
									"end": 2955,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2898,
									"end": 2956,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2883,
									"end": 2957,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2883,
									"end": 2957,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2770,
									"end": 2971,
									"name": "tag",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 2770,
									"end": 2971,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3017,
									"end": 3018,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3001,
									"end": 3015,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3001,
									"end": 3015,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3001,
									"end": 3015,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2997,
									"end": 3019,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2984,
									"end": 3020,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2984,
									"end": 3020,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1988,
									"end": 3287,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4207,
									"end": 4334,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 4207,
									"end": 4334,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4268,
									"end": 4278,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 4263,
									"end": 4266,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 4259,
									"end": 4279,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 4256,
									"end": 4257,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4249,
									"end": 4280,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4299,
									"end": 4303,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 4296,
									"end": 4297,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 4289,
									"end": 4304,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4323,
									"end": 4327,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 4320,
									"end": 4321,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4313,
									"end": 4328,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 4339,
									"end": 4507,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 4339,
									"end": 4507,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4412,
									"end": 4421,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4412,
									"end": 4421,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4412,
									"end": 4421,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4443,
									"end": 4452,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4443,
									"end": 4452,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4460,
									"end": 4475,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4460,
									"end": 4475,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4460,
									"end": 4475,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 4454,
									"end": 4476,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4454,
									"end": 4476,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 4440,
									"end": 4477,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 4430,
									"end": 4501,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "96"
								},
								{
									"begin": 4430,
									"end": 4501,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4481,
									"end": 4499,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "96"
								},
								{
									"begin": 4481,
									"end": 4499,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 4481,
									"end": 4499,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4481,
									"end": 4499,
									"name": "tag",
									"source": 1,
									"value": "96"
								},
								{
									"begin": 4481,
									"end": 4499,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4339,
									"end": 4507,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4339,
									"end": 4507,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4339,
									"end": 4507,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4339,
									"end": 4507,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4339,
									"end": 4507,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4858,
									"end": 4983,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 4858,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4923,
									"end": 4932,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4923,
									"end": 4932,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4923,
									"end": 4932,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4944,
									"end": 4954,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4944,
									"end": 4954,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4944,
									"end": 4954,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 4941,
									"end": 4977,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4941,
									"end": 4977,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "96"
								},
								{
									"begin": 4941,
									"end": 4977,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4957,
									"end": 4975,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "96"
								},
								{
									"begin": 4957,
									"end": 4975,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 4957,
									"end": 4975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5338,
									"end": 5515,
									"name": "tag",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 5338,
									"end": 5515,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 29600,
									"end": 33567,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 29600,
									"end": 33567,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29600,
									"end": 33567,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 29600,
									"end": 33567,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29600,
									"end": 33567,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 29600,
									"end": 33567,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29600,
									"end": 33567,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202ee59099ffb66578ac65e8eee5e7954b47dffc724569c0748437c12d6790b87264736f6c634300081d0033",
									".code": [
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH",
											"source": 0,
											"value": "768A4173"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH",
											"source": 0,
											"value": "BBB0B1A6"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH",
											"source": 0,
											"value": "ED299016"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH",
											"source": 0,
											"value": "768A4173"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH",
											"source": 0,
											"value": "79CC6790"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH",
											"source": 0,
											"value": "7E6335F4"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH",
											"source": 0,
											"value": "7F51BB1F"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH",
											"source": 0,
											"value": "8CBB6DF7"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH",
											"source": 0,
											"value": "42966C68"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH",
											"source": 0,
											"value": "61D027B3"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH",
											"source": 0,
											"value": "6A47AA06"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH",
											"source": 0,
											"value": "102B67AB"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33522,
											"end": 33557,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33522,
											"end": 33557,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 33522,
											"end": 33557,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33522,
											"end": 33557,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 216,
											"end": 218,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33522,
											"end": 33557,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33522,
											"end": 33557,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33522,
											"end": 33557,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 198,
											"end": 219,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 255,
											"end": 257,
											"name": "PUSH",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 235,
											"end": 253,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 235,
											"end": 253,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 235,
											"end": 253,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 228,
											"end": 258,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8DED6CADC40C8DECAE640DCDEE840C2C6C6CAE0E8408AA89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 274,
											"end": 292,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 274,
											"end": 292,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 274,
											"end": 292,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 267,
											"end": 322,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 339,
											"end": 357,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 339,
											"end": 357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33522,
											"end": 33557,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 33522,
											"end": 33557,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33522,
											"end": 33557,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33522,
											"end": 33557,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33522,
											"end": 33557,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33522,
											"end": 33557,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33522,
											"end": 33557,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33522,
											"end": 33557,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33522,
											"end": 33557,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 29600,
											"end": 33567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33433,
											"end": 33468,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33433,
											"end": 33468,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 33433,
											"end": 33468,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33433,
											"end": 33468,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 216,
											"end": 218,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33433,
											"end": 33468,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33433,
											"end": 33468,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33433,
											"end": 33468,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 198,
											"end": 219,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 255,
											"end": 257,
											"name": "PUSH",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 235,
											"end": 253,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 235,
											"end": 253,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 235,
											"end": 253,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 228,
											"end": 258,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8DED6CADC40C8DECAE640DCDEE840C2C6C6CAE0E8408AA89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 274,
											"end": 292,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 274,
											"end": 292,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 274,
											"end": 292,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 267,
											"end": 322,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 339,
											"end": 357,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 339,
											"end": 357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33433,
											"end": 33468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 14,
											"end": 363,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 12680,
											"end": 12769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12680,
											"end": 12769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 14899,
											"end": 15085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 14899,
											"end": 15085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1439,
											"end": 1453,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1432,
											"end": 1454,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1455,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1455,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1402,
											"end": 1404,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1387,
											"end": 1405,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1274,
											"end": 1461,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 32783,
											"end": 32961,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 32783,
											"end": 32961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32783,
											"end": 32961,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 32783,
											"end": 32961,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32783,
											"end": 32961,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32783,
											"end": 32961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 32783,
											"end": 32961,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32783,
											"end": 32961,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32783,
											"end": 32961,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32783,
											"end": 32961,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32783,
											"end": 32961,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 32783,
											"end": 32961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32783,
											"end": 32961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 32783,
											"end": 32961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 32783,
											"end": 32961,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 32783,
											"end": 32961,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32783,
											"end": 32961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 32783,
											"end": 32961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32783,
											"end": 32961,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 32783,
											"end": 32961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32783,
											"end": 32961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 32783,
											"end": 32961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32783,
											"end": 32961,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 32783,
											"end": 32961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32783,
											"end": 32961,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32783,
											"end": 32961,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1843,
											"end": 1868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1843,
											"end": 1868,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1833,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1816,
											"end": 1834,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32783,
											"end": 32961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1697,
											"end": 1874,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13828,
											"end": 13840,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13828,
											"end": 13840,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33170,
											"end": 33389,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 33170,
											"end": 33389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33170,
											"end": 33389,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 33170,
											"end": 33389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33170,
											"end": 33389,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33170,
											"end": 33389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 33170,
											"end": 33389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33170,
											"end": 33389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33170,
											"end": 33389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33170,
											"end": 33389,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33170,
											"end": 33389,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 33170,
											"end": 33389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33170,
											"end": 33389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 33170,
											"end": 33389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 33170,
											"end": 33389,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 33170,
											"end": 33389,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33170,
											"end": 33389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 33170,
											"end": 33389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33170,
											"end": 33389,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 33170,
											"end": 33389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33170,
											"end": 33389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 33170,
											"end": 33389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13681,
											"end": 13683,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2400,
											"end": 2436,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2436,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2388,
											"end": 2390,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2373,
											"end": 2391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2258,
											"end": 2442,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22371,
											"end": 22458,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 22371,
											"end": 22458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22371,
											"end": 22458,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 22371,
											"end": 22458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22371,
											"end": 22458,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22371,
											"end": 22458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 22371,
											"end": 22458,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22371,
											"end": 22458,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22371,
											"end": 22458,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22371,
											"end": 22458,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22371,
											"end": 22458,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 22371,
											"end": 22458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22371,
											"end": 22458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 22371,
											"end": 22458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 22371,
											"end": 22458,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22371,
											"end": 22458,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22371,
											"end": 22458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 22371,
											"end": 22458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22371,
											"end": 22458,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 22371,
											"end": 22458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22371,
											"end": 22458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 22371,
											"end": 22458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22371,
											"end": 22458,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 22371,
											"end": 22458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22371,
											"end": 22458,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 29728,
											"end": 29751,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 29728,
											"end": 29751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29728,
											"end": 29751,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 29728,
											"end": 29751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29728,
											"end": 29751,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29728,
											"end": 29751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 29728,
											"end": 29751,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29728,
											"end": 29751,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29728,
											"end": 29751,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29728,
											"end": 29751,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29728,
											"end": 29751,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 29728,
											"end": 29751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29728,
											"end": 29751,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 29728,
											"end": 29751,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29728,
											"end": 29751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 29728,
											"end": 29751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29728,
											"end": 29751,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29728,
											"end": 29751,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29728,
											"end": 29751,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29728,
											"end": 29751,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 29728,
											"end": 29751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29728,
											"end": 29751,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29728,
											"end": 29751,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2611,
											"end": 2643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2611,
											"end": 2643,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2611,
											"end": 2643,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2593,
											"end": 2644,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2593,
											"end": 2644,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2581,
											"end": 2583,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2566,
											"end": 2584,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29728,
											"end": 29751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2447,
											"end": 2650,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29799,
											"end": 29829,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 29799,
											"end": 29829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29799,
											"end": 29829,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 29799,
											"end": 29829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29799,
											"end": 29829,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29799,
											"end": 29829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 29799,
											"end": 29829,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29799,
											"end": 29829,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29799,
											"end": 29829,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29799,
											"end": 29829,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29799,
											"end": 29829,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 29799,
											"end": 29829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29799,
											"end": 29829,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29799,
											"end": 29829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 29799,
											"end": 29829,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 29799,
											"end": 29829,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29799,
											"end": 29829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29799,
											"end": 29829,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 13905,
											"end": 14021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13970,
											"end": 13977,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25205,
											"end": 25306,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 25205,
											"end": 25306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25205,
											"end": 25306,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25205,
											"end": 25306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25205,
											"end": 25306,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25205,
											"end": 25306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 25205,
											"end": 25306,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25205,
											"end": 25306,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25205,
											"end": 25306,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25205,
											"end": 25306,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25205,
											"end": 25306,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 25205,
											"end": 25306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25205,
											"end": 25306,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25205,
											"end": 25306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 25205,
											"end": 25306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 25205,
											"end": 25306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31394,
											"end": 31541,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 31394,
											"end": 31541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31394,
											"end": 31541,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 31394,
											"end": 31541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31394,
											"end": 31541,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31394,
											"end": 31541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 31394,
											"end": 31541,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31394,
											"end": 31541,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31394,
											"end": 31541,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31394,
											"end": 31541,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31394,
											"end": 31541,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 31394,
											"end": 31541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31394,
											"end": 31541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31394,
											"end": 31541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 31394,
											"end": 31541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 31394,
											"end": 31541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22774,
											"end": 22932,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 22774,
											"end": 22932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22774,
											"end": 22932,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 22774,
											"end": 22932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22774,
											"end": 22932,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22774,
											"end": 22932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 22774,
											"end": 22932,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22774,
											"end": 22932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22774,
											"end": 22932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22774,
											"end": 22932,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22774,
											"end": 22932,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 22774,
											"end": 22932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22774,
											"end": 22932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 22774,
											"end": 22932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 22774,
											"end": 22932,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22774,
											"end": 22932,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22774,
											"end": 22932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 22774,
											"end": 22932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22774,
											"end": 22932,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 22774,
											"end": 22932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22774,
											"end": 22932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 22774,
											"end": 22932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29974,
											"end": 30000,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 29974,
											"end": 30000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29974,
											"end": 30000,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 29974,
											"end": 30000,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29974,
											"end": 30000,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29974,
											"end": 30000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29974,
											"end": 30000,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29974,
											"end": 30000,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29974,
											"end": 30000,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29974,
											"end": 30000,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29974,
											"end": 30000,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29974,
											"end": 30000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29974,
											"end": 30000,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29974,
											"end": 30000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 29974,
											"end": 30000,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 29974,
											"end": 30000,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29974,
											"end": 30000,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29974,
											"end": 30000,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32680,
											"end": 32777,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 32680,
											"end": 32777,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32680,
											"end": 32777,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 32680,
											"end": 32777,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32680,
											"end": 32777,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32680,
											"end": 32777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 32680,
											"end": 32777,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32680,
											"end": 32777,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32680,
											"end": 32777,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32680,
											"end": 32777,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32680,
											"end": 32777,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 32680,
											"end": 32777,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32680,
											"end": 32777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 32680,
											"end": 32777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 32680,
											"end": 32777,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 32680,
											"end": 32777,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32680,
											"end": 32777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 32680,
											"end": 32777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32680,
											"end": 32777,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 32680,
											"end": 32777,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32680,
											"end": 32777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 32680,
											"end": 32777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29877,
											"end": 29907,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 29877,
											"end": 29907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29877,
											"end": 29907,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 29877,
											"end": 29907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29877,
											"end": 29907,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29877,
											"end": 29907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 29877,
											"end": 29907,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29877,
											"end": 29907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29877,
											"end": 29907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29877,
											"end": 29907,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29877,
											"end": 29907,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 29877,
											"end": 29907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29877,
											"end": 29907,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29877,
											"end": 29907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 29877,
											"end": 29907,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 29877,
											"end": 29907,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29877,
											"end": 29907,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29877,
											"end": 29907,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24550,
											"end": 24635,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 24550,
											"end": 24635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24550,
											"end": 24635,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 24550,
											"end": 24635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24550,
											"end": 24635,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24550,
											"end": 24635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 24550,
											"end": 24635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24550,
											"end": 24635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24550,
											"end": 24635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24550,
											"end": 24635,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24550,
											"end": 24635,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 24550,
											"end": 24635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24622,
											"end": 24628,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24622,
											"end": 24628,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24622,
											"end": 24628,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24550,
											"end": 24635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 24550,
											"end": 24635,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 12882,
											"end": 12975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32967,
											"end": 33164,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 32967,
											"end": 33164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32967,
											"end": 33164,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 32967,
											"end": 33164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32967,
											"end": 33164,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32967,
											"end": 33164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 32967,
											"end": 33164,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32967,
											"end": 33164,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32967,
											"end": 33164,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32967,
											"end": 33164,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32967,
											"end": 33164,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 32967,
											"end": 33164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32967,
											"end": 33164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 32967,
											"end": 33164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 32967,
											"end": 33164,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 32967,
											"end": 33164,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32967,
											"end": 33164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 32967,
											"end": 33164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32967,
											"end": 33164,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 32967,
											"end": 33164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32967,
											"end": 33164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 32967,
											"end": 33164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32282,
											"end": 32614,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 32282,
											"end": 32614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32282,
											"end": 32614,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 32282,
											"end": 32614,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32282,
											"end": 32614,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32282,
											"end": 32614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 32282,
											"end": 32614,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32282,
											"end": 32614,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32282,
											"end": 32614,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32282,
											"end": 32614,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32282,
											"end": 32614,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 32282,
											"end": 32614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32282,
											"end": 32614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 32282,
											"end": 32614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 32282,
											"end": 32614,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 32282,
											"end": 32614,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32282,
											"end": 32614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 32282,
											"end": 32614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32282,
											"end": 32614,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 32282,
											"end": 32614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32282,
											"end": 32614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 32282,
											"end": 32614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 14452,
											"end": 14592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14558,
											"end": 14576,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14576,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14576,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14532,
											"end": 14539,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14558,
											"end": 14576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14576,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14569,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14558,
											"end": 14576,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14558,
											"end": 14576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14576,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14576,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14558,
											"end": 14576,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14576,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14576,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14585,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14585,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14585,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14585,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14585,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14585,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14585,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14585,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14592,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31613,
											"end": 32214,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 31613,
											"end": 32214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31613,
											"end": 32214,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 31613,
											"end": 32214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31613,
											"end": 32214,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31613,
											"end": 32214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 31613,
											"end": 32214,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31613,
											"end": 32214,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31613,
											"end": 32214,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31613,
											"end": 32214,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31613,
											"end": 32214,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 31613,
											"end": 32214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31613,
											"end": 32214,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31613,
											"end": 32214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 31613,
											"end": 32214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 31613,
											"end": 32214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25455,
											"end": 25670,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 25455,
											"end": 25670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25455,
											"end": 25670,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25455,
											"end": 25670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25455,
											"end": 25670,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25455,
											"end": 25670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 25455,
											"end": 25670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25455,
											"end": 25670,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25455,
											"end": 25670,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25455,
											"end": 25670,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25455,
											"end": 25670,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 25455,
											"end": 25670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25455,
											"end": 25670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 25455,
											"end": 25670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 25455,
											"end": 25670,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25455,
											"end": 25670,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25455,
											"end": 25670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 25455,
											"end": 25670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25455,
											"end": 25670,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 25455,
											"end": 25670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25455,
											"end": 25670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 25455,
											"end": 25670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12725,
											"end": 12738,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12757,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 12750,
											"end": 12762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 12750,
											"end": 12762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14972,
											"end": 14976,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4288,
											"end": 4298,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15026,
											"end": 15057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 4288,
											"end": 4298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15042,
											"end": 15049,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15051,
											"end": 15056,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15026,
											"end": 15034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 15026,
											"end": 15057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15026,
											"end": 15057,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 15026,
											"end": 15057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15074,
											"end": 15078,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15067,
											"end": 15078,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15067,
											"end": 15078,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15067,
											"end": 15078,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14899,
											"end": 15085,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14899,
											"end": 15085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32783,
											"end": 32961,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 32783,
											"end": 32961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32898,
											"end": 32906,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 32898,
											"end": 32906,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32898,
											"end": 32906,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32843,
											"end": 32850,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32951,
											"end": 32954,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 32925,
											"end": 32947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 32943,
											"end": 32947,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32862,
											"end": 32907,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32925,
											"end": 32947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 32925,
											"end": 32947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32925,
											"end": 32947,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 32925,
											"end": 32947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32924,
											"end": 32954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 32924,
											"end": 32954,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32924,
											"end": 32954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32924,
											"end": 32954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 32924,
											"end": 32954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32924,
											"end": 32954,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 32924,
											"end": 32954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32917,
											"end": 32954,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 32783,
											"end": 32961,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32783,
											"end": 32961,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33170,
											"end": 33389,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 33170,
											"end": 33389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33319,
											"end": 33323,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30627,
											"end": 30641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 30627,
											"end": 30639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 30627,
											"end": 30641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30627,
											"end": 30641,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 30627,
											"end": 30641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30623,
											"end": 30684,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30623,
											"end": 30684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 30623,
											"end": 30684,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30657,
											"end": 30673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 30657,
											"end": 30671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 30657,
											"end": 30673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30657,
											"end": 30673,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 30657,
											"end": 30673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33346,
											"end": 33382,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 33365,
											"end": 33369,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33371,
											"end": 33373,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33375,
											"end": 33381,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33346,
											"end": 33364,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 33346,
											"end": 33382,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33346,
											"end": 33382,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 33346,
											"end": 33382,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33339,
											"end": 33382,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 33170,
											"end": 33389,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33170,
											"end": 33389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22371,
											"end": 22458,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 22371,
											"end": 22458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22425,
											"end": 22451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 4288,
											"end": 4298,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 22445,
											"end": 22450,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22425,
											"end": 22430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 22425,
											"end": 22451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22425,
											"end": 22451,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 22425,
											"end": 22451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22371,
											"end": 22458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22371,
											"end": 22458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25205,
											"end": 25306,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 25205,
											"end": 25306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24443,
											"end": 24456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 24443,
											"end": 24454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 24443,
											"end": 24456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24443,
											"end": 24456,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 24443,
											"end": 24456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25269,
											"end": 25299,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 25296,
											"end": 25297,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25269,
											"end": 25287,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 25269,
											"end": 25299,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25269,
											"end": 25299,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 25269,
											"end": 25299,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25205,
											"end": 25306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31394,
											"end": 31541,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 31394,
											"end": 31541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31439,
											"end": 31443,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30473,
											"end": 30477,
											"name": "PUSH",
											"source": 0,
											"value": "708"
										},
										{
											"begin": 31500,
											"end": 31515,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 31500,
											"end": 31515,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31482,
											"end": 31497,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 31482,
											"end": 31497,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31482,
											"end": 31515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 31482,
											"end": 31515,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31482,
											"end": 31515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31482,
											"end": 31515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 31482,
											"end": 31515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31482,
											"end": 31515,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 31482,
											"end": 31515,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31482,
											"end": 31533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 31482,
											"end": 31533,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31482,
											"end": 31533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31482,
											"end": 31533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 31482,
											"end": 31533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31482,
											"end": 31533,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 31482,
											"end": 31533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31462,
											"end": 31477,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 31462,
											"end": 31534,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 31462,
											"end": 31534,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31455,
											"end": 31534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31455,
											"end": 31534,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31394,
											"end": 31541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31394,
											"end": 31541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22774,
											"end": 22932,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 22774,
											"end": 22932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22849,
											"end": 22894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 22865,
											"end": 22872,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4288,
											"end": 4298,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 22888,
											"end": 22893,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22849,
											"end": 22864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 22849,
											"end": 22894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22849,
											"end": 22894,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 22849,
											"end": 22894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22904,
											"end": 22925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 22910,
											"end": 22917,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22919,
											"end": 22924,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22904,
											"end": 22909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 22904,
											"end": 22925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22904,
											"end": 22925,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 22904,
											"end": 22925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22774,
											"end": 22932,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22774,
											"end": 22932,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22774,
											"end": 22932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32680,
											"end": 32777,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 32680,
											"end": 32777,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24443,
											"end": 24456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 24443,
											"end": 24454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 24443,
											"end": 24456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24443,
											"end": 24456,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 24443,
											"end": 24456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32750,
											"end": 32758,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 32750,
											"end": 32770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32750,
											"end": 32770,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 32750,
											"end": 32770,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32750,
											"end": 32770,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32750,
											"end": 32770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32750,
											"end": 32770,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32750,
											"end": 32770,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32750,
											"end": 32770,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32750,
											"end": 32770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32750,
											"end": 32770,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32750,
											"end": 32770,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 32750,
											"end": 32770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32750,
											"end": 32770,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32680,
											"end": 32777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12942,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12961,
											"end": 12968,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 12954,
											"end": 12968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32967,
											"end": 33164,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 32967,
											"end": 33164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33103,
											"end": 33107,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30627,
											"end": 30641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 30627,
											"end": 30639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 30627,
											"end": 30641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30627,
											"end": 30641,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 30627,
											"end": 30641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30623,
											"end": 30684,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30623,
											"end": 30684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 30623,
											"end": 30684,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30657,
											"end": 30673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 30657,
											"end": 30671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 30657,
											"end": 30673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30657,
											"end": 30673,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 30657,
											"end": 30673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33131,
											"end": 33157,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 33146,
											"end": 33148,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33150,
											"end": 33156,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33131,
											"end": 33145,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 33131,
											"end": 33157,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32282,
											"end": 32614,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 32282,
											"end": 32614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24443,
											"end": 24456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 24443,
											"end": 24454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 24443,
											"end": 24456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24443,
											"end": 24456,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 24443,
											"end": 24456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30051,
											"end": 30052,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 32394,
											"end": 32406,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32394,
											"end": 32426,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 32394,
											"end": 32426,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32386,
											"end": 32451,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 32386,
											"end": 32451,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32386,
											"end": 32451,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32386,
											"end": 32451,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 32386,
											"end": 32451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32386,
											"end": 32451,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4706,
											"end": 4708,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32386,
											"end": 32451,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32386,
											"end": 32451,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32386,
											"end": 32451,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 4709,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4745,
											"end": 4747,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 4725,
											"end": 4743,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4725,
											"end": 4743,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4725,
											"end": 4743,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4718,
											"end": 4748,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "48616C76696E67207261746520746F6F206C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4764,
											"end": 4782,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4764,
											"end": 4782,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4764,
											"end": 4782,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4807,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4824,
											"end": 4842,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4824,
											"end": 4842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32386,
											"end": 32451,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4504,
											"end": 4848,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 32386,
											"end": 32451,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 32386,
											"end": 32451,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30109,
											"end": 30111,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 32469,
											"end": 32481,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32469,
											"end": 32501,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 32469,
											"end": 32501,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32461,
											"end": 32527,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 32461,
											"end": 32527,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32461,
											"end": 32527,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32461,
											"end": 32527,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 32461,
											"end": 32527,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32461,
											"end": 32527,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5055,
											"end": 5057,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32461,
											"end": 32527,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32461,
											"end": 32527,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32461,
											"end": 32527,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5037,
											"end": 5058,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5094,
											"end": 5096,
											"name": "PUSH",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 5074,
											"end": 5092,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5074,
											"end": 5092,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5074,
											"end": 5092,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5067,
											"end": 5097,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90C2D8ECD2DCCE40E4C2E8CA40E8DEDE40D0D2CED"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5113,
											"end": 5131,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5113,
											"end": 5131,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5113,
											"end": 5131,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5106,
											"end": 5157,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5174,
											"end": 5192,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5174,
											"end": 5192,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32461,
											"end": 32527,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4853,
											"end": 5198,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 32461,
											"end": 32527,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 32461,
											"end": 32527,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32537,
											"end": 32552,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 32537,
											"end": 32571,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32537,
											"end": 32571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32537,
											"end": 32571,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32537,
											"end": 32571,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32581,
											"end": 32592,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 32581,
											"end": 32607,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32282,
											"end": 32614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31613,
											"end": 32214,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 31613,
											"end": 32214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28544,
											"end": 28565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 28544,
											"end": 28563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 28544,
											"end": 28565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28544,
											"end": 28565,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 28544,
											"end": 28565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31677,
											"end": 31691,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 31677,
											"end": 31689,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 31677,
											"end": 31691,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31677,
											"end": 31691,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 31677,
											"end": 31691,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31669,
											"end": 31724,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 31669,
											"end": 31724,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31669,
											"end": 31724,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31669,
											"end": 31724,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 31669,
											"end": 31724,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31669,
											"end": 31724,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5407,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31669,
											"end": 31724,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31669,
											"end": 31724,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31669,
											"end": 31724,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5387,
											"end": 5408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5444,
											"end": 5446,
											"name": "PUSH",
											"source": 1,
											"value": "1C"
										},
										{
											"begin": 5424,
											"end": 5442,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5424,
											"end": 5442,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5424,
											"end": 5442,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5417,
											"end": 5447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5483,
											"end": 5513,
											"name": "PUSH",
											"source": 1,
											"value": "48616C76696E6720696E74657276616C206E6F74207265616368656400000000"
										},
										{
											"begin": 5463,
											"end": 5481,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5463,
											"end": 5481,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5463,
											"end": 5481,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5456,
											"end": 5514,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5531,
											"end": 5549,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5531,
											"end": 5549,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31669,
											"end": 31724,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 5203,
											"end": 5555,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 31669,
											"end": 31724,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 31669,
											"end": 31724,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31779,
											"end": 31787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 31779,
											"end": 31787,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31779,
											"end": 31787,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31743,
											"end": 31766,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31743,
											"end": 31788,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31743,
											"end": 31788,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31798,
											"end": 31816,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31853,
											"end": 31856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 31838,
											"end": 31849,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 31838,
											"end": 31849,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31820,
											"end": 31835,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31820,
											"end": 31849,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 31820,
											"end": 31849,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31820,
											"end": 31849,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31820,
											"end": 31849,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 31820,
											"end": 31849,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31820,
											"end": 31849,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 31820,
											"end": 31849,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 31856,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 31819,
											"end": 31856,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 31856,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 31856,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 31819,
											"end": 31856,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 31856,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 31819,
											"end": 31856,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31798,
											"end": 31856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31879,
											"end": 31893,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31879,
											"end": 31893,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31875,
											"end": 32208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 31875,
											"end": 32208,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31956,
											"end": 31964,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 31956,
											"end": 31964,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31950,
											"end": 31977,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 31950,
											"end": 31977,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31956,
											"end": 31964,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31966,
											"end": 31976,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31950,
											"end": 31955,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 31950,
											"end": 31977,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31950,
											"end": 31977,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 31950,
											"end": 31977,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32062,
											"end": 32095,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 30473,
											"end": 30477,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "708"
										},
										{
											"begin": 32062,
											"end": 32077,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 32062,
											"end": 32095,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 32062,
											"end": 32095,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32062,
											"end": 32095,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 32062,
											"end": 32095,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32044,
											"end": 32059,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 32044,
											"end": 32095,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32161,
											"end": 32197,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32161,
											"end": 32197,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32161,
											"end": 32197,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5867,
											"end": 5892,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5867,
											"end": 5892,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5867,
											"end": 5892,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32181,
											"end": 32196,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 5923,
											"end": 5925,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5908,
											"end": 5926,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5908,
											"end": 5926,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5901,
											"end": 5935,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32161,
											"end": 32197,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "394823B0BCAF78CD8F5876A52C05DBAB91512A05F5DA2A31E239A11AB66D605F"
										},
										{
											"begin": 32161,
											"end": 32197,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 5858,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32161,
											"end": 32197,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32161,
											"end": 32197,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32161,
											"end": 32197,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32161,
											"end": 32197,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32161,
											"end": 32197,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32161,
											"end": 32197,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32161,
											"end": 32197,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 31875,
											"end": 32208,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 31875,
											"end": 32208,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31659,
											"end": 32214,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31659,
											"end": 32214,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28586,
											"end": 28606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 27901,
											"end": 27902,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 29112,
											"end": 29119,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 29112,
											"end": 29133,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28932,
											"end": 29140,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25455,
											"end": 25670,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 25455,
											"end": 25670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24443,
											"end": 24456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 24443,
											"end": 24454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 24443,
											"end": 24456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24443,
											"end": 24456,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 24443,
											"end": 24456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25539,
											"end": 25561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25539,
											"end": 25561,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25535,
											"end": 25626,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 25535,
											"end": 25626,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25584,
											"end": 25615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25584,
											"end": 25615,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 25584,
											"end": 25615,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25584,
											"end": 25615,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25612,
											"end": 25613,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25584,
											"end": 25615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25584,
											"end": 25615,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25584,
											"end": 25615,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2593,
											"end": 2644,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2566,
											"end": 2584,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2566,
											"end": 2584,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25584,
											"end": 25615,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2447,
											"end": 2650,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25535,
											"end": 25626,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 25535,
											"end": 25626,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25635,
											"end": 25663,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 25654,
											"end": 25662,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25635,
											"end": 25653,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 25635,
											"end": 25663,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19627,
											"end": 19755,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 19627,
											"end": 19755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19711,
											"end": 19748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 19720,
											"end": 19725,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19727,
											"end": 19734,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19736,
											"end": 19741,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19743,
											"end": 19747,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19711,
											"end": 19719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 19711,
											"end": 19748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19711,
											"end": 19748,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 19711,
											"end": 19748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19627,
											"end": 19755,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19627,
											"end": 19755,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19627,
											"end": 19755,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19627,
											"end": 19755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15677,
											"end": 15921,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 15677,
											"end": 15921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15764,
											"end": 15768,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4288,
											"end": 4298,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15820,
											"end": 15857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 15836,
											"end": 15840,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4288,
											"end": 4298,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15851,
											"end": 15856,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15820,
											"end": 15835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 15820,
											"end": 15857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15820,
											"end": 15857,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 15820,
											"end": 15857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15867,
											"end": 15893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 15877,
											"end": 15881,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15883,
											"end": 15885,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15887,
											"end": 15892,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15867,
											"end": 15876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 15867,
											"end": 15893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15867,
											"end": 15893,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 15867,
											"end": 15893,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15910,
											"end": 15914,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15910,
											"end": 15914,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15677,
											"end": 15921,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15677,
											"end": 15921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19091,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 18885,
											"end": 19091,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18955,
											"end": 18976,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18955,
											"end": 18976,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18951,
											"end": 19040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 18951,
											"end": 19040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18999,
											"end": 19029,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18999,
											"end": 19029,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18999,
											"end": 19029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18999,
											"end": 19029,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19026,
											"end": 19027,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18999,
											"end": 19029,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18999,
											"end": 19029,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18999,
											"end": 19029,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2593,
											"end": 2644,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2566,
											"end": 2584,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2566,
											"end": 2584,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18999,
											"end": 19029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2447,
											"end": 2650,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18951,
											"end": 19040,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 18951,
											"end": 19040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19049,
											"end": 19084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 19057,
											"end": 19064,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19074,
											"end": 19075,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19078,
											"end": 19083,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19049,
											"end": 19056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 19049,
											"end": 19084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24708,
											"end": 24870,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 24708,
											"end": 24870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24622,
											"end": 24628,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24622,
											"end": 24628,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24622,
											"end": 24628,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4288,
											"end": 4298,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 24767,
											"end": 24790,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24763,
											"end": 24864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 24763,
											"end": 24864,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24813,
											"end": 24853,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24813,
											"end": 24853,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24813,
											"end": 24853,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24813,
											"end": 24853,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4288,
											"end": 4298,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 24813,
											"end": 24853,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24813,
											"end": 24853,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24813,
											"end": 24853,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2593,
											"end": 2644,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2566,
											"end": 2584,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2566,
											"end": 2584,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24813,
											"end": 24853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2447,
											"end": 2650,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25824,
											"end": 26011,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 25824,
											"end": 26011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25916,
											"end": 25922,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 25916,
											"end": 25922,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25916,
											"end": 25922,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25932,
											"end": 25949,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25932,
											"end": 25949,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25932,
											"end": 25949,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 25932,
											"end": 25949,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25932,
											"end": 25949,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25932,
											"end": 25949,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25932,
											"end": 25949,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 25932,
											"end": 25949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25932,
											"end": 25949,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 25932,
											"end": 25949,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25964,
											"end": 26004,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25964,
											"end": 26004,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25916,
											"end": 25922,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25916,
											"end": 25922,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25916,
											"end": 25922,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25932,
											"end": 25949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25916,
											"end": 25922,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25916,
											"end": 25922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25964,
											"end": 26004,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 25964,
											"end": 26004,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25897,
											"end": 25913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25897,
											"end": 25913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25964,
											"end": 26004,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 25887,
											"end": 26011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25824,
											"end": 26011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25824,
											"end": 26011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21316,
											"end": 21792,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 21316,
											"end": 21792,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14558,
											"end": 14576,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14576,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21415,
											"end": 21439,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14558,
											"end": 14576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14576,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14569,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14558,
											"end": 14576,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14558,
											"end": 14576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14576,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14576,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14558,
											"end": 14576,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14576,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14576,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14585,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14585,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14585,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14585,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14585,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14585,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14585,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14585,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14585,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 21481,
											"end": 21517,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21481,
											"end": 21517,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21477,
											"end": 21786,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21477,
											"end": 21786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 21477,
											"end": 21786,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21556,
											"end": 21561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21537,
											"end": 21553,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21537,
											"end": 21561,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21533,
											"end": 21663,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21533,
											"end": 21663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 21533,
											"end": 21663,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21588,
											"end": 21648,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21588,
											"end": 21648,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21588,
											"end": 21648,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21588,
											"end": 21648,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6166,
											"end": 6198,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6166,
											"end": 6198,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21588,
											"end": 21648,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21588,
											"end": 21648,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21588,
											"end": 21648,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6148,
											"end": 6199,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6215,
											"end": 6233,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6215,
											"end": 6233,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6215,
											"end": 6233,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6208,
											"end": 6242,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6208,
											"end": 6242,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6208,
											"end": 6242,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6258,
											"end": 6276,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6258,
											"end": 6276,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6258,
											"end": 6276,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6251,
											"end": 6285,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6251,
											"end": 6285,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6251,
											"end": 6285,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6121,
											"end": 6139,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6121,
											"end": 6139,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21588,
											"end": 21648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 5946,
											"end": 6291,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21533,
											"end": 21663,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 21533,
											"end": 21663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21704,
											"end": 21761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 21713,
											"end": 21718,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21720,
											"end": 21727,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21748,
											"end": 21753,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21729,
											"end": 21745,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21729,
											"end": 21753,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21755,
											"end": 21760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21704,
											"end": 21712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 21704,
											"end": 21761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21704,
											"end": 21761,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 21704,
											"end": 21761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21405,
											"end": 21792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21316,
											"end": 21792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21316,
											"end": 21792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21316,
											"end": 21792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21316,
											"end": 21792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14216,
											"end": 14394,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 14216,
											"end": 14394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14285,
											"end": 14289,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4288,
											"end": 4298,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14339,
											"end": 14366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 4288,
											"end": 4298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14358,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14360,
											"end": 14365,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14339,
											"end": 14348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 14339,
											"end": 14366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28619,
											"end": 28926,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 28619,
											"end": 28926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27943,
											"end": 27944,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28746,
											"end": 28753,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 28746,
											"end": 28753,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28746,
											"end": 28764,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28742,
											"end": 28828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 28742,
											"end": 28828,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28787,
											"end": 28817,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28787,
											"end": 28817,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3EE5AEB5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28787,
											"end": 28817,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28787,
											"end": 28817,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28787,
											"end": 28817,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28787,
											"end": 28817,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28787,
											"end": 28817,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28787,
											"end": 28817,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28787,
											"end": 28817,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28787,
											"end": 28817,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28787,
											"end": 28817,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28787,
											"end": 28817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28787,
											"end": 28817,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28742,
											"end": 28828,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 28742,
											"end": 28828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27943,
											"end": 27944,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28902,
											"end": 28909,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 28902,
											"end": 28919,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28619,
											"end": 28926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20602,
											"end": 21034,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 20602,
											"end": 21034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20714,
											"end": 20733,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20714,
											"end": 20733,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20710,
											"end": 20799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 20710,
											"end": 20799,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20756,
											"end": 20788,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20756,
											"end": 20788,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20756,
											"end": 20788,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20756,
											"end": 20788,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20785,
											"end": 20786,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20756,
											"end": 20788,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20756,
											"end": 20788,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20756,
											"end": 20788,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2593,
											"end": 2644,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2566,
											"end": 2584,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2566,
											"end": 2584,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20756,
											"end": 20788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2447,
											"end": 2650,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20710,
											"end": 20799,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 20710,
											"end": 20799,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20812,
											"end": 20833,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20812,
											"end": 20833,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20808,
											"end": 20898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 20808,
											"end": 20898,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20887,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20856,
											"end": 20887,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20856,
											"end": 20887,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20887,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20884,
											"end": 20885,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20856,
											"end": 20887,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20856,
											"end": 20887,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20887,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2593,
											"end": 2644,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2566,
											"end": 2584,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2566,
											"end": 2584,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20856,
											"end": 20887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2447,
											"end": 2650,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20808,
											"end": 20898,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 20808,
											"end": 20898,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20907,
											"end": 20925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 20925,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 20925,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 20925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20907,
											"end": 20925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 20925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 20925,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 20918,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20907,
											"end": 20925,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20907,
											"end": 20925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 20925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 20925,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 20925,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20907,
											"end": 20925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 20925,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 20925,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 20934,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 20934,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 20934,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 20934,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 20934,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 20934,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 20934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 20934,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 20934,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 20942,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 20942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 20942,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 20952,
											"end": 21028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20952,
											"end": 21028,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20952,
											"end": 21028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 20952,
											"end": 21028,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21002,
											"end": 21009,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20986,
											"end": 21017,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20995,
											"end": 21000,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20986,
											"end": 21017,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20986,
											"end": 21017,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 21011,
											"end": 21016,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20986,
											"end": 21017,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20986,
											"end": 21017,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20986,
											"end": 21017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 20986,
											"end": 21017,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1843,
											"end": 1868,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1833,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1816,
											"end": 1834,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1834,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1697,
											"end": 1874,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20986,
											"end": 21017,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 20986,
											"end": 21017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20986,
											"end": 21017,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20986,
											"end": 21017,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20986,
											"end": 21017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20986,
											"end": 21017,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20986,
											"end": 21017,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20986,
											"end": 21017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20986,
											"end": 21017,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 20602,
											"end": 21034,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20602,
											"end": 21034,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20602,
											"end": 21034,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20602,
											"end": 21034,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20602,
											"end": 21034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16594,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 16294,
											"end": 16594,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16377,
											"end": 16395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16377,
											"end": 16395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16373,
											"end": 16459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 16373,
											"end": 16459,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16418,
											"end": 16448,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16418,
											"end": 16448,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16418,
											"end": 16448,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16418,
											"end": 16448,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16445,
											"end": 16446,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16418,
											"end": 16448,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16418,
											"end": 16448,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16418,
											"end": 16448,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2593,
											"end": 2644,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2566,
											"end": 2584,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2566,
											"end": 2584,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16418,
											"end": 16448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2447,
											"end": 2650,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16373,
											"end": 16459,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 16373,
											"end": 16459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16472,
											"end": 16488,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16472,
											"end": 16488,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16468,
											"end": 16554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 16468,
											"end": 16554,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16511,
											"end": 16543,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16511,
											"end": 16543,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16511,
											"end": 16543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16511,
											"end": 16543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16541,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16511,
											"end": 16543,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16511,
											"end": 16543,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16511,
											"end": 16543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2593,
											"end": 2644,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2566,
											"end": 2584,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2566,
											"end": 2584,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16511,
											"end": 16543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2447,
											"end": 2650,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16468,
											"end": 16554,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 16468,
											"end": 16554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16563,
											"end": 16587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 16571,
											"end": 16575,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16577,
											"end": 16579,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16581,
											"end": 16586,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16909,
											"end": 18016,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 16909,
											"end": 18016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16998,
											"end": 17016,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16998,
											"end": 17016,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16994,
											"end": 17534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 16994,
											"end": 17534,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17150,
											"end": 17155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17134,
											"end": 17146,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17134,
											"end": 17146,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17134,
											"end": 17155,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17134,
											"end": 17155,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17134,
											"end": 17155,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17134,
											"end": 17155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 17134,
											"end": 17155,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17134,
											"end": 17155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17134,
											"end": 17155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 17134,
											"end": 17155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17134,
											"end": 17155,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 17134,
											"end": 17155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17134,
											"end": 17155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17134,
											"end": 17155,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17134,
											"end": 17155,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16994,
											"end": 17534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 16994,
											"end": 17534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16994,
											"end": 17534,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16994,
											"end": 17534,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 16994,
											"end": 17534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17208,
											"end": 17223,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17208,
											"end": 17223,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17186,
											"end": 17205,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17208,
											"end": 17223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17208,
											"end": 17223,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17208,
											"end": 17223,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17208,
											"end": 17223,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17208,
											"end": 17223,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17208,
											"end": 17223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17208,
											"end": 17223,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17208,
											"end": 17223,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17208,
											"end": 17223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17208,
											"end": 17223,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17208,
											"end": 17223,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17241,
											"end": 17260,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17241,
											"end": 17260,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17241,
											"end": 17260,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17237,
											"end": 17352,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17237,
											"end": 17352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 17237,
											"end": 17352,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17287,
											"end": 17337,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17287,
											"end": 17337,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17287,
											"end": 17337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17287,
											"end": 17337,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6166,
											"end": 6198,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6166,
											"end": 6198,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17287,
											"end": 17337,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17287,
											"end": 17337,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17287,
											"end": 17337,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6148,
											"end": 6199,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6215,
											"end": 6233,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6215,
											"end": 6233,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6215,
											"end": 6233,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6208,
											"end": 6242,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6208,
											"end": 6242,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6208,
											"end": 6242,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6258,
											"end": 6276,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6258,
											"end": 6276,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6258,
											"end": 6276,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6251,
											"end": 6285,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6251,
											"end": 6285,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6251,
											"end": 6285,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6121,
											"end": 6139,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6121,
											"end": 6139,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17287,
											"end": 17337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 5946,
											"end": 6291,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17237,
											"end": 17352,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 17237,
											"end": 17352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17472,
											"end": 17487,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17472,
											"end": 17487,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17472,
											"end": 17481,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17472,
											"end": 17487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17472,
											"end": 17487,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17472,
											"end": 17487,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17472,
											"end": 17487,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17472,
											"end": 17487,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17472,
											"end": 17487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17472,
											"end": 17487,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17472,
											"end": 17487,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17472,
											"end": 17487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17472,
											"end": 17487,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17490,
											"end": 17509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17490,
											"end": 17509,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17490,
											"end": 17509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17490,
											"end": 17509,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17472,
											"end": 17509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17472,
											"end": 17509,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16994,
											"end": 17534,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 16994,
											"end": 17534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17548,
											"end": 17564,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17548,
											"end": 17564,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17544,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 17544,
											"end": 17969,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17711,
											"end": 17723,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17711,
											"end": 17732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17711,
											"end": 17732,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17711,
											"end": 17732,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17711,
											"end": 17732,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17711,
											"end": 17732,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17711,
											"end": 17732,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17711,
											"end": 17732,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17544,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 17544,
											"end": 17969,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17544,
											"end": 17969,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 17544,
											"end": 17969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17922,
											"end": 17935,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17922,
											"end": 17935,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17922,
											"end": 17931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17922,
											"end": 17935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17922,
											"end": 17935,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17922,
											"end": 17935,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17922,
											"end": 17935,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17922,
											"end": 17935,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17922,
											"end": 17935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17922,
											"end": 17935,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17922,
											"end": 17935,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17922,
											"end": 17935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17922,
											"end": 17935,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17922,
											"end": 17944,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17922,
											"end": 17944,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17922,
											"end": 17944,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17922,
											"end": 17944,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17922,
											"end": 17944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17922,
											"end": 17944,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17544,
											"end": 17969,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 17544,
											"end": 17969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17999,
											"end": 18001,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17984,
											"end": 18009,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17993,
											"end": 17997,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17984,
											"end": 18009,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17984,
											"end": 18009,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 18003,
											"end": 18008,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17984,
											"end": 18009,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17984,
											"end": 18009,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17984,
											"end": 18009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 17984,
											"end": 18009,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1843,
											"end": 1868,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1833,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1816,
											"end": 1834,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1834,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1697,
											"end": 1874,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17984,
											"end": 18009,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 17984,
											"end": 18009,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17984,
											"end": 18009,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17984,
											"end": 18009,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17984,
											"end": 18009,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17984,
											"end": 18009,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17984,
											"end": 18009,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17984,
											"end": 18009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17984,
											"end": 18009,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 16909,
											"end": 18016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16909,
											"end": 18016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16909,
											"end": 18016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16909,
											"end": 18016,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 368,
											"end": 786,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 368,
											"end": 786,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 506,
											"end": 515,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 499,
											"end": 520,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 480,
											"end": 484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 549,
											"end": 555,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 543,
											"end": 556,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 592,
											"end": 598,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 587,
											"end": 589,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 576,
											"end": 585,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 572,
											"end": 590,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 565,
											"end": 599,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 651,
											"end": 657,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 646,
											"end": 648,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 638,
											"end": 644,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 634,
											"end": 649,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 629,
											"end": 631,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 618,
											"end": 627,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 614,
											"end": 632,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 608,
											"end": 658,
											"name": "MCOPY",
											"source": 1
										},
										{
											"begin": 707,
											"end": 708,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 702,
											"end": 704,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 693,
											"end": 699,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 682,
											"end": 691,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 678,
											"end": 700,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 674,
											"end": 705,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 667,
											"end": 709,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 777,
											"end": 779,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 770,
											"end": 772,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 766,
											"end": 773,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 761,
											"end": 763,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 753,
											"end": 759,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 749,
											"end": 764,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 745,
											"end": 774,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 734,
											"end": 743,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 726,
											"end": 780,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 718,
											"end": 780,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 718,
											"end": 780,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 718,
											"end": 780,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 368,
											"end": 786,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 368,
											"end": 786,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 368,
											"end": 786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 368,
											"end": 786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 368,
											"end": 786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 791,
											"end": 964,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 791,
											"end": 964,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 859,
											"end": 879,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 859,
											"end": 879,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 908,
											"end": 939,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 908,
											"end": 939,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 898,
											"end": 940,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 898,
											"end": 940,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 888,
											"end": 958,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 888,
											"end": 958,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 954,
											"end": 955,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 951,
											"end": 952,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 944,
											"end": 956,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 888,
											"end": 958,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 888,
											"end": 958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 791,
											"end": 964,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 791,
											"end": 964,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 791,
											"end": 964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 791,
											"end": 964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 969,
											"end": 1269,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 969,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1037,
											"end": 1043,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1100,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1086,
											"end": 1095,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1084,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1096,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1101,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1118,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 1066,
											"end": 1118,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1114,
											"end": 1115,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1111,
											"end": 1112,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1118,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 1066,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 1156,
											"end": 1165,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 1137,
											"end": 1166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1166,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 1137,
											"end": 1166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1166,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1235,
											"end": 1237,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1220,
											"end": 1238,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1238,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1238,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1238,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1207,
											"end": 1239,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1207,
											"end": 1239,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 969,
											"end": 1269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1466,
											"end": 1692,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1466,
											"end": 1692,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1531,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1578,
											"end": 1580,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1566,
											"end": 1575,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1557,
											"end": 1564,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1576,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1549,
											"end": 1581,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1546,
											"end": 1598,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1546,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 1546,
											"end": 1598,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1594,
											"end": 1595,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1591,
											"end": 1592,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1596,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1546,
											"end": 1598,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 1546,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1639,
											"end": 1662,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1639,
											"end": 1662,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1466,
											"end": 1692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1466,
											"end": 1692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1879,
											"end": 2253,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1879,
											"end": 2253,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1956,
											"end": 1962,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1964,
											"end": 1970,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1972,
											"end": 1978,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2027,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2013,
											"end": 2022,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2011,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2023,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1996,
											"end": 2028,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2045,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2045,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 1993,
											"end": 2045,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2042,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2038,
											"end": 2039,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2031,
											"end": 2043,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2045,
											"name": "tag",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 1993,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2064,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 2083,
											"end": 2092,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2064,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 2064,
											"end": 2093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2064,
											"end": 2093,
											"name": "tag",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 2064,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2054,
											"end": 2093,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2054,
											"end": 2093,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2112,
											"end": 2150,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 2146,
											"end": 2148,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2135,
											"end": 2144,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2149,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2112,
											"end": 2150,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 2112,
											"end": 2150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2112,
											"end": 2150,
											"name": "tag",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 2112,
											"end": 2150,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1879,
											"end": 2253,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1879,
											"end": 2253,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 2102,
											"end": 2150,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2102,
											"end": 2150,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2219,
											"end": 2221,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2204,
											"end": 2222,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2204,
											"end": 2222,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2204,
											"end": 2222,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2204,
											"end": 2222,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2191,
											"end": 2223,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2191,
											"end": 2223,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1879,
											"end": 2253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2655,
											"end": 2841,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2655,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2720,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2767,
											"end": 2769,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2755,
											"end": 2764,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2746,
											"end": 2753,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2742,
											"end": 2765,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2738,
											"end": 2770,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2787,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 2735,
											"end": 2787,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2783,
											"end": 2784,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2781,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2773,
											"end": 2785,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2787,
											"name": "tag",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 2735,
											"end": 2787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2806,
											"end": 2835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 2825,
											"end": 2834,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2806,
											"end": 2835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 2806,
											"end": 2835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2846,
											"end": 3192,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2846,
											"end": 3192,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 2920,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2922,
											"end": 2928,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2975,
											"end": 2977,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2963,
											"end": 2972,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2961,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 2973,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2946,
											"end": 2978,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 2995,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 2995,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 2943,
											"end": 2995,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2991,
											"end": 2992,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2988,
											"end": 2989,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2981,
											"end": 2993,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 2995,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 2943,
											"end": 2995,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3036,
											"end": 3059,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3036,
											"end": 3059,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3036,
											"end": 3059,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3158,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3141,
											"end": 3159,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3141,
											"end": 3159,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3141,
											"end": 3159,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3128,
											"end": 3160,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3128,
											"end": 3160,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2846,
											"end": 3192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3457,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 3197,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3265,
											"end": 3271,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3273,
											"end": 3279,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3326,
											"end": 3328,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3314,
											"end": 3323,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3305,
											"end": 3312,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3301,
											"end": 3324,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3297,
											"end": 3329,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3294,
											"end": 3346,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3294,
											"end": 3346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 3294,
											"end": 3346,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3342,
											"end": 3343,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3339,
											"end": 3340,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3332,
											"end": 3344,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3294,
											"end": 3346,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 3294,
											"end": 3346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3365,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 3384,
											"end": 3393,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3365,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 3365,
											"end": 3394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3365,
											"end": 3394,
											"name": "tag",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 3365,
											"end": 3394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3355,
											"end": 3394,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3355,
											"end": 3394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 3447,
											"end": 3449,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3436,
											"end": 3445,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3432,
											"end": 3450,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 3413,
											"end": 3451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3451,
											"name": "tag",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 3413,
											"end": 3451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3457,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3457,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3457,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3462,
											"end": 3842,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 3462,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3542,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3537,
											"end": 3549,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3537,
											"end": 3549,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3537,
											"end": 3549,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 3537,
											"end": 3549,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3584,
											"end": 3596,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3584,
											"end": 3596,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3584,
											"end": 3596,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3605,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 3605,
											"end": 3666,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3659,
											"end": 3663,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3647,
											"end": 3664,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3664,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3664,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3605,
											"end": 3666,
											"name": "tag",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 3605,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3712,
											"end": 3714,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3704,
											"end": 3710,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3701,
											"end": 3715,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3681,
											"end": 3699,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3678,
											"end": 3716,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3675,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 3675,
											"end": 3836,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3758,
											"end": 3768,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 3753,
											"end": 3756,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3749,
											"end": 3769,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3746,
											"end": 3747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3739,
											"end": 3770,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3793,
											"end": 3797,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 3790,
											"end": 3791,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3783,
											"end": 3798,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3821,
											"end": 3825,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3818,
											"end": 3819,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3811,
											"end": 3826,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3675,
											"end": 3836,
											"name": "tag",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 3675,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3675,
											"end": 3836,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3462,
											"end": 3842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3462,
											"end": 3842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3462,
											"end": 3842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3462,
											"end": 3842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3847,
											"end": 3974,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 3847,
											"end": 3974,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 3918,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 3903,
											"end": 3906,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3899,
											"end": 3919,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 3897,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3889,
											"end": 3920,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3939,
											"end": 3943,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3936,
											"end": 3937,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3929,
											"end": 3944,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3963,
											"end": 3967,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3960,
											"end": 3961,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3953,
											"end": 3968,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4147,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 3979,
											"end": 4147,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4052,
											"end": 4061,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4052,
											"end": 4061,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4052,
											"end": 4061,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4083,
											"end": 4092,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4083,
											"end": 4092,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4100,
											"end": 4115,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4100,
											"end": 4115,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4100,
											"end": 4115,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4094,
											"end": 4116,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4094,
											"end": 4116,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4080,
											"end": 4117,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4141,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 4070,
											"end": 4141,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4121,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 4121,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 4121,
											"end": 4139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4152,
											"end": 4369,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 4152,
											"end": 4369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4192,
											"end": 4193,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4218,
											"end": 4219,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4208,
											"end": 4340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 4208,
											"end": 4340,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4262,
											"end": 4272,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 4257,
											"end": 4260,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 4253,
											"end": 4273,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 4250,
											"end": 4251,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4243,
											"end": 4274,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4297,
											"end": 4301,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 4294,
											"end": 4295,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4287,
											"end": 4302,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4325,
											"end": 4329,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4322,
											"end": 4323,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4315,
											"end": 4330,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4208,
											"end": 4340,
											"name": "tag",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 4208,
											"end": 4340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4354,
											"end": 4363,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4354,
											"end": 4363,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4152,
											"end": 4369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4374,
											"end": 4499,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 4374,
											"end": 4499,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4439,
											"end": 4448,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4439,
											"end": 4448,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4439,
											"end": 4448,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4460,
											"end": 4470,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4460,
											"end": 4470,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4460,
											"end": 4470,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4457,
											"end": 4493,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4457,
											"end": 4493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 4457,
											"end": 4493,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4473,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 4473,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 4473,
											"end": 4491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5560,
											"end": 5688,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 5560,
											"end": 5688,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5627,
											"end": 5636,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5627,
											"end": 5636,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5627,
											"end": 5636,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5648,
											"end": 5659,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5648,
											"end": 5659,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5648,
											"end": 5659,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5645,
											"end": 5682,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5645,
											"end": 5682,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 5645,
											"end": 5682,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 5662,
											"end": 5680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/Cardeiro_4_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"executeHalving()": "ed299016",
							"getExpectedBurn(uint256)": "102b67ab",
							"halvingInterval()": "6a47aa06",
							"halvingRate()": "7e6335f4",
							"isHalvingDue()": "768a4173",
							"lastHalvingTime()": "8cbb6df7",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"treasury()": "61d027b3",
							"updateHalvingParams(uint256,uint256)": "bbb0b1a6",
							"updateTreasury(address)": "7f51bb1f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_halvingInterval\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_halvingRate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"burnedAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Halving\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"executeHalving\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"getExpectedBurn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"halvingInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"halvingRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isHalvingDue\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastHalvingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_halvingInterval\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_halvingRate\",\"type\":\"uint256\"}],\"name\":\"updateHalvingParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"updateTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Cardeiro_4_flattened.sol\":\"Cardeiro\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Cardeiro_4_flattened.sol\":{\"keccak256\":\"0xcd4d3261f923d093dbcf6e8c9ec9a9882677aa8320a20f7a24664511aaa0b130\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d800a1c4e78be004025743f6cf44e7d911b95c5395981ec41be18d14d8825ba\",\"dweb:/ipfs/Qmd9ZZ3L53nGaMBCaGsxjWfM1dqpHwvUryc4mq46M7nzkB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 279,
								"contract": "contracts/Cardeiro_4_flattened.sol:Cardeiro",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 285,
								"contract": "contracts/Cardeiro_4_flattened.sol:Cardeiro",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 287,
								"contract": "contracts/Cardeiro_4_flattened.sol:Cardeiro",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 289,
								"contract": "contracts/Cardeiro_4_flattened.sol:Cardeiro",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 291,
								"contract": "contracts/Cardeiro_4_flattened.sol:Cardeiro",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 818,
								"contract": "contracts/Cardeiro_4_flattened.sol:Cardeiro",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 967,
								"contract": "contracts/Cardeiro_4_flattened.sol:Cardeiro",
								"label": "_status",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1036,
								"contract": "contracts/Cardeiro_4_flattened.sol:Cardeiro",
								"label": "treasury",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 1038,
								"contract": "contracts/Cardeiro_4_flattened.sol:Cardeiro",
								"label": "halvingInterval",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1040,
								"contract": "contracts/Cardeiro_4_flattened.sol:Cardeiro",
								"label": "lastHalvingTime",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1042,
								"contract": "contracts/Cardeiro_4_flattened.sol:Cardeiro",
								"label": "halvingRate",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Cardeiro_4_flattened.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Cardeiro_4_flattened.sol\":{\"keccak256\":\"0xcd4d3261f923d093dbcf6e8c9ec9a9882677aa8320a20f7a24664511aaa0b130\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d800a1c4e78be004025743f6cf44e7d911b95c5395981ec41be18d14d8825ba\",\"dweb:/ipfs/Qmd9ZZ3L53nGaMBCaGsxjWfM1dqpHwvUryc4mq46M7nzkB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Cardeiro_4_flattened.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Cardeiro_4_flattened.sol\":{\"keccak256\":\"0xcd4d3261f923d093dbcf6e8c9ec9a9882677aa8320a20f7a24664511aaa0b130\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d800a1c4e78be004025743f6cf44e7d911b95c5395981ec41be18d14d8825ba\",\"dweb:/ipfs/Qmd9ZZ3L53nGaMBCaGsxjWfM1dqpHwvUryc4mq46M7nzkB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 279,
								"contract": "contracts/Cardeiro_4_flattened.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 285,
								"contract": "contracts/Cardeiro_4_flattened.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 287,
								"contract": "contracts/Cardeiro_4_flattened.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 289,
								"contract": "contracts/Cardeiro_4_flattened.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 291,
								"contract": "contracts/Cardeiro_4_flattened.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20Burnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Cardeiro_4_flattened.sol\":\"ERC20Burnable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Cardeiro_4_flattened.sol\":{\"keccak256\":\"0xcd4d3261f923d093dbcf6e8c9ec9a9882677aa8320a20f7a24664511aaa0b130\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d800a1c4e78be004025743f6cf44e7d911b95c5395981ec41be18d14d8825ba\",\"dweb:/ipfs/Qmd9ZZ3L53nGaMBCaGsxjWfM1dqpHwvUryc4mq46M7nzkB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 279,
								"contract": "contracts/Cardeiro_4_flattened.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 285,
								"contract": "contracts/Cardeiro_4_flattened.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 287,
								"contract": "contracts/Cardeiro_4_flattened.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 289,
								"contract": "contracts/Cardeiro_4_flattened.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 291,
								"contract": "contracts/Cardeiro_4_flattened.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Cardeiro_4_flattened.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Cardeiro_4_flattened.sol\":{\"keccak256\":\"0xcd4d3261f923d093dbcf6e8c9ec9a9882677aa8320a20f7a24664511aaa0b130\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d800a1c4e78be004025743f6cf44e7d911b95c5395981ec41be18d14d8825ba\",\"dweb:/ipfs/Qmd9ZZ3L53nGaMBCaGsxjWfM1dqpHwvUryc4mq46M7nzkB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Cardeiro_4_flattened.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Cardeiro_4_flattened.sol\":{\"keccak256\":\"0xcd4d3261f923d093dbcf6e8c9ec9a9882677aa8320a20f7a24664511aaa0b130\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d800a1c4e78be004025743f6cf44e7d911b95c5395981ec41be18d14d8825ba\",\"dweb:/ipfs/Qmd9ZZ3L53nGaMBCaGsxjWfM1dqpHwvUryc4mq46M7nzkB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Cardeiro_4_flattened.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Cardeiro_4_flattened.sol\":{\"keccak256\":\"0xcd4d3261f923d093dbcf6e8c9ec9a9882677aa8320a20f7a24664511aaa0b130\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d800a1c4e78be004025743f6cf44e7d911b95c5395981ec41be18d14d8825ba\",\"dweb:/ipfs/Qmd9ZZ3L53nGaMBCaGsxjWfM1dqpHwvUryc4mq46M7nzkB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Cardeiro_4_flattened.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Cardeiro_4_flattened.sol\":{\"keccak256\":\"0xcd4d3261f923d093dbcf6e8c9ec9a9882677aa8320a20f7a24664511aaa0b130\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d800a1c4e78be004025743f6cf44e7d911b95c5395981ec41be18d14d8825ba\",\"dweb:/ipfs/Qmd9ZZ3L53nGaMBCaGsxjWfM1dqpHwvUryc4mq46M7nzkB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Cardeiro_4_flattened.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Cardeiro_4_flattened.sol\":{\"keccak256\":\"0xcd4d3261f923d093dbcf6e8c9ec9a9882677aa8320a20f7a24664511aaa0b130\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d800a1c4e78be004025743f6cf44e7d911b95c5395981ec41be18d14d8825ba\",\"dweb:/ipfs/Qmd9ZZ3L53nGaMBCaGsxjWfM1dqpHwvUryc4mq46M7nzkB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Cardeiro_4_flattened.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Cardeiro_4_flattened.sol\":{\"keccak256\":\"0xcd4d3261f923d093dbcf6e8c9ec9a9882677aa8320a20f7a24664511aaa0b130\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d800a1c4e78be004025743f6cf44e7d911b95c5395981ec41be18d14d8825ba\",\"dweb:/ipfs/Qmd9ZZ3L53nGaMBCaGsxjWfM1dqpHwvUryc4mq46M7nzkB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 818,
								"contract": "contracts/Cardeiro_4_flattened.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ReentrancyGuard": {
					"abi": [
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"errors": {
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Cardeiro_4_flattened.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Cardeiro_4_flattened.sol\":{\"keccak256\":\"0xcd4d3261f923d093dbcf6e8c9ec9a9882677aa8320a20f7a24664511aaa0b130\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d800a1c4e78be004025743f6cf44e7d911b95c5395981ec41be18d14d8825ba\",\"dweb:/ipfs/Qmd9ZZ3L53nGaMBCaGsxjWfM1dqpHwvUryc4mq46M7nzkB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 967,
								"contract": "contracts/Cardeiro_4_flattened.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Cardeiro_4_flattened.sol": {
				"ast": {
					"absolutePath": "contracts/Cardeiro_4_flattened.sol",
					"exportedSymbols": {
						"Cardeiro": [
							1337
						],
						"Context": [
							129
						],
						"ERC20": [
							771
						],
						"ERC20Burnable": [
							812
						],
						"IERC1155Errors": [
							265
						],
						"IERC20": [
							77
						],
						"IERC20Errors": [
							170
						],
						"IERC20Metadata": [
							100
						],
						"IERC721Errors": [
							218
						],
						"Ownable": [
							957
						],
						"ReentrancyGuard": [
							1025
						]
					},
					"id": 1338,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "165:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "191:71:0",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "273:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "286:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "455:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "480:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "464:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "464:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "502:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "486:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "486:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "514:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "506:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "506:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "463:57:0"
									},
									"src": "449:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "527:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "686:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "711:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "695:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "734:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "718:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "718:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "751:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "743:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "743:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "694:63:0"
									},
									"src": "680:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "764:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "843:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "854:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "880:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "880:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "879:9:0"
									},
									"scope": 77,
									"src": "834:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "895:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "980:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "998:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "990:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "989:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1030:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1030:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1029:9:0"
									},
									"scope": 77,
									"src": "971:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "1045:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1272:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1289:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1281:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1281:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1301:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1293:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1293:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1280:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1326:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1326:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1325:6:0"
									},
									"scope": 77,
									"src": "1263:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1338:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1616:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1634:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1626:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1626:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1649:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1641:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1641:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1625:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1681:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1681:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1680:9:0"
									},
									"scope": 77,
									"src": "1607:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1696:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2377:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2393:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2385:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2385:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2410:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2402:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2402:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2384:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2435:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2435:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2434:6:0"
									},
									"scope": 77,
									"src": "2368:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2447:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2758:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2779:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2771:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2771:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2793:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2785:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2785:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2805:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2797:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2797:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2830:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2830:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2829:6:0"
									},
									"scope": 77,
									"src": "2749:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1338,
							"src": "263:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 78,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "3010:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 80,
										"name": "IERC20",
										"nameLocations": [
											"3153:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "3153:6:0"
									},
									"id": 81,
									"nodeType": "InheritanceSpecifier",
									"src": "3153:6:0"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 79,
								"nodeType": "StructuredDocumentation",
								"src": "3037:87:0",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 100,
							"linearizedBaseContracts": [
								100,
								77
							],
							"name": "IERC20Metadata",
							"nameLocation": "3135:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "3166:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 87,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "3234:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3238:2:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3264:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 84,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3264:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3263:15:0"
									},
									"scope": 100,
									"src": "3225:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "3285:56:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 93,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "3355:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3361:2:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3387:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 90,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3387:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3386:15:0"
									},
									"scope": 100,
									"src": "3346:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3408:65:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3487:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3495:2:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "3521:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 96,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3521:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3520:7:0"
									},
									"scope": 100,
									"src": "3478:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1338,
							"src": "3125:405:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 101,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "3654:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 102,
								"nodeType": "StructuredDocumentation",
								"src": "3680:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 129,
							"linearizedBaseContracts": [
								129
							],
							"name": "Context",
							"nameLocation": "4195:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "4271:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 107,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4288:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4292:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4288:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 106,
												"id": 109,
												"nodeType": "Return",
												"src": "4281:17:0"
											}
										]
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "4218:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4228:2:0"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4262:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:9:0"
									},
									"scope": 129,
									"src": "4209:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "4378:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 116,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4395:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4399:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "4395:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 115,
												"id": 118,
												"nodeType": "Return",
												"src": "4388:15:0"
											}
										]
									},
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "4320:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4328:2:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "4362:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 113,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4362:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4361:16:0"
									},
									"scope": 129,
									"src": "4311:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "4488:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4505:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 124,
												"id": 126,
												"nodeType": "Return",
												"src": "4498:8:0"
											}
										]
									},
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "4425:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4445:2:0"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "4479:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4479:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4478:9:0"
									},
									"scope": 129,
									"src": "4416:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1338,
							"src": "4177:338:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 130,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "4662:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 131,
								"nodeType": "StructuredDocumentation",
								"src": "4688:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 170,
							"linearizedBaseContracts": [
								170
							],
							"name": "IERC20Errors",
							"nameLocation": "4840:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "4859:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 140,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "5179:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5212:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5204:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5204:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "5228:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5220:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5220:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "5245:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5237:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5237:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5203:49:0"
									},
									"src": "5173:80:0"
								},
								{
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "5259:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 145,
									"name": "ERC20InvalidSender",
									"nameLocation": "5422:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5449:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "5441:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5441:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5440:16:0"
									},
									"src": "5416:41:0"
								},
								{
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "5463:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 150,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "5633:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5662:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5654:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5653:18:0"
									},
									"src": "5627:45:0"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "5678:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 159,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "6034:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6069:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6061:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6061:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "6086:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6078:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6078:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "6105:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6097:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6097:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6060:52:0"
									},
									"src": "6028:85:0"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "6119:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 164,
									"name": "ERC20InvalidApprover",
									"nameLocation": "6304:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "6333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "6325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6324:18:0"
									},
									"src": "6298:45:0"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "6349:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 169,
									"name": "ERC20InvalidSpender",
									"nameLocation": "6555:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6583:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "6575:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6575:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6574:17:0"
									},
									"src": "6549:43:0"
								}
							],
							"scope": 1338,
							"src": "4830:1764:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 171,
								"nodeType": "StructuredDocumentation",
								"src": "6596:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 218,
							"linearizedBaseContracts": [
								218
							],
							"name": "IERC721Errors",
							"nameLocation": "6750:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "6770:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 176,
									"name": "ERC721InvalidOwner",
									"nameLocation": "7000:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7027:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "7019:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7019:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7018:15:0"
									},
									"src": "6994:40:0"
								},
								{
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "7040:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 181,
									"name": "ERC721NonexistentToken",
									"nameLocation": "7183:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7214:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "7206:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7206:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7205:17:0"
									},
									"src": "7177:46:0"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "7229:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 190,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "7529:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7558:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7550:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7550:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7574:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7566:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7566:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7591:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7583:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7583:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7549:48:0"
									},
									"src": "7523:75:0"
								},
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "7604:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 195,
									"name": "ERC721InvalidSender",
									"nameLocation": "7767:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7795:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "7787:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7787:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7786:16:0"
									},
									"src": "7761:42:0"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "7809:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 200,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "7979:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "8009:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "8001:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8001:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8000:18:0"
									},
									"src": "7973:46:0"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "8025:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 207,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "8283:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8318:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "8310:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8310:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8336:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "8328:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8328:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8309:35:0"
									},
									"src": "8277:68:0"
								},
								{
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "8351:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 212,
									"name": "ERC721InvalidApprover",
									"nameLocation": "8536:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "8566:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "8558:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8558:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8557:18:0"
									},
									"src": "8530:46:0"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "8582:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 217,
									"name": "ERC721InvalidOperator",
									"nameLocation": "8790:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8820:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "8812:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8812:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8811:18:0"
									},
									"src": "8784:46:0"
								}
							],
							"scope": 1338,
							"src": "6740:2092:0",
							"usedErrors": [
								176,
								181,
								190,
								195,
								200,
								207,
								212,
								217
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 219,
								"nodeType": "StructuredDocumentation",
								"src": "8834:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 265,
							"linearizedBaseContracts": [
								265
							],
							"name": "IERC1155Errors",
							"nameLocation": "8990:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "9011:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 230,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "9383:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9418:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9410:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9410:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "9434:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9426:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9426:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "9451:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9443:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9443:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9467:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9459:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9459:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9409:66:0"
									},
									"src": "9377:99:0"
								},
								{
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "9482:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 235,
									"name": "ERC1155InvalidSender",
									"nameLocation": "9645:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9674:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "9666:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9666:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9665:16:0"
									},
									"src": "9639:43:0"
								},
								{
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "9688:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 240,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "9858:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "9889:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "9881:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9881:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9880:18:0"
									},
									"src": "9852:47:0"
								},
								{
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "9905:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 247,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "10172:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10209:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "10201:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10201:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10227:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "10219:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10219:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10200:33:0"
									},
									"src": "10166:68:0"
								},
								{
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "10240:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 252,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "10425:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "10456:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "10448:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10448:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10447:18:0"
									},
									"src": "10419:47:0"
								},
								{
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "10472:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 257,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "10680:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10711:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "10703:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10702:18:0"
									},
									"src": "10674:47:0"
								},
								{
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "10727:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 264,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "11018:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "11052:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "11044:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11044:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "11071:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "11063:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11063:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11043:41:0"
									},
									"src": "11012:73:0"
								}
							],
							"scope": 1338,
							"src": "8980:2107:0",
							"usedErrors": [
								230,
								235,
								240,
								247,
								252,
								257,
								264
							],
							"usedEvents": []
						},
						{
							"id": 266,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "11219:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 268,
										"name": "Context",
										"nameLocations": [
											"12034:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 129,
										"src": "12034:7:0"
									},
									"id": 269,
									"nodeType": "InheritanceSpecifier",
									"src": "12034:7:0"
								},
								{
									"baseName": {
										"id": 270,
										"name": "IERC20",
										"nameLocations": [
											"12043:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "12043:6:0"
									},
									"id": 271,
									"nodeType": "InheritanceSpecifier",
									"src": "12043:6:0"
								},
								{
									"baseName": {
										"id": 272,
										"name": "IERC20Metadata",
										"nameLocations": [
											"12051:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 100,
										"src": "12051:14:0"
									},
									"id": 273,
									"nodeType": "InheritanceSpecifier",
									"src": "12051:14:0"
								},
								{
									"baseName": {
										"id": 274,
										"name": "IERC20Errors",
										"nameLocations": [
											"12067:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 170,
										"src": "12067:12:0"
									},
									"id": 275,
									"nodeType": "InheritanceSpecifier",
									"src": "12067:12:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 267,
								"nodeType": "StructuredDocumentation",
								"src": "11249:757:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 771,
							"linearizedBaseContracts": [
								771,
								170,
								100,
								77,
								129
							],
							"name": "ERC20",
							"nameLocation": "12025:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 279,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "12130:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12086:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 278,
										"keyName": "account",
										"keyNameLocation": "12102:7:0",
										"keyType": {
											"id": 276,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12094:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12086:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 277,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "12113:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 285,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "12218:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12146:83:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 284,
										"keyName": "account",
										"keyNameLocation": "12162:7:0",
										"keyType": {
											"id": 280,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12154:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12146:63:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 283,
											"keyName": "spender",
											"keyNameLocation": "12189:7:0",
											"keyType": {
												"id": 281,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "12181:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "12173:35:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 282,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "12200:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 287,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "12252:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12236:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 286,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12236:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 289,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "12286:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12271:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 288,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12271:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 291,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "12312:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12297:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 290,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12297:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "12558:57:0",
										"statements": [
											{
												"expression": {
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 299,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "12568:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 300,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "12576:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12568:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "12568:13:0"
											},
											{
												"expression": {
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 303,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 291,
														"src": "12591:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 304,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "12601:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12591:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 306,
												"nodeType": "ExpressionStatement",
												"src": "12591:17:0"
											}
										]
									},
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "12326:171:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 308,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "12528:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "12514:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 293,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12514:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "12549:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "12535:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 295,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12535:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12513:44:0"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12558:0:0"
									},
									"scope": 771,
									"src": "12502:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										87
									],
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "12740:29:0",
										"statements": [
											{
												"expression": {
													"id": 314,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 289,
													"src": "12757:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 313,
												"id": 315,
												"nodeType": "Return",
												"src": "12750:12:0"
											}
										]
									},
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "12621:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "12689:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12693:2:0"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "12725:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 311,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12725:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12724:15:0"
									},
									"scope": 771,
									"src": "12680:89:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										93
									],
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "12944:31:0",
										"statements": [
											{
												"expression": {
													"id": 323,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 291,
													"src": "12961:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 322,
												"id": 324,
												"nodeType": "Return",
												"src": "12954:14:0"
											}
										]
									},
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "12775:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "12891:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12897:2:0"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "12929:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 320,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12929:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12928:15:0"
									},
									"scope": 771,
									"src": "12882:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										99
									],
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "13664:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13681:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 331,
												"id": 333,
												"nodeType": "Return",
												"src": "13674:9:0"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "12981:622:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "13617:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13625:2:0"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "13657:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 329,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "13657:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13656:7:0"
									},
									"scope": 771,
									"src": "13608:82:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										26
									],
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "13811:36:0",
										"statements": [
											{
												"expression": {
													"id": 341,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 287,
													"src": "13828:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 340,
												"id": 342,
												"nodeType": "Return",
												"src": "13821:19:0"
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "13696:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "13759:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13770:2:0"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "13802:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13802:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13801:9:0"
									},
									"scope": 771,
									"src": "13750:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										34
									],
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "13979:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 352,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 279,
														"src": "13996:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 354,
													"indexExpression": {
														"id": 353,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "14006:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13996:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 351,
												"id": 355,
												"nodeType": "Return",
												"src": "13989:25:0"
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "13853:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "13914:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "13932:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "13924:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13924:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13923:17:0"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "13970:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13969:9:0"
									},
									"scope": 771,
									"src": "13905:116:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										44
									],
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "14291:103:0",
										"statements": [
											{
												"assignments": [
													368
												],
												"declarations": [
													{
														"constant": false,
														"id": 368,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "14309:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 380,
														"src": "14301:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 367,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14301:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 371,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 369,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "14317:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14317:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14301:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 373,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "14349:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 374,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "14356:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 375,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "14360:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 372,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "14339:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14339:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "14339:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14383:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 366,
												"id": 379,
												"nodeType": "Return",
												"src": "14376:11:0"
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "14027:184:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "14225:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14242:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14234:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14234:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14254:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14246:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14246:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14233:27:0"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14285:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 364,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14285:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14284:6:0"
									},
									"scope": 771,
									"src": "14216:178:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										54
									],
									"body": {
										"id": 397,
										"nodeType": "Block",
										"src": "14541:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 391,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "14558:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 393,
														"indexExpression": {
															"id": 392,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "14570:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "14558:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 395,
													"indexExpression": {
														"id": 394,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "14577:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14558:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 390,
												"id": 396,
												"nodeType": "Return",
												"src": "14551:34:0"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "14400:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "14461:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14479:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14471:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14471:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14494:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14486:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14486:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14470:32:0"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14532:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14532:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14531:9:0"
									},
									"scope": 771,
									"src": "14452:140:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										64
									],
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "14978:107:0",
										"statements": [
											{
												"assignments": [
													409
												],
												"declarations": [
													{
														"constant": false,
														"id": 409,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "14996:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 421,
														"src": "14988:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 408,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14988:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 412,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 410,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "15004:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15004:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14988:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 414,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "15035:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 415,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "15042:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 416,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "15051:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 413,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															662,
															722
														],
														"referencedDeclaration": 662,
														"src": "15026:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15026:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "15026:31:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15074:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 407,
												"id": 420,
												"nodeType": "Return",
												"src": "15067:11:0"
											}
										]
									},
									"documentation": {
										"id": 399,
										"nodeType": "StructuredDocumentation",
										"src": "14598:296:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "14908:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14924:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "14916:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14916:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14941:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "14933:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14933:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14915:32:0"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "14972:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 405,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14972:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14971:6:0"
									},
									"scope": 771,
									"src": "14899:186:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										76
									],
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "15770:151:0",
										"statements": [
											{
												"assignments": [
													435
												],
												"declarations": [
													{
														"constant": false,
														"id": 435,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "15788:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 453,
														"src": "15780:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 434,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "15780:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 438,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 436,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "15798:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15798:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15780:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 440,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "15836:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 441,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "15842:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 442,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "15851:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 439,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "15820:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15820:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 444,
												"nodeType": "ExpressionStatement",
												"src": "15820:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 446,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "15877:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 447,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "15883:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 448,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "15887:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 445,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "15867:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15867:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "15867:26:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15910:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 433,
												"id": 452,
												"nodeType": "Return",
												"src": "15903:11:0"
											}
										]
									},
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "15091:581:0",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "15686:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15707:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15699:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15721:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15713:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15713:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15733:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15725:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15725:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15698:41:0"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15764:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 431,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15764:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15763:6:0"
									},
									"scope": 771,
									"src": "15677:244:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "16363:231:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 464,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "16377:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16393:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16385:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 465,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16385:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 468,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16385:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16377:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 478,
												"nodeType": "IfStatement",
												"src": "16373:86:0",
												"trueBody": {
													"id": 477,
													"nodeType": "Block",
													"src": "16397:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 473,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16445:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 472,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16437:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 471,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "16437:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16437:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 470,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "16418:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16418:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 476,
															"nodeType": "RevertStatement",
															"src": "16411:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 479,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "16472:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16486:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16478:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 480,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16478:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 483,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16478:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16472:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 493,
												"nodeType": "IfStatement",
												"src": "16468:86:0",
												"trueBody": {
													"id": 492,
													"nodeType": "Block",
													"src": "16490:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 488,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16540:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 487,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16532:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 486,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "16532:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16532:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 485,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "16511:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16511:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 491,
															"nodeType": "RevertStatement",
															"src": "16504:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 495,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "16571:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 496,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "16577:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 497,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "16581:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 494,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "16563:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16563:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "16563:24:0"
											}
										]
									},
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "15927:362:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "16303:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16321:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16313:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16313:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16335:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16327:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16327:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16347:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16339:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16339:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16312:41:0"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16363:0:0"
									},
									"scope": 771,
									"src": "16294:300:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "16984:1032:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 511,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "16998:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17014:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17006:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 512,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17006:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17006:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16998:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 548,
													"nodeType": "Block",
													"src": "17172:362:0",
													"statements": [
														{
															"assignments": [
																523
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 523,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "17194:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 548,
																	"src": "17186:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 522,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "17186:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 527,
															"initialValue": {
																"baseExpression": {
																	"id": 524,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 279,
																	"src": "17208:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 526,
																"indexExpression": {
																	"id": 525,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 504,
																	"src": "17218:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17208:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "17186:37:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 528,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 523,
																	"src": "17241:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 529,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "17255:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17241:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 538,
															"nodeType": "IfStatement",
															"src": "17237:115:0",
															"trueBody": {
																"id": 537,
																"nodeType": "Block",
																"src": "17262:90:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 532,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 504,
																					"src": "17312:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 533,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 523,
																					"src": "17318:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 534,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 508,
																					"src": "17331:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 531,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 140,
																				"src": "17287:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 535,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17287:50:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 536,
																		"nodeType": "RevertStatement",
																		"src": "17280:57:0"
																	}
																]
															}
														},
														{
															"id": 547,
															"nodeType": "UncheckedBlock",
															"src": "17365:159:0",
															"statements": [
																{
																	"expression": {
																		"id": 545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 539,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "17472:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 541,
																			"indexExpression": {
																				"id": 540,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 504,
																				"src": "17482:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "17472:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 542,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 523,
																				"src": "17490:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 543,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 508,
																				"src": "17504:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "17490:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17472:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 546,
																	"nodeType": "ExpressionStatement",
																	"src": "17472:37:0"
																}
															]
														}
													]
												},
												"id": 549,
												"nodeType": "IfStatement",
												"src": "16994:540:0",
												"trueBody": {
													"id": 521,
													"nodeType": "Block",
													"src": "17018:148:0",
													"statements": [
														{
															"expression": {
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 517,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 287,
																	"src": "17134:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 518,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "17150:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17134:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 520,
															"nodeType": "ExpressionStatement",
															"src": "17134:21:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 550,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "17548:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17562:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17554:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 551,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17554:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17554:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17548:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 569,
													"nodeType": "Block",
													"src": "17763:206:0",
													"statements": [
														{
															"id": 568,
															"nodeType": "UncheckedBlock",
															"src": "17777:182:0",
															"statements": [
																{
																	"expression": {
																		"id": 566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 562,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "17922:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 564,
																			"indexExpression": {
																				"id": 563,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 506,
																				"src": "17932:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "17922:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 565,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "17939:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17922:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 567,
																	"nodeType": "ExpressionStatement",
																	"src": "17922:22:0"
																}
															]
														}
													]
												},
												"id": 570,
												"nodeType": "IfStatement",
												"src": "17544:425:0",
												"trueBody": {
													"id": 561,
													"nodeType": "Block",
													"src": "17566:191:0",
													"statements": [
														{
															"id": 560,
															"nodeType": "UncheckedBlock",
															"src": "17580:167:0",
															"statements": [
																{
																	"expression": {
																		"id": 558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 556,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 287,
																			"src": "17711:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 557,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "17727:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17711:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 559,
																	"nodeType": "ExpressionStatement",
																	"src": "17711:21:0"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 572,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "17993:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 573,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "17999:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 574,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "18003:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 571,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "17984:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17984:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 576,
												"nodeType": "EmitStatement",
												"src": "17979:30:0"
											}
										]
									},
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "16600:304:0",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "16918:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16934:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "16926:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16926:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16948:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "16940:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16960:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "16952:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16952:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16925:41:0"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16984:0:0"
									},
									"scope": 771,
									"src": "16909:1107:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 610,
										"nodeType": "Block",
										"src": "18415:152:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 586,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "18429:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18448:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18440:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 587,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18440:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 590,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18440:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18429:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "18425:91:0",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "18452:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 595,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "18502:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 594,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "18494:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 593,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "18494:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18494:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 592,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "18473:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18473:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 598,
															"nodeType": "RevertStatement",
															"src": "18466:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18541:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18533:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 602,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18533:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18533:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 606,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "18545:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 607,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "18554:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 601,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "18525:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18525:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 609,
												"nodeType": "ExpressionStatement",
												"src": "18525:35:0"
											}
										]
									},
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "18022:332:0",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "18368:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18382:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "18374:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18374:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18399:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "18391:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18391:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18373:32:0"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18415:0:0"
									},
									"scope": 771,
									"src": "18359:208:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 643,
										"nodeType": "Block",
										"src": "18941:150:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 614,
														"src": "18955:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18974:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18966:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 620,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18966:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 623,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18966:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18955:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 633,
												"nodeType": "IfStatement",
												"src": "18951:89:0",
												"trueBody": {
													"id": 632,
													"nodeType": "Block",
													"src": "18978:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 628,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "19026:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 627,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "19018:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 626,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "19018:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19018:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 625,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "18999:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18999:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 631,
															"nodeType": "RevertStatement",
															"src": "18992:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 635,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "19057:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19074:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19066:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 636,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19066:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19066:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 640,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "19078:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 634,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "19049:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19049:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "19049:35:0"
											}
										]
									},
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "18573:307:0",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "18894:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18908:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "18900:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18900:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18925:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "18917:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18917:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18899:32:0"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18941:0:0"
									},
									"scope": 771,
									"src": "18885:206:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "19701:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 655,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "19720:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 656,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "19727:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 657,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "19736:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19743:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 654,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															662,
															722
														],
														"referencedDeclaration": 722,
														"src": "19711:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19711:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 660,
												"nodeType": "ExpressionStatement",
												"src": "19711:37:0"
											}
										]
									},
									"documentation": {
										"id": 645,
										"nodeType": "StructuredDocumentation",
										"src": "19097:525:0",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "19636:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "19653:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19645:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "19668:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19660:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19660:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19685:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19677:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19677:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19644:47:0"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19701:0:0"
									},
									"scope": 771,
									"src": "19627:128:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 721,
										"nodeType": "Block",
										"src": "20700:334:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 674,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 665,
														"src": "20714:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20731:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20723:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 675,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20723:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 678,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20723:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20714:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 688,
												"nodeType": "IfStatement",
												"src": "20710:89:0",
												"trueBody": {
													"id": 687,
													"nodeType": "Block",
													"src": "20735:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 683,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20785:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 682,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "20777:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 681,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "20777:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20777:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 680,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "20756:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20756:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 686,
															"nodeType": "RevertStatement",
															"src": "20749:39:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 689,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "20812:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20831:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20823:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 690,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20823:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 693,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20823:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20812:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 703,
												"nodeType": "IfStatement",
												"src": "20808:90:0",
												"trueBody": {
													"id": 702,
													"nodeType": "Block",
													"src": "20835:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 698,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20884:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 697,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "20876:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 696,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "20876:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20876:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 695,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "20856:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20856:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 701,
															"nodeType": "RevertStatement",
															"src": "20849:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 704,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "20907:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 707,
															"indexExpression": {
																"id": 705,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 665,
																"src": "20919:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "20907:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 708,
														"indexExpression": {
															"id": 706,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "20926:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "20907:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 709,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "20937:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20907:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 711,
												"nodeType": "ExpressionStatement",
												"src": "20907:35:0"
											},
											{
												"condition": {
													"id": 712,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 671,
													"src": "20956:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 720,
												"nodeType": "IfStatement",
												"src": "20952:76:0",
												"trueBody": {
													"id": 719,
													"nodeType": "Block",
													"src": "20967:61:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 714,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 665,
																		"src": "20995:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 715,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 667,
																		"src": "21002:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 716,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "21011:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 713,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "20986:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20986:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 718,
															"nodeType": "EmitStatement",
															"src": "20981:36:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 663,
										"nodeType": "StructuredDocumentation",
										"src": "19761:836:0",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "20611:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "20628:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20620:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20620:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "20643:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20635:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20635:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20660:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20652:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "20672:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20667:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 670,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20667:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20619:63:0"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20700:0:0"
									},
									"scope": 771,
									"src": "20602:432:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 769,
										"nodeType": "Block",
										"src": "21405:387:0",
										"statements": [
											{
												"assignments": [
													733
												],
												"declarations": [
													{
														"constant": false,
														"id": 733,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "21423:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 769,
														"src": "21415:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 732,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21415:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 738,
												"initialValue": {
													"arguments": [
														{
															"id": 735,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "21452:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 736,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "21459:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 734,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "21442:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21442:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21415:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 739,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "21481:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21505:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 741,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "21505:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 740,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "21500:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21500:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 744,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "21514:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "21500:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21481:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 768,
												"nodeType": "IfStatement",
												"src": "21477:309:0",
												"trueBody": {
													"id": 767,
													"nodeType": "Block",
													"src": "21519:267:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 746,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 733,
																	"src": "21537:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 747,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "21556:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21537:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 756,
															"nodeType": "IfStatement",
															"src": "21533:130:0",
															"trueBody": {
																"id": 755,
																"nodeType": "Block",
																"src": "21563:100:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 750,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 727,
																					"src": "21615:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 751,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 733,
																					"src": "21624:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 752,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 729,
																					"src": "21642:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 749,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "21588:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 753,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21588:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 754,
																		"nodeType": "RevertStatement",
																		"src": "21581:67:0"
																	}
																]
															}
														},
														{
															"id": 766,
															"nodeType": "UncheckedBlock",
															"src": "21676:100:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 758,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 725,
																				"src": "21713:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 759,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 727,
																				"src": "21720:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 762,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 760,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 733,
																					"src": "21729:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 761,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 729,
																					"src": "21748:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "21729:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 763,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21755:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 757,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				662,
																				722
																			],
																			"referencedDeclaration": 722,
																			"src": "21704:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 764,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21704:57:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 765,
																	"nodeType": "ExpressionStatement",
																	"src": "21704:57:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "21040:271:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "21325:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "21349:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21341:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21341:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "21364:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21356:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21356:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21381:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21373:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21373:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21340:47:0"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21405:0:0"
									},
									"scope": 771,
									"src": "21316:476:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1338,
							"src": "12007:9787:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169
							],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 772,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "21964:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 774,
										"name": "Context",
										"nameLocations": [
											"22236:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 129,
										"src": "22236:7:0"
									},
									"id": 775,
									"nodeType": "InheritanceSpecifier",
									"src": "22236:7:0"
								},
								{
									"baseName": {
										"id": 776,
										"name": "ERC20",
										"nameLocations": [
											"22245:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 771,
										"src": "22245:5:0"
									},
									"id": 777,
									"nodeType": "InheritanceSpecifier",
									"src": "22245:5:0"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 773,
								"nodeType": "StructuredDocumentation",
								"src": "21992:208:0",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": true,
							"id": 812,
							"linearizedBaseContracts": [
								812,
								771,
								170,
								100,
								77,
								129
							],
							"name": "ERC20Burnable",
							"nameLocation": "22219:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 789,
										"nodeType": "Block",
										"src": "22415:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 784,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "22431:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22431:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 786,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 780,
															"src": "22445:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 783,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 644,
														"src": "22425:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22425:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 788,
												"nodeType": "ExpressionStatement",
												"src": "22425:26:0"
											}
										]
									},
									"documentation": {
										"id": 778,
										"nodeType": "StructuredDocumentation",
										"src": "22257:109:0",
										"text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 790,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "22380:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22393:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "22385:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 779,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22385:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22384:15:0"
									},
									"returnParameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22415:0:0"
									},
									"scope": 812,
									"src": "22371:87:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 810,
										"nodeType": "Block",
										"src": "22839:93:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 799,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "22865:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 800,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "22874:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22874:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 802,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "22888:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 798,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "22849:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22849:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 804,
												"nodeType": "ExpressionStatement",
												"src": "22849:45:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 806,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "22910:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 807,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "22919:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 805,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 644,
														"src": "22904:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22904:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 809,
												"nodeType": "ExpressionStatement",
												"src": "22904:21:0"
											}
										]
									},
									"documentation": {
										"id": 791,
										"nodeType": "StructuredDocumentation",
										"src": "22464:305:0",
										"text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
									},
									"functionSelector": "79cc6790",
									"id": 811,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "22783:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "22800:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "22792:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22792:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22817:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "22809:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22809:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22791:32:0"
									},
									"returnParameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22839:0:0"
									},
									"scope": 812,
									"src": "22774:158:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1338,
							"src": "22201:733:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169
							],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 813,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "23060:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 815,
										"name": "Context",
										"nameLocations": [
											"23604:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 129,
										"src": "23604:7:0"
									},
									"id": 816,
									"nodeType": "InheritanceSpecifier",
									"src": "23604:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 814,
								"nodeType": "StructuredDocumentation",
								"src": "23087:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 957,
							"linearizedBaseContracts": [
								957,
								129
							],
							"name": "Ownable",
							"nameLocation": "23593:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 818,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "23634:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 957,
									"src": "23618:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 817,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "23618:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 819,
										"nodeType": "StructuredDocumentation",
										"src": "23647:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 823,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "23743:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "23778:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "23770:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 820,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23770:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23769:17:0"
									},
									"src": "23737:50:0"
								},
								{
									"documentation": {
										"id": 824,
										"nodeType": "StructuredDocumentation",
										"src": "23793:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 828,
									"name": "OwnableInvalidOwner",
									"nameLocation": "23886:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "23914:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "23906:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23906:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23905:15:0"
									},
									"src": "23880:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 834,
									"name": "OwnershipTransferred",
									"nameLocation": "23933:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "23970:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "23954:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23954:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "24001:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "23985:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 831,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23985:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23953:57:0"
									},
									"src": "23927:84:0"
								},
								{
									"body": {
										"id": 859,
										"nodeType": "Block",
										"src": "24171:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 840,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "24185:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24209:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24201:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 841,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "24201:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 844,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24201:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "24185:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 854,
												"nodeType": "IfStatement",
												"src": "24181:95:0",
												"trueBody": {
													"id": 853,
													"nodeType": "Block",
													"src": "24213:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 849,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24262:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 848,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "24254:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 847,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "24254:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 850,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "24254:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 846,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 828,
																	"src": "24234:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 851,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24234:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 852,
															"nodeType": "RevertStatement",
															"src": "24227:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 856,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "24304:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 855,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "24285:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24285:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 858,
												"nodeType": "ExpressionStatement",
												"src": "24285:32:0"
											}
										]
									},
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "24017:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 860,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "24157:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "24149:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24149:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24148:22:0"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24171:0:0"
									},
									"scope": 957,
									"src": "24137:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 867,
										"nodeType": "Block",
										"src": "24433:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 863,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 894,
														"src": "24443:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24443:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 865,
												"nodeType": "ExpressionStatement",
												"src": "24443:13:0"
											},
											{
												"id": 866,
												"nodeType": "PlaceholderStatement",
												"src": "24466:1:0"
											}
										]
									},
									"documentation": {
										"id": 861,
										"nodeType": "StructuredDocumentation",
										"src": "24330:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 868,
									"name": "onlyOwner",
									"nameLocation": "24421:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24430:2:0"
									},
									"src": "24412:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 876,
										"nodeType": "Block",
										"src": "24605:30:0",
										"statements": [
											{
												"expression": {
													"id": 874,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 818,
													"src": "24622:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 873,
												"id": 875,
												"nodeType": "Return",
												"src": "24615:13:0"
											}
										]
									},
									"documentation": {
										"id": 869,
										"nodeType": "StructuredDocumentation",
										"src": "24480:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 877,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "24559:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24564:2:0"
									},
									"returnParameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "24596:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24596:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24595:9:0"
									},
									"scope": 957,
									"src": "24550:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 893,
										"nodeType": "Block",
										"src": "24753:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 881,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "24767:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 882,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24767:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 883,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "24778:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 884,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24778:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "24767:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 892,
												"nodeType": "IfStatement",
												"src": "24763:101:0",
												"trueBody": {
													"id": 891,
													"nodeType": "Block",
													"src": "24792:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 887,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 111,
																			"src": "24840:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 888,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "24840:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 886,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 823,
																	"src": "24813:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24813:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 890,
															"nodeType": "RevertStatement",
															"src": "24806:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 878,
										"nodeType": "StructuredDocumentation",
										"src": "24641:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 894,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "24717:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24728:2:0"
									},
									"returnParameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24753:0:0"
									},
									"scope": 957,
									"src": "24708:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 907,
										"nodeType": "Block",
										"src": "25259:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 903,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25296:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 902,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "25288:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 901,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "25288:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 904,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25288:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 900,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "25269:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25269:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 906,
												"nodeType": "ExpressionStatement",
												"src": "25269:30:0"
											}
										]
									},
									"documentation": {
										"id": 895,
										"nodeType": "StructuredDocumentation",
										"src": "24876:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 908,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 898,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 897,
												"name": "onlyOwner",
												"nameLocations": [
													"25249:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 868,
												"src": "25249:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25249:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "25214:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25231:2:0"
									},
									"returnParameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25259:0:0"
									},
									"scope": 957,
									"src": "25205:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 935,
										"nodeType": "Block",
										"src": "25525:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 916,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "25539:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 919,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25559:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "25551:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 917,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "25551:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 920,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25551:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "25539:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 930,
												"nodeType": "IfStatement",
												"src": "25535:91:0",
												"trueBody": {
													"id": 929,
													"nodeType": "Block",
													"src": "25563:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 925,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25612:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 924,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "25604:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 923,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "25604:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 926,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "25604:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 922,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 828,
																	"src": "25584:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25584:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 928,
															"nodeType": "RevertStatement",
															"src": "25577:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 932,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "25654:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 931,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "25635:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25635:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 934,
												"nodeType": "ExpressionStatement",
												"src": "25635:28:0"
											}
										]
									},
									"documentation": {
										"id": 909,
										"nodeType": "StructuredDocumentation",
										"src": "25312:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 936,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 914,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 913,
												"name": "onlyOwner",
												"nameLocations": [
													"25515:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 868,
												"src": "25515:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25515:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "25464:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "25490:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "25482:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 910,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25482:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25481:18:0"
									},
									"returnParameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25525:0:0"
									},
									"scope": 957,
									"src": "25455:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 955,
										"nodeType": "Block",
										"src": "25887:124:0",
										"statements": [
											{
												"assignments": [
													943
												],
												"declarations": [
													{
														"constant": false,
														"id": 943,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "25905:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 955,
														"src": "25897:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 942,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "25897:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 945,
												"initialValue": {
													"id": 944,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 818,
													"src": "25916:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25897:25:0"
											},
											{
												"expression": {
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 946,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 818,
														"src": "25932:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 947,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 939,
														"src": "25941:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "25932:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 949,
												"nodeType": "ExpressionStatement",
												"src": "25932:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 951,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "25985:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 952,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "25995:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 950,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "25964:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25964:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 954,
												"nodeType": "EmitStatement",
												"src": "25959:45:0"
											}
										]
									},
									"documentation": {
										"id": 937,
										"nodeType": "StructuredDocumentation",
										"src": "25676:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 956,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "25833:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "25860:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "25852:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25852:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25851:18:0"
									},
									"returnParameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25887:0:0"
									},
									"scope": 957,
									"src": "25824:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1338,
							"src": "23575:2438:0",
							"usedErrors": [
								823,
								828
							],
							"usedEvents": [
								834
							]
						},
						{
							"id": 958,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "26153:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 959,
								"nodeType": "StructuredDocumentation",
								"src": "26179:894:0",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 1025,
							"linearizedBaseContracts": [
								1025
							],
							"name": "ReentrancyGuard",
							"nameLocation": "27092:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 962,
									"mutability": "constant",
									"name": "NOT_ENTERED",
									"nameLocation": "27887:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1025,
									"src": "27862:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 960,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "27862:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 961,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "27901:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 965,
									"mutability": "constant",
									"name": "ENTERED",
									"nameLocation": "27933:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1025,
									"src": "27908:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 963,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "27908:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 964,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "27943:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 967,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "27967:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1025,
									"src": "27951:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 966,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "27951:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 968,
										"nodeType": "StructuredDocumentation",
										"src": "27981:52:0",
										"text": " @dev Unauthorized reentrant call."
									},
									"errorSelector": "3ee5aeb5",
									"id": 970,
									"name": "ReentrancyGuardReentrantCall",
									"nameLocation": "28044:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28072:2:0"
									},
									"src": "28038:37:0"
								},
								{
									"body": {
										"id": 977,
										"nodeType": "Block",
										"src": "28095:38:0",
										"statements": [
											{
												"expression": {
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 973,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 967,
														"src": "28105:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 974,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 962,
														"src": "28115:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28105:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 976,
												"nodeType": "ExpressionStatement",
												"src": "28105:21:0"
											}
										]
									},
									"id": 978,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28092:2:0"
									},
									"returnParameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28095:0:0"
									},
									"scope": 1025,
									"src": "28081:52:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 988,
										"nodeType": "Block",
										"src": "28534:79:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 981,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1005,
														"src": "28544:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28544:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 983,
												"nodeType": "ExpressionStatement",
												"src": "28544:21:0"
											},
											{
												"id": 984,
												"nodeType": "PlaceholderStatement",
												"src": "28575:1:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 985,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1013,
														"src": "28586:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28586:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 987,
												"nodeType": "ExpressionStatement",
												"src": "28586:20:0"
											}
										]
									},
									"documentation": {
										"id": 979,
										"nodeType": "StructuredDocumentation",
										"src": "28139:366:0",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 989,
									"name": "nonReentrant",
									"nameLocation": "28519:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28531:2:0"
									},
									"src": "28510:103:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1004,
										"nodeType": "Block",
										"src": "28658:268:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 992,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 967,
														"src": "28746:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 993,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "28757:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28746:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 999,
												"nodeType": "IfStatement",
												"src": "28742:86:0",
												"trueBody": {
													"id": 998,
													"nodeType": "Block",
													"src": "28766:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 995,
																	"name": "ReentrancyGuardReentrantCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 970,
																	"src": "28787:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 996,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28787:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 997,
															"nodeType": "RevertStatement",
															"src": "28780:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1000,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 967,
														"src": "28902:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1001,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "28912:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28902:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1003,
												"nodeType": "ExpressionStatement",
												"src": "28902:17:0"
											}
										]
									},
									"id": 1005,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "28628:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28647:2:0"
									},
									"returnParameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28658:0:0"
									},
									"scope": 1025,
									"src": "28619:307:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1012,
										"nodeType": "Block",
										"src": "28970:170:0",
										"statements": [
											{
												"expression": {
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1008,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 967,
														"src": "29112:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1009,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 962,
														"src": "29122:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29112:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1011,
												"nodeType": "ExpressionStatement",
												"src": "29112:21:0"
											}
										]
									},
									"id": 1013,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "28941:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28959:2:0"
									},
									"returnParameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28970:0:0"
									},
									"scope": 1025,
									"src": "28932:208:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1023,
										"nodeType": "Block",
										"src": "29383:42:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1019,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 967,
														"src": "29400:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1020,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "29411:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29400:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1018,
												"id": 1022,
												"nodeType": "Return",
												"src": "29393:25:0"
											}
										]
									},
									"documentation": {
										"id": 1014,
										"nodeType": "StructuredDocumentation",
										"src": "29146:168:0",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 1024,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "29328:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29351:2:0"
									},
									"returnParameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "29377:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1016,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "29377:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29376:6:0"
									},
									"scope": 1025,
									"src": "29319:106:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1338,
							"src": "27074:2353:0",
							"usedErrors": [
								970
							],
							"usedEvents": []
						},
						{
							"id": 1026,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "29465:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1027,
										"name": "ERC20",
										"nameLocations": [
											"29621:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 771,
										"src": "29621:5:0"
									},
									"id": 1028,
									"nodeType": "InheritanceSpecifier",
									"src": "29621:5:0"
								},
								{
									"baseName": {
										"id": 1029,
										"name": "ERC20Burnable",
										"nameLocations": [
											"29628:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 812,
										"src": "29628:13:0"
									},
									"id": 1030,
									"nodeType": "InheritanceSpecifier",
									"src": "29628:13:0"
								},
								{
									"baseName": {
										"id": 1031,
										"name": "Ownable",
										"nameLocations": [
											"29643:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 957,
										"src": "29643:7:0"
									},
									"id": 1032,
									"nodeType": "InheritanceSpecifier",
									"src": "29643:7:0"
								},
								{
									"baseName": {
										"id": 1033,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"29652:15:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1025,
										"src": "29652:15:0"
									},
									"id": 1034,
									"nodeType": "InheritanceSpecifier",
									"src": "29652:15:0"
								}
							],
							"canonicalName": "Cardeiro",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1337,
							"linearizedBaseContracts": [
								1337,
								1025,
								957,
								812,
								771,
								170,
								100,
								77,
								129
							],
							"name": "Cardeiro",
							"nameLocation": "29609:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "61d027b3",
									"id": 1036,
									"mutability": "mutable",
									"name": "treasury",
									"nameLocation": "29743:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 1337,
									"src": "29728:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1035,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "29728:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6a47aa06",
									"id": 1038,
									"mutability": "mutable",
									"name": "halvingInterval",
									"nameLocation": "29814:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1337,
									"src": "29799:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1037,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "29799:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8cbb6df7",
									"id": 1040,
									"mutability": "mutable",
									"name": "lastHalvingTime",
									"nameLocation": "29892:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1337,
									"src": "29877:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1039,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "29877:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7e6335f4",
									"id": 1042,
									"mutability": "mutable",
									"name": "halvingRate",
									"nameLocation": "29989:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1337,
									"src": "29974:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1041,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "29974:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 1045,
									"mutability": "constant",
									"name": "MIN_HALVING_RATE",
									"nameLocation": "30032:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 1337,
									"src": "30007:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1043,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "30007:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35",
										"id": 1044,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "30051:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5_by_1",
											"typeString": "int_const 5"
										},
										"value": "5"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1048,
									"mutability": "constant",
									"name": "MAX_HALVING_RATE",
									"nameLocation": "30090:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 1337,
									"src": "30065:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1046,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "30065:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1047,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "30109:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1051,
									"mutability": "constant",
									"name": "DAYS_IN_YEAR",
									"nameLocation": "30150:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1337,
									"src": "30125:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1049,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "30125:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333635",
										"id": 1050,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "30165:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_365_by_1",
											"typeString": "int_const 365"
										},
										"value": "365"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1054,
									"mutability": "constant",
									"name": "SECONDS_PER_DAY",
									"nameLocation": "30200:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1337,
									"src": "30175:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1052,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "30175:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3836343030",
										"id": 1053,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "30218:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_86400_by_1",
											"typeString": "int_const 86400"
										},
										"value": "86400"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1062,
									"mutability": "constant",
									"name": "DEFAULT_HALVING_INTERVAL",
									"nameLocation": "30271:24:0",
									"nodeType": "VariableDeclaration",
									"scope": 1337,
									"src": "30246:88:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1055,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "30246:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 1061,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1056,
														"name": "DAYS_IN_YEAR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1051,
														"src": "30299:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "32",
														"id": 1057,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "30314:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "30299:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1059,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "30298:18:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"id": 1060,
											"name": "SECONDS_PER_DAY",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1054,
											"src": "30319:15:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "30298:36:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1065,
									"mutability": "constant",
									"name": "SECURITY_MARGIN",
									"nameLocation": "30455:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1337,
									"src": "30430:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1063,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "30430:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31383030",
										"id": 1064,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "30473:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1800_by_1",
											"typeString": "int_const 1800"
										},
										"value": "1800"
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "394823b0bcaf78cd8f5876a52c05dbab91512a05f5da2a31e239a11ab66d605f",
									"id": 1071,
									"name": "Halving",
									"nameLocation": "30535:7:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"indexed": false,
												"mutability": "mutable",
												"name": "burnedAmount",
												"nameLocation": "30551:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "30543:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30543:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1069,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "30573:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "30565:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30565:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30542:41:0"
									},
									"src": "30529:55:0"
								},
								{
									"body": {
										"id": 1081,
										"nodeType": "Block",
										"src": "30613:88:0",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1073,
														"name": "isHalvingDue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "30627:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30627:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1079,
												"nodeType": "IfStatement",
												"src": "30623:61:0",
												"trueBody": {
													"id": 1078,
													"nodeType": "Block",
													"src": "30643:41:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1075,
																	"name": "executeHalving",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1214,
																	"src": "30657:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1076,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30657:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1077,
															"nodeType": "ExpressionStatement",
															"src": "30657:16:0"
														}
													]
												}
											},
											{
												"id": 1080,
												"nodeType": "PlaceholderStatement",
												"src": "30693:1:0"
											}
										]
									},
									"id": 1082,
									"name": "autoHalving",
									"nameLocation": "30599:11:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30610:2:0"
									},
									"src": "30590:111:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1147,
										"nodeType": "Block",
										"src": "30897:448:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1102,
																"name": "_halvingRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1090,
																"src": "30915:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "313030",
																"id": 1103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "30931:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "30915:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "48616c76696e6720726174652063616e6e6f74206578636565642031303025",
															"id": 1105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30936:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d53bdfa93bb7a76d4743ea30578e2dc0750b008d141205debceac8f0891300eb",
																"typeString": "literal_string \"Halving rate cannot exceed 100%\""
															},
															"value": "Halving rate cannot exceed 100%"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d53bdfa93bb7a76d4743ea30578e2dc0750b008d141205debceac8f0891300eb",
																"typeString": "literal_string \"Halving rate cannot exceed 100%\""
															}
														],
														"id": 1101,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "30907:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30907:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1107,
												"nodeType": "ExpressionStatement",
												"src": "30907:63:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1109,
																"name": "_halvingInterval",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1088,
																"src": "30988:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1110,
																"name": "SECONDS_PER_DAY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1054,
																"src": "31008:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30988:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e74657276616c20746f6f2073686f7274",
															"id": 1112,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31025:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1a7d2fe61ea3b46cf063320d3f94ed24f16b3846a0bb57ef7d22b70acf607e4b",
																"typeString": "literal_string \"Interval too short\""
															},
															"value": "Interval too short"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1a7d2fe61ea3b46cf063320d3f94ed24f16b3846a0bb57ef7d22b70acf607e4b",
																"typeString": "literal_string \"Interval too short\""
															}
														],
														"id": 1108,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "30980:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30980:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1114,
												"nodeType": "ExpressionStatement",
												"src": "30980:66:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1116,
																"name": "_halvingInterval",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1088,
																"src": "31064:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1119,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1117,
																	"name": "DEFAULT_HALVING_INTERVAL",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1062,
																	"src": "31084:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31111:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "31084:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "31064:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e74657276616c20746f6f206c6f6e67",
															"id": 1121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31114:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f632157a5b36b9e6a1b80a3c79c025445cf465bacf92b036da473b170c3d13d0",
																"typeString": "literal_string \"Interval too long\""
															},
															"value": "Interval too long"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f632157a5b36b9e6a1b80a3c79c025445cf465bacf92b036da473b170c3d13d0",
																"typeString": "literal_string \"Interval too long\""
															}
														],
														"id": 1115,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "31056:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31056:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1123,
												"nodeType": "ExpressionStatement",
												"src": "31056:78:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1125,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "31159:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "31163:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "31159:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1127,
															"name": "initialSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1084,
															"src": "31171:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1124,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "31153:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31153:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1129,
												"nodeType": "ExpressionStatement",
												"src": "31153:32:0"
											},
											{
												"expression": {
													"id": 1132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1130,
														"name": "treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1036,
														"src": "31195:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1131,
														"name": "_treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1086,
														"src": "31206:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "31195:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1133,
												"nodeType": "ExpressionStatement",
												"src": "31195:20:0"
											},
											{
												"expression": {
													"id": 1136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1134,
														"name": "halvingInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1038,
														"src": "31225:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1135,
														"name": "_halvingInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1088,
														"src": "31243:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31225:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1137,
												"nodeType": "ExpressionStatement",
												"src": "31225:34:0"
											},
											{
												"expression": {
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1138,
														"name": "halvingRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1042,
														"src": "31269:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1139,
														"name": "_halvingRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1090,
														"src": "31283:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31269:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1141,
												"nodeType": "ExpressionStatement",
												"src": "31269:26:0"
											},
											{
												"expression": {
													"id": 1145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1142,
														"name": "lastHalvingTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1040,
														"src": "31305:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1143,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "31323:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1144,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "31329:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "31323:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31305:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1146,
												"nodeType": "ExpressionStatement",
												"src": "31305:33:0"
											}
										]
									},
									"id": 1148,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "436172646569726f",
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "30858:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_971e503cb7b8e2667d7b5b326ae53a4aef8f0d8bcc5aa0780d3a661dca88746b",
														"typeString": "literal_string \"Cardeiro\""
													},
													"value": "Cardeiro"
												},
												{
													"hexValue": "434454",
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "30870:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_434eb163d5d83d0f1ffd9839d5b9c74759647f334d007a0d4510797d38b7e519",
														"typeString": "literal_string \"CDT\""
													},
													"value": "CDT"
												}
											],
											"id": 1095,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1092,
												"name": "ERC20",
												"nameLocations": [
													"30852:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 771,
												"src": "30852:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "30852:24:0"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1097,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "30885:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "30889:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "30885:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1099,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1096,
												"name": "Ownable",
												"nameLocations": [
													"30877:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 957,
												"src": "30877:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "30877:19:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "initialSupply",
												"nameLocation": "30740:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "30732:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1083,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30732:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "_treasury",
												"nameLocation": "30772:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "30764:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1085,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30764:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "_halvingInterval",
												"nameLocation": "30799:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "30791:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1087,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30791:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "_halvingRate",
												"nameLocation": "30833:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "30825:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30825:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30722:129:0"
									},
									"returnParameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30897:0:0"
									},
									"scope": 1337,
									"src": "30711:634:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1163,
										"nodeType": "Block",
										"src": "31445:96:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1153,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "31462:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1154,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "31468:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "31462:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1159,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1157,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1155,
																		"name": "lastHalvingTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1040,
																		"src": "31482:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1156,
																		"name": "halvingInterval",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1038,
																		"src": "31500:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "31482:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1158,
																	"name": "SECURITY_MARGIN",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1065,
																	"src": "31518:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "31482:51:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1160,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "31481:53:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31462:72:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1152,
												"id": 1162,
												"nodeType": "Return",
												"src": "31455:79:0"
											}
										]
									},
									"functionSelector": "768a4173",
									"id": 1164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isHalvingDue",
									"nameLocation": "31403:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31415:2:0"
									},
									"returnParameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "31439:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1150,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "31439:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31438:6:0"
									},
									"scope": 1337,
									"src": "31394:147:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1213,
										"nodeType": "Block",
										"src": "31659:555:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1170,
																"name": "isHalvingDue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1164,
																"src": "31677:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 1171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31677:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "48616c76696e6720696e74657276616c206e6f742072656163686564",
															"id": 1172,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31693:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_78c4f9f3f3ed4ed6c78e4a6a7613e359adf3a3d4265b99c6653232671bf676f8",
																"typeString": "literal_string \"Halving interval not reached\""
															},
															"value": "Halving interval not reached"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_78c4f9f3f3ed4ed6c78e4a6a7613e359adf3a3d4265b99c6653232671bf676f8",
																"typeString": "literal_string \"Halving interval not reached\""
															}
														],
														"id": 1169,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "31669:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31669:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1174,
												"nodeType": "ExpressionStatement",
												"src": "31669:55:0"
											},
											{
												"assignments": [
													1176
												],
												"declarations": [
													{
														"constant": false,
														"id": 1176,
														"mutability": "mutable",
														"name": "treasuryBalance",
														"nameLocation": "31751:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 1213,
														"src": "31743:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1175,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "31743:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1180,
												"initialValue": {
													"arguments": [
														{
															"id": 1178,
															"name": "treasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1036,
															"src": "31779:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1177,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 357,
														"src": "31769:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31769:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31743:45:0"
											},
											{
												"assignments": [
													1182
												],
												"declarations": [
													{
														"constant": false,
														"id": 1182,
														"mutability": "mutable",
														"name": "burnAmount",
														"nameLocation": "31806:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1213,
														"src": "31798:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1181,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "31798:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1189,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1183,
																	"name": "treasuryBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1176,
																	"src": "31820:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1184,
																	"name": "halvingRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1042,
																	"src": "31838:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "31820:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1186,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "31819:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1187,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "31853:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "31819:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31798:58:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1190,
														"name": "burnAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1182,
														"src": "31879:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1191,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "31892:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "31879:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1212,
												"nodeType": "IfStatement",
												"src": "31875:333:0",
												"trueBody": {
													"id": 1211,
													"nodeType": "Block",
													"src": "31895:313:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1194,
																		"name": "treasury",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1036,
																		"src": "31956:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1195,
																		"name": "burnAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1182,
																		"src": "31966:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1193,
																	"name": "_burn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 644,
																	"src": "31950:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1196,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31950:27:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1197,
															"nodeType": "ExpressionStatement",
															"src": "31950:27:0"
														},
														{
															"expression": {
																"id": 1203,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1198,
																	"name": "lastHalvingTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1040,
																	"src": "32044:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1199,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "32062:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1200,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "32068:9:0",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "32062:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1201,
																		"name": "SECURITY_MARGIN",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1065,
																		"src": "32080:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "32062:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "32044:51:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1204,
															"nodeType": "ExpressionStatement",
															"src": "32044:51:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1206,
																		"name": "burnAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1182,
																		"src": "32169:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1207,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "32181:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "32187:9:0",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "32181:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1205,
																	"name": "Halving",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1071,
																	"src": "32161:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256)"
																	}
																},
																"id": 1209,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32161:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1210,
															"nodeType": "EmitStatement",
															"src": "32156:41:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "ed299016",
									"id": 1214,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1167,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1166,
												"name": "nonReentrant",
												"nameLocations": [
													"31646:12:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 989,
												"src": "31646:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "31646:12:0"
										}
									],
									"name": "executeHalving",
									"nameLocation": "31622:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31636:2:0"
									},
									"returnParameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31659:0:0"
									},
									"scope": 1337,
									"src": "31613:601:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1245,
										"nodeType": "Block",
										"src": "32376:238:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1224,
																"name": "_halvingRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1218,
																"src": "32394:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1225,
																"name": "MIN_HALVING_RATE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1045,
																"src": "32410:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32394:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "48616c76696e67207261746520746f6f206c6f77",
															"id": 1227,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32428:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d9685d7b83f94a8526cd378518e03ae5cdd64f3bc22b0ae59b808c415888bde8",
																"typeString": "literal_string \"Halving rate too low\""
															},
															"value": "Halving rate too low"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d9685d7b83f94a8526cd378518e03ae5cdd64f3bc22b0ae59b808c415888bde8",
																"typeString": "literal_string \"Halving rate too low\""
															}
														],
														"id": 1223,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "32386:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32386:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1229,
												"nodeType": "ExpressionStatement",
												"src": "32386:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1231,
																"name": "_halvingRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1218,
																"src": "32469:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1232,
																"name": "MAX_HALVING_RATE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1048,
																"src": "32485:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32469:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "48616c76696e67207261746520746f6f2068696768",
															"id": 1234,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32503:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2e96fdf67c9a0dad3ac1d60e5f88d1dea6af5eff3e2029d19a787ff8fa105135",
																"typeString": "literal_string \"Halving rate too high\""
															},
															"value": "Halving rate too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2e96fdf67c9a0dad3ac1d60e5f88d1dea6af5eff3e2029d19a787ff8fa105135",
																"typeString": "literal_string \"Halving rate too high\""
															}
														],
														"id": 1230,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "32461:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32461:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1236,
												"nodeType": "ExpressionStatement",
												"src": "32461:66:0"
											},
											{
												"expression": {
													"id": 1239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1237,
														"name": "halvingInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1038,
														"src": "32537:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1238,
														"name": "_halvingInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1216,
														"src": "32555:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32537:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1240,
												"nodeType": "ExpressionStatement",
												"src": "32537:34:0"
											},
											{
												"expression": {
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1241,
														"name": "halvingRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1042,
														"src": "32581:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1242,
														"name": "_halvingRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1218,
														"src": "32595:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32581:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1244,
												"nodeType": "ExpressionStatement",
												"src": "32581:26:0"
											}
										]
									},
									"functionSelector": "bbb0b1a6",
									"id": 1246,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1221,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1220,
												"name": "onlyOwner",
												"nameLocations": [
													"32366:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 868,
												"src": "32366:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "32366:9:0"
										}
									],
									"name": "updateHalvingParams",
									"nameLocation": "32291:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "_halvingInterval",
												"nameLocation": "32319:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "32311:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32311:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "_halvingRate",
												"nameLocation": "32345:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "32337:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32337:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32310:48:0"
									},
									"returnParameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32376:0:0"
									},
									"scope": 1337,
									"src": "32282:332:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1257,
										"nodeType": "Block",
										"src": "32740:37:0",
										"statements": [
											{
												"expression": {
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1253,
														"name": "treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1036,
														"src": "32750:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1254,
														"name": "_treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1248,
														"src": "32761:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "32750:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1256,
												"nodeType": "ExpressionStatement",
												"src": "32750:20:0"
											}
										]
									},
									"functionSelector": "7f51bb1f",
									"id": 1258,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1251,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1250,
												"name": "onlyOwner",
												"nameLocations": [
													"32730:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 868,
												"src": "32730:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "32730:9:0"
										}
									],
									"name": "updateTreasury",
									"nameLocation": "32689:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "_treasury",
												"nameLocation": "32712:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "32704:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32704:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32703:19:0"
									},
									"returnParameters": {
										"id": 1252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32740:0:0"
									},
									"scope": 1337,
									"src": "32680:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1278,
										"nodeType": "Block",
										"src": "32852:109:0",
										"statements": [
											{
												"assignments": [
													1266
												],
												"declarations": [
													{
														"constant": false,
														"id": 1266,
														"mutability": "mutable",
														"name": "treasuryBalance",
														"nameLocation": "32870:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 1278,
														"src": "32862:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1265,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "32862:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1270,
												"initialValue": {
													"arguments": [
														{
															"id": 1268,
															"name": "treasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1036,
															"src": "32898:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1267,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 357,
														"src": "32888:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32888:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32862:45:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1273,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1271,
																	"name": "treasuryBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1266,
																	"src": "32925:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1272,
																	"name": "rate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1260,
																	"src": "32943:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "32925:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1274,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "32924:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "32951:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "32924:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1264,
												"id": 1277,
												"nodeType": "Return",
												"src": "32917:37:0"
											}
										]
									},
									"functionSelector": "102b67ab",
									"id": 1279,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getExpectedBurn",
									"nameLocation": "32792:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "rate",
												"nameLocation": "32816:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "32808:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32808:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32807:14:0"
									},
									"returnParameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "32843:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32843:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32842:9:0"
									},
									"scope": 1337,
									"src": "32783:178:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										381
									],
									"body": {
										"id": 1297,
										"nodeType": "Block",
										"src": "33114:50:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1293,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1281,
															"src": "33146:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1294,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1283,
															"src": "33150:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1291,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "33131:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_Cardeiro_$1337_$",
																"typeString": "type(contract super Cardeiro)"
															}
														},
														"id": 1292,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "33137:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 381,
														"src": "33131:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 1295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33131:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1290,
												"id": 1296,
												"nodeType": "Return",
												"src": "33124:33:0"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1298,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1287,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1286,
												"name": "autoHalving",
												"nameLocations": [
													"33073:11:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1082,
												"src": "33073:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "33073:11:0"
										}
									],
									"name": "transfer",
									"nameLocation": "32976:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1285,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "33055:8:0"
									},
									"parameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "32993:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "32985:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32985:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "33005:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "32997:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32997:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32984:28:0"
									},
									"returnParameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "33103:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1288,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "33103:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33102:6:0"
									},
									"scope": 1337,
									"src": "32967:197:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										454
									],
									"body": {
										"id": 1319,
										"nodeType": "Block",
										"src": "33329:60:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1314,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1300,
															"src": "33365:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1315,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1302,
															"src": "33371:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1316,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1304,
															"src": "33375:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1312,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "33346:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_Cardeiro_$1337_$",
																"typeString": "type(contract super Cardeiro)"
															}
														},
														"id": 1313,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "33352:12:0",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 454,
														"src": "33346:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 1317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33346:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1311,
												"id": 1318,
												"nodeType": "Return",
												"src": "33339:43:0"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 1320,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1308,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1307,
												"name": "autoHalving",
												"nameLocations": [
													"33290:11:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1082,
												"src": "33290:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "33290:11:0"
										}
									],
									"name": "transferFrom",
									"nameLocation": "33179:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1306,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "33273:8:0"
									},
									"parameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "33200:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "33192:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33192:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "33214:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "33206:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33206:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "33226:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "33218:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33218:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33191:42:0"
									},
									"returnParameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "33319:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1309,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "33319:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33318:6:0"
									},
									"scope": 1337,
									"src": "33170:219:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1327,
										"nodeType": "Block",
										"src": "33423:52:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "546f6b656e20646f6573206e6f742061636365707420455448",
															"id": 1324,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33440:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d6ef7acea0261efd64d5d7c6dec050eec6b82a90a97a4ff7324326876f46a190",
																"typeString": "literal_string \"Token does not accept ETH\""
															},
															"value": "Token does not accept ETH"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_d6ef7acea0261efd64d5d7c6dec050eec6b82a90a97a4ff7324326876f46a190",
																"typeString": "literal_string \"Token does not accept ETH\""
															}
														],
														"id": 1323,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "33433:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 1325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33433:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1326,
												"nodeType": "ExpressionStatement",
												"src": "33433:35:0"
											}
										]
									},
									"id": 1328,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33403:2:0"
									},
									"returnParameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33423:0:0"
									},
									"scope": 1337,
									"src": "33395:80:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1335,
										"nodeType": "Block",
										"src": "33512:52:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "546f6b656e20646f6573206e6f742061636365707420455448",
															"id": 1332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33529:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d6ef7acea0261efd64d5d7c6dec050eec6b82a90a97a4ff7324326876f46a190",
																"typeString": "literal_string \"Token does not accept ETH\""
															},
															"value": "Token does not accept ETH"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_d6ef7acea0261efd64d5d7c6dec050eec6b82a90a97a4ff7324326876f46a190",
																"typeString": "literal_string \"Token does not accept ETH\""
															}
														],
														"id": 1331,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "33522:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 1333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33522:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1334,
												"nodeType": "ExpressionStatement",
												"src": "33522:35:0"
											}
										]
									},
									"id": 1336,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33492:2:0"
									},
									"returnParameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33512:0:0"
									},
									"scope": 1337,
									"src": "33485:79:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1338,
							"src": "29600:3967:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169,
								823,
								828,
								970
							],
							"usedEvents": [
								11,
								20,
								834,
								1071
							]
						}
					],
					"src": "165:33402:0"
				},
				"id": 0
			}
		}
	}
}