{
	"id": "d0560567bc5c5df6f2eae58c0b7f5bb0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.29",
	"solcLongVersion": "0.8.29+commit.ab55807c",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Cardeiro_4.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\"; // Basic funciotions of ERC20\nimport {ERC20Burnable} from \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\"; // Burnable functions of ERC20\n//burn(uint256 amount)\n//burnFrom(address account, uint256 amount)\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\"; // For access control\n//transferOwnership(address newOwner)\nimport {ReentrancyGuard} from \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\n\ncontract Cardeiro is ERC20, ERC20Burnable, Ownable, ReentrancyGuard {\n\n    // Treasury address to hold undistributed tokens\n    address public treasury;\n    \n    // Halving interval (in seconds)\n    uint256 public halvingInterval;\n    \n    // Timestamp of the last halving\n    uint256 public lastHalvingTime;\n    \n    // Halving rate (in percentage, e.g., 50 means 50%)\n    uint256 public halvingRate;\n\n    uint256 private constant MIN_HALVING_RATE = 5; // 5%\n\n    uint256 private constant MAX_HALVING_RATE = 20; // 20%\n\n    uint256 private constant DAYS_IN_YEAR = 365;\n\n    uint256 private constant SECONDS_PER_DAY = 86400; // 24 * 60 * 60\n\n    uint256 private constant DEFAULT_HALVING_INTERVAL = (DAYS_IN_YEAR * 2) * SECONDS_PER_DAY; // 63072000\n    \n    // Margem de segurança para manipulação de timestamp (30 minutos)\n    uint256 private constant SECURITY_MARGIN = 1800;\n    \n    // Event emitted when halving occurs\n    event Halving(uint256 burnedAmount, uint256 timestamp);\n\n    modifier autoHalving() {\n        if (isHalvingDue()) {\n            executeHalving();\n        }\n        _;\n    }\n    \n    constructor(\n        uint256 initialSupply, \n        address _treasury,\n        uint256 _halvingInterval,\n        uint256 _halvingRate\n    ) ERC20(\"Cardeiro\", \"CDT\") Ownable(msg.sender) {\n        require(_halvingRate <= 100, \"Halving rate cannot exceed 100%\");\n        require(_halvingInterval >= SECONDS_PER_DAY, \"Interval too short\");\n        require(_halvingInterval <= DEFAULT_HALVING_INTERVAL * 2, \"Interval too long\");\n        \n        _mint(msg.sender, initialSupply);\n        treasury = _treasury;\n        halvingInterval = _halvingInterval;\n        halvingRate = _halvingRate;\n        lastHalvingTime = block.timestamp;\n    }\n\n    // Function to check if halving is due\n    function isHalvingDue() public view returns (bool) {\n        return block.timestamp >= (lastHalvingTime + halvingInterval + SECURITY_MARGIN);\n    }\n    \n    // Function to execute halving if the interval has passed\n    function executeHalving() public nonReentrant {\n        require(isHalvingDue(), \"Halving interval not reached\");\n        \n        uint256 treasuryBalance = balanceOf(treasury);\n        uint256 burnAmount = (treasuryBalance * halvingRate) / 100;\n        \n        if (burnAmount > 0) {\n            // Burn tokens from treasury\n            _burn(treasury, burnAmount);\n            \n            // Update last halving time\n            lastHalvingTime = block.timestamp - SECURITY_MARGIN;\n            \n            // Emit halving event\n            emit Halving(burnAmount, block.timestamp);\n        }\n    }\n    \n    // Function to update halving parameters (only owner)\n    function updateHalvingParams(uint256 _halvingInterval, uint256 _halvingRate) public onlyOwner {\n        require(_halvingRate >= MIN_HALVING_RATE, \"Halving rate too low\");\n        require(_halvingRate <= MAX_HALVING_RATE, \"Halving rate too high\");\n        halvingInterval = _halvingInterval;\n        halvingRate = _halvingRate;\n    }\n    \n    // Function to update treasury address (only owner)\n    function updateTreasury(address _treasury) public onlyOwner {\n        treasury = _treasury;\n    }\n\n    function getExpectedBurn(uint256 rate) public view returns (uint256) {\n        uint256 treasuryBalance = balanceOf(treasury);\n        return (treasuryBalance * rate) / 100;\n    }\n\n    function transfer(address to, uint256 amount) \n        public \n        virtual \n        override \n        autoHalving \n        returns (bool) \n    {\n        return super.transfer(to, amount);\n    }\n\n    function transferFrom(address from, address to, uint256 amount)\n        public\n        virtual\n        override\n        autoHalving\n        returns (bool)\n    {\n        return super.transferFrom(from, to, amount);\n    }\n\n    fallback() external payable {\n        revert(\"Token does not accept ETH\");\n    }\n    \n    receive() external payable {\n        revert(\"Token does not accept ETH\");\n    }\n\n}"
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ERC20Burnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"errors": {
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 990,
								"contract": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Cardeiro_4.sol": {
				"Cardeiro": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "initialSupply",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_treasury",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_halvingInterval",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_halvingRate",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "burnedAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "Halving",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "executeHalving",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "rate",
									"type": "uint256"
								}
							],
							"name": "getExpectedBurn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "halvingInterval",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "halvingRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isHalvingDue",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastHalvingTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "treasury",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_halvingInterval",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_halvingRate",
									"type": "uint256"
								}
							],
							"name": "updateHalvingParams",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_treasury",
									"type": "address"
								}
							],
							"name": "updateTreasury",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Cardeiro_4.sol\":563:4530  contract Cardeiro is ERC20, ERC20Burnable, Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Cardeiro_4.sol\":1674:2308  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Cardeiro_4.sol\":1848:1858  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x08\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xc0, 0x436172646569726f)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xea, 0x10d115)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  tag_11\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  tag_10\n  jump\t// in\ntag_11:\n  pop\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_13\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3438:3489   */\n  mstore\n    /* \"#utility.yul\":3411:3429   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\ntag_14:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_16\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_17\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_16:\n  pop\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1857:1858  1 */\n  0x01\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2061:2068  _status */\n  0x06\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2061:2082  _status = NOT_ENTERED */\n  sstore\n    /* \"contracts/Cardeiro_4.sol\":1894:1897  100 */\n  0x64\n    /* \"contracts/Cardeiro_4.sol\":1878:1897  _halvingRate <= 100 */\n  dup2\n  gt\n  iszero\n    /* \"contracts/Cardeiro_4.sol\":1870:1933  require(_halvingRate <= 100, \"Halving rate cannot exceed 100%\") */\n  tag_20\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":3702:3704   */\n  0x20\n    /* \"contracts/Cardeiro_4.sol\":1870:1933  require(_halvingRate <= 100, \"Halving rate cannot exceed 100%\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3684:3705   */\n  mstore\n    /* \"#utility.yul\":3741:3743   */\n  0x1f\n    /* \"#utility.yul\":3721:3739   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":3714:3744   */\n  mstore\n    /* \"#utility.yul\":3780:3813   */\n  0x48616c76696e6720726174652063616e6e6f7420657863656564203130302500\n    /* \"#utility.yul\":3760:3778   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":3753:3814   */\n  mstore\n    /* \"#utility.yul\":3831:3849   */\n  0x64\n  add\n    /* \"contracts/Cardeiro_4.sol\":1870:1933  require(_halvingRate <= 100, \"Halving rate cannot exceed 100%\") */\n  tag_14\n    /* \"#utility.yul\":3500:3855   */\n  jump\n    /* \"contracts/Cardeiro_4.sol\":1870:1933  require(_halvingRate <= 100, \"Halving rate cannot exceed 100%\") */\ntag_20:\n    /* \"contracts/Cardeiro_4.sol\":1181:1186  86400 */\n  0x015180\n    /* \"contracts/Cardeiro_4.sol\":1951:1967  _halvingInterval */\n  dup3\n    /* \"contracts/Cardeiro_4.sol\":1951:1986  _halvingInterval >= SECONDS_PER_DAY */\n  lt\n  iszero\n    /* \"contracts/Cardeiro_4.sol\":1943:2009  require(_halvingInterval >= SECONDS_PER_DAY, \"Interval too short\") */\n  tag_23\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":4062:4064   */\n  0x20\n    /* \"contracts/Cardeiro_4.sol\":1943:2009  require(_halvingInterval >= SECONDS_PER_DAY, \"Interval too short\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4044:4065   */\n  mstore\n    /* \"#utility.yul\":4101:4103   */\n  0x12\n    /* \"#utility.yul\":4081:4099   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":4074:4104   */\n  mstore\n  shl(0x72, 0x125b9d195c9d985b081d1bdbc81cda1bdc9d)\n    /* \"#utility.yul\":4120:4138   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":4113:4161   */\n  mstore\n    /* \"#utility.yul\":4178:4196   */\n  0x64\n  add\n    /* \"contracts/Cardeiro_4.sol\":1943:2009  require(_halvingInterval >= SECONDS_PER_DAY, \"Interval too short\") */\n  tag_14\n    /* \"#utility.yul\":3860:4202   */\n  jump\n    /* \"contracts/Cardeiro_4.sol\":1943:2009  require(_halvingInterval >= SECONDS_PER_DAY, \"Interval too short\") */\ntag_23:\n    /* \"contracts/Cardeiro_4.sol\":1181:1186  86400 */\n  0x015180\n    /* \"contracts/Cardeiro_4.sol\":1262:1278  DAYS_IN_YEAR * 2 */\n  tag_26\n    /* \"contracts/Cardeiro_4.sol\":1128:1131  365 */\n  0x016d\n    /* \"contracts/Cardeiro_4.sol\":1277:1278  2 */\n  0x02\n    /* \"contracts/Cardeiro_4.sol\":1262:1278  DAYS_IN_YEAR * 2 */\n  tag_27\n  jump\t// in\ntag_26:\n    /* \"contracts/Cardeiro_4.sol\":1261:1297  (DAYS_IN_YEAR * 2) * SECONDS_PER_DAY */\n  tag_28\n  swap2\n  swap1\n  tag_27\n  jump\t// in\ntag_28:\n    /* \"contracts/Cardeiro_4.sol\":2047:2075  DEFAULT_HALVING_INTERVAL * 2 */\n  tag_29\n  swap1\n    /* \"contracts/Cardeiro_4.sol\":2074:2075  2 */\n  0x02\n    /* \"contracts/Cardeiro_4.sol\":2047:2075  DEFAULT_HALVING_INTERVAL * 2 */\n  tag_27\n  jump\t// in\ntag_29:\n    /* \"contracts/Cardeiro_4.sol\":2027:2043  _halvingInterval */\n  dup3\n    /* \"contracts/Cardeiro_4.sol\":2027:2075  _halvingInterval <= DEFAULT_HALVING_INTERVAL * 2 */\n  gt\n  iszero\n    /* \"contracts/Cardeiro_4.sol\":2019:2097  require(_halvingInterval <= DEFAULT_HALVING_INTERVAL * 2, \"Interval too long\") */\n  tag_30\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":4714:4716   */\n  0x20\n    /* \"contracts/Cardeiro_4.sol\":2019:2097  require(_halvingInterval <= DEFAULT_HALVING_INTERVAL * 2, \"Interval too long\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4696:4717   */\n  mstore\n    /* \"#utility.yul\":4753:4755   */\n  0x11\n    /* \"#utility.yul\":4733:4751   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":4726:4756   */\n  mstore\n  shl(0x78, 0x496e74657276616c20746f6f206c6f6e67)\n    /* \"#utility.yul\":4772:4790   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":4765:4812   */\n  mstore\n    /* \"#utility.yul\":4829:4847   */\n  0x64\n  add\n    /* \"contracts/Cardeiro_4.sol\":2019:2097  require(_halvingInterval <= DEFAULT_HALVING_INTERVAL * 2, \"Interval too long\") */\n  tag_14\n    /* \"#utility.yul\":4512:4853   */\n  jump\n    /* \"contracts/Cardeiro_4.sol\":2019:2097  require(_halvingInterval <= DEFAULT_HALVING_INTERVAL * 2, \"Interval too long\") */\ntag_30:\n    /* \"contracts/Cardeiro_4.sol\":2116:2148  _mint(msg.sender, initialSupply) */\n  tag_33\n    /* \"contracts/Cardeiro_4.sol\":2122:2132  msg.sender */\n  caller\n    /* \"contracts/Cardeiro_4.sol\":2134:2147  initialSupply */\n  dup6\n    /* \"contracts/Cardeiro_4.sol\":2116:2121  _mint */\n  tag_34\n    /* \"contracts/Cardeiro_4.sol\":2116:2148  _mint(msg.sender, initialSupply) */\n  jump\t// in\ntag_33:\n    /* \"contracts/Cardeiro_4.sol\":2158:2166  treasury */\n  0x07\n    /* \"contracts/Cardeiro_4.sol\":2158:2178  treasury = _treasury */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap5\n  swap1\n  swap5\n  and\n  swap4\n  swap1\n  swap4\n  or\n  swap1\n  swap3\n  sstore\n    /* \"contracts/Cardeiro_4.sol\":2188:2203  halvingInterval */\n  0x08\n    /* \"contracts/Cardeiro_4.sol\":2188:2222  halvingInterval = _halvingInterval */\n  sstore\n    /* \"contracts/Cardeiro_4.sol\":2232:2243  halvingRate */\n  0x0a\n    /* \"contracts/Cardeiro_4.sol\":2232:2258  halvingRate = _halvingRate */\n  sstore\n  pop\n    /* \"contracts/Cardeiro_4.sol\":2286:2301  block.timestamp */\n  timestamp\n    /* \"contracts/Cardeiro_4.sol\":2268:2283  lastHalvingTime */\n  0x09\n    /* \"contracts/Cardeiro_4.sol\":2268:2301  lastHalvingTime = block.timestamp */\n  sstore\n    /* \"contracts/Cardeiro_4.sol\":563:4530  contract Cardeiro is ERC20, ERC20Burnable, Ownable, ReentrancyGuard {... */\n  jump(tag_60)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_17:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\ntag_34:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n  tag_38\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0xec442f05)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3438:3489   */\n  mstore\n    /* \"#utility.yul\":3411:3429   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  tag_14\n    /* \"#utility.yul\":3292:3495   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\ntag_38:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  tag_40\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n  tag_41\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  jump\t// in\ntag_40:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_41:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_43\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_44\n  swap2\n  swap1\n  tag_45\n  jump\t// in\ntag_44:\n  swap1\n  swap2\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_46\n  swap1\n  pop\n  jump\ntag_43:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n  dup2\n  dup2\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n  iszero\n  tag_47\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  shl(0xe2, 0x391434e3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":5208:5240   */\n  dup6\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":5190:5241   */\n  mstore\n    /* \"#utility.yul\":5257:5275   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":5250:5284   */\n  dup3\n  swap1\n  mstore\n    /* \"#utility.yul\":5300:5318   */\n  0x44\n  dup2\n  add\n    /* \"#utility.yul\":5293:5327   */\n  dup4\n  swap1\n  mstore\n    /* \"#utility.yul\":5163:5181   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  tag_14\n    /* \"#utility.yul\":4988:5333   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\ntag_47:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  dup5\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n  swap1\n  dup3\n  swap1\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\ntag_46:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  tag_50\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n  0x02\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n  dup1\n  sload\n  dup3\n  swap1\n  sub\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  jump(tag_51)\ntag_50:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n  dup1\n  sload\n  dup3\n  add\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\ntag_51:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  mload(0x40)\n  tag_52\n  swap2\n    /* \"#utility.yul\":5484:5509   */\n  dup2\n  mstore\n    /* \"#utility.yul\":5472:5474   */\n  0x20\n    /* \"#utility.yul\":5457:5475   */\n  add\n  swap1\n    /* \"#utility.yul\":5338:5515   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\ntag_52:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:646   */\ntag_3:\n    /* \"#utility.yul\":111:117   */\n  0x00\n    /* \"#utility.yul\":119:125   */\n  0x00\n    /* \"#utility.yul\":127:133   */\n  0x00\n    /* \"#utility.yul\":135:141   */\n  0x00\n    /* \"#utility.yul\":188:191   */\n  0x80\n    /* \"#utility.yul\":176:185   */\n  dup6\n    /* \"#utility.yul\":167:174   */\n  dup8\n    /* \"#utility.yul\":163:186   */\n  sub\n    /* \"#utility.yul\":159:192   */\n  slt\n    /* \"#utility.yul\":156:209   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":205:206   */\n  0x00\n    /* \"#utility.yul\":202:203   */\n  0x00\n    /* \"#utility.yul\":195:207   */\n  revert\n    /* \"#utility.yul\":156:209   */\ntag_62:\n    /* \"#utility.yul\":250:266   */\n  dup5\n  mload\n    /* \"#utility.yul\":335:337   */\n  0x20\n    /* \"#utility.yul\":320:338   */\n  dup7\n  add\n    /* \"#utility.yul\":314:339   */\n  mload\n    /* \"#utility.yul\":250:266   */\n  swap1\n  swap5\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":370:403   */\n  dup2\n  and\n    /* \"#utility.yul\":358:404   */\n  dup2\n  eq\n    /* \"#utility.yul\":348:422   */\n  tag_63\n  jumpi\n    /* \"#utility.yul\":418:419   */\n  0x00\n    /* \"#utility.yul\":415:416   */\n  0x00\n    /* \"#utility.yul\":408:420   */\n  revert\n    /* \"#utility.yul\":348:422   */\ntag_63:\n    /* \"#utility.yul\":514:516   */\n  0x40\n    /* \"#utility.yul\":499:517   */\n  dup7\n  add\n    /* \"#utility.yul\":493:518   */\n  mload\n    /* \"#utility.yul\":610:612   */\n  0x60\n    /* \"#utility.yul\":595:613   */\n  swap1\n  swap7\n  add\n    /* \"#utility.yul\":589:614   */\n  mload\n    /* \"#utility.yul\":14:646   */\n  swap5\n  swap8\n    /* \"#utility.yul\":441:448   */\n  swap1\n  swap7\n  pop\n    /* \"#utility.yul\":14:646   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":651:778   */\ntag_54:\n    /* \"#utility.yul\":712:722   */\n  0x4e487b71\n    /* \"#utility.yul\":707:710   */\n  0xe0\n    /* \"#utility.yul\":703:723   */\n  shl\n    /* \"#utility.yul\":700:701   */\n  0x00\n    /* \"#utility.yul\":693:724   */\n  mstore\n    /* \"#utility.yul\":743:747   */\n  0x41\n    /* \"#utility.yul\":740:741   */\n  0x04\n    /* \"#utility.yul\":733:748   */\n  mstore\n    /* \"#utility.yul\":767:771   */\n  0x24\n    /* \"#utility.yul\":764:765   */\n  0x00\n    /* \"#utility.yul\":757:772   */\n  revert\n    /* \"#utility.yul\":783:1163   */\ntag_55:\n    /* \"#utility.yul\":862:863   */\n  0x01\n    /* \"#utility.yul\":858:870   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":905:917   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":926:987   */\n  tag_66\n  jumpi\n    /* \"#utility.yul\":980:984   */\n  0x7f\n    /* \"#utility.yul\":972:978   */\n  dup3\n    /* \"#utility.yul\":968:985   */\n  and\n    /* \"#utility.yul\":958:985   */\n  swap2\n  pop\n    /* \"#utility.yul\":926:987   */\ntag_66:\n    /* \"#utility.yul\":1033:1035   */\n  0x20\n    /* \"#utility.yul\":1025:1031   */\n  dup3\n    /* \"#utility.yul\":1022:1036   */\n  lt\n    /* \"#utility.yul\":1002:1020   */\n  dup2\n    /* \"#utility.yul\":999:1037   */\n  sub\n    /* \"#utility.yul\":996:1157   */\n  tag_67\n  jumpi\n    /* \"#utility.yul\":1079:1089   */\n  0x4e487b71\n    /* \"#utility.yul\":1074:1077   */\n  0xe0\n    /* \"#utility.yul\":1070:1090   */\n  shl\n    /* \"#utility.yul\":1067:1068   */\n  0x00\n    /* \"#utility.yul\":1060:1091   */\n  mstore\n    /* \"#utility.yul\":1114:1118   */\n  0x22\n    /* \"#utility.yul\":1111:1112   */\n  0x04\n    /* \"#utility.yul\":1104:1119   */\n  mstore\n    /* \"#utility.yul\":1142:1146   */\n  0x24\n    /* \"#utility.yul\":1139:1140   */\n  0x00\n    /* \"#utility.yul\":1132:1147   */\n  revert\n    /* \"#utility.yul\":996:1157   */\ntag_67:\n  pop\n    /* \"#utility.yul\":783:1163   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1294:1812   */\ntag_57:\n    /* \"#utility.yul\":1396:1398   */\n  0x1f\n    /* \"#utility.yul\":1391:1394   */\n  dup3\n    /* \"#utility.yul\":1388:1399   */\n  gt\n    /* \"#utility.yul\":1385:1806   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":1432:1437   */\n  dup1\n    /* \"#utility.yul\":1429:1430   */\n  0x00\n    /* \"#utility.yul\":1422:1438   */\n  mstore\n    /* \"#utility.yul\":1476:1480   */\n  0x20\n    /* \"#utility.yul\":1473:1474   */\n  0x00\n    /* \"#utility.yul\":1463:1481   */\n  keccak256\n    /* \"#utility.yul\":1546:1548   */\n  0x1f\n    /* \"#utility.yul\":1534:1544   */\n  dup5\n    /* \"#utility.yul\":1530:1549   */\n  add\n    /* \"#utility.yul\":1527:1528   */\n  0x05\n    /* \"#utility.yul\":1523:1550   */\n  shr\n    /* \"#utility.yul\":1517:1521   */\n  dup2\n    /* \"#utility.yul\":1513:1551   */\n  add\n    /* \"#utility.yul\":1582:1586   */\n  0x20\n    /* \"#utility.yul\":1570:1580   */\n  dup6\n    /* \"#utility.yul\":1567:1587   */\n  lt\n    /* \"#utility.yul\":1564:1611   */\n  iszero\n  tag_71\n  jumpi\n  pop\n    /* \"#utility.yul\":1605:1609   */\n  dup1\n    /* \"#utility.yul\":1564:1611   */\ntag_71:\n    /* \"#utility.yul\":1660:1662   */\n  0x1f\n    /* \"#utility.yul\":1655:1658   */\n  dup5\n    /* \"#utility.yul\":1651:1663   */\n  add\n    /* \"#utility.yul\":1648:1649   */\n  0x05\n    /* \"#utility.yul\":1644:1664   */\n  shr\n    /* \"#utility.yul\":1638:1642   */\n  dup3\n    /* \"#utility.yul\":1634:1665   */\n  add\n    /* \"#utility.yul\":1624:1665   */\n  swap2\n  pop\n    /* \"#utility.yul\":1715:1796   */\ntag_72:\n    /* \"#utility.yul\":1733:1735   */\n  dup2\n    /* \"#utility.yul\":1726:1731   */\n  dup2\n    /* \"#utility.yul\":1723:1736   */\n  lt\n    /* \"#utility.yul\":1715:1796   */\n  iszero\n  tag_74\n  jumpi\n    /* \"#utility.yul\":1792:1793   */\n  0x00\n    /* \"#utility.yul\":1778:1794   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1759:1760   */\n  0x01\n    /* \"#utility.yul\":1748:1761   */\n  add\n    /* \"#utility.yul\":1715:1796   */\n  jump(tag_72)\ntag_74:\n    /* \"#utility.yul\":1719:1722   */\n  pop\n  pop\n    /* \"#utility.yul\":1385:1806   */\ntag_70:\n    /* \"#utility.yul\":1294:1812   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1988:3287   */\ntag_10:\n    /* \"#utility.yul\":2108:2118   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2130:2160   */\n  dup2\n  gt\n    /* \"#utility.yul\":2127:2183   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":2163:2181   */\n  tag_78\n  tag_54\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2192:2289   */\n  tag_79\n    /* \"#utility.yul\":2282:2288   */\n  dup2\n    /* \"#utility.yul\":2242:2280   */\n  tag_80\n    /* \"#utility.yul\":2274:2278   */\n  dup5\n    /* \"#utility.yul\":2268:2279   */\n  sload\n    /* \"#utility.yul\":2242:2280   */\n  tag_55\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":2236:2240   */\n  dup5\n    /* \"#utility.yul\":2192:2289   */\n  tag_57\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2338:2342   */\n  0x20\n    /* \"#utility.yul\":2369:2371   */\n  0x1f\n    /* \"#utility.yul\":2358:2372   */\n  dup3\n  gt\n    /* \"#utility.yul\":2386:2387   */\n  0x01\n    /* \"#utility.yul\":2381:3030   */\n  dup2\n  eq\n  tag_82\n  jumpi\n    /* \"#utility.yul\":3074:3075   */\n  0x00\n    /* \"#utility.yul\":3091:3097   */\n  dup4\n    /* \"#utility.yul\":3088:3177   */\n  iszero\n  tag_83\n  jumpi\n  pop\n    /* \"#utility.yul\":3143:3162   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":3137:3163   */\n  mload\n    /* \"#utility.yul\":3088:3177   */\ntag_83:\n  not(0x00)\n    /* \"#utility.yul\":1945:1946   */\n  0x03\n    /* \"#utility.yul\":1941:1952   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1937:1961   */\n  shr\n    /* \"#utility.yul\":1933:1962   */\n  not\n    /* \"#utility.yul\":1923:1963   */\n  and\n    /* \"#utility.yul\":1969:1970   */\n  0x01\n    /* \"#utility.yul\":1965:1976   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":1920:1977   */\n  or\n    /* \"#utility.yul\":3190:3271   */\n  dup5\n  sstore\n    /* \"#utility.yul\":2351:3281   */\n  jump(tag_74)\n    /* \"#utility.yul\":2381:3030   */\ntag_82:\n    /* \"#utility.yul\":1241:1242   */\n  0x00\n    /* \"#utility.yul\":1234:1248   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":1278:1282   */\n  0x20\n    /* \"#utility.yul\":1265:1283   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":2417:2437   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":2535:2757   */\ntag_86:\n    /* \"#utility.yul\":2549:2556   */\n  dup3\n    /* \"#utility.yul\":2546:2547   */\n  dup2\n    /* \"#utility.yul\":2543:2557   */\n  lt\n    /* \"#utility.yul\":2535:2757   */\n  iszero\n  tag_88\n  jumpi\n    /* \"#utility.yul\":2631:2650   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2625:2651   */\n  mload\n    /* \"#utility.yul\":2610:2652   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2738:2742   */\n  0x20\n    /* \"#utility.yul\":2723:2743   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":2691:2692   */\n  0x01\n    /* \"#utility.yul\":2679:2693   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":2565:2577   */\n  add\n    /* \"#utility.yul\":2535:2757   */\n  jump(tag_86)\ntag_88:\n    /* \"#utility.yul\":2539:2542   */\n  pop\n    /* \"#utility.yul\":2785:2791   */\n  dup5\n    /* \"#utility.yul\":2776:2783   */\n  dup3\n    /* \"#utility.yul\":2773:2792   */\n  lt\n    /* \"#utility.yul\":2770:2971   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":2846:2865   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":2840:2866   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2929:2930   */\n  0x03\n    /* \"#utility.yul\":2925:2939   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":2941:2944   */\n  0xf8\n    /* \"#utility.yul\":2921:2945   */\n  and\n    /* \"#utility.yul\":2917:2954   */\n  shr\n    /* \"#utility.yul\":2913:2955   */\n  not\n    /* \"#utility.yul\":2898:2956   */\n  and\n    /* \"#utility.yul\":2883:2957   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2770:2971   */\ntag_89:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3017:3018   */\n  0x01\n    /* \"#utility.yul\":3001:3015   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2997:3019   */\n  add\n    /* \"#utility.yul\":2984:3020   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1988:3287   */\n  jump\t// out\n    /* \"#utility.yul\":4207:4334   */\ntag_59:\n    /* \"#utility.yul\":4268:4278   */\n  0x4e487b71\n    /* \"#utility.yul\":4263:4266   */\n  0xe0\n    /* \"#utility.yul\":4259:4279   */\n  shl\n    /* \"#utility.yul\":4256:4257   */\n  0x00\n    /* \"#utility.yul\":4249:4280   */\n  mstore\n    /* \"#utility.yul\":4299:4303   */\n  0x11\n    /* \"#utility.yul\":4296:4297   */\n  0x04\n    /* \"#utility.yul\":4289:4304   */\n  mstore\n    /* \"#utility.yul\":4323:4327   */\n  0x24\n    /* \"#utility.yul\":4320:4321   */\n  0x00\n    /* \"#utility.yul\":4313:4328   */\n  revert\n    /* \"#utility.yul\":4339:4507   */\ntag_27:\n    /* \"#utility.yul\":4412:4421   */\n  dup1\n  dup3\n  mul\n    /* \"#utility.yul\":4443:4452   */\n  dup2\n  iszero\n    /* \"#utility.yul\":4460:4475   */\n  dup3\n  dup3\n  div\n    /* \"#utility.yul\":4454:4476   */\n  dup5\n  eq\n    /* \"#utility.yul\":4440:4477   */\n  or\n    /* \"#utility.yul\":4430:4501   */\n  tag_96\n  jumpi\n    /* \"#utility.yul\":4481:4499   */\n  tag_96\n  tag_59\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":4339:4507   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4858:4983   */\ntag_45:\n    /* \"#utility.yul\":4923:4932   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":4944:4954   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":4941:4977   */\n  iszero\n  tag_96\n  jumpi\n    /* \"#utility.yul\":4957:4975   */\n  tag_96\n  tag_59\n  jump\t// in\n    /* \"#utility.yul\":5338:5515   */\ntag_60:\n    /* \"contracts/Cardeiro_4.sol\":563:4530  contract Cardeiro is ERC20, ERC20Burnable, Ownable, ReentrancyGuard {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Cardeiro_4.sol\":563:4530  contract Cardeiro is ERC20, ERC20Burnable, Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x768a4173\n      gt\n      tag_26\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xbbb0b1a6\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xed299016\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x768a4173\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x7e6335f4\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x7f51bb1f\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8cbb6df7\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x313ce567\n      gt\n      tag_28\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x61d027b3\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x6a47aa06\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x102b67ab\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/Cardeiro_4.sol\":4485:4520  revert(\"Token does not accept ETH\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":216:218   */\n      0x20\n        /* \"contracts/Cardeiro_4.sol\":4485:4520  revert(\"Token does not accept ETH\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":198:219   */\n      mstore\n        /* \"#utility.yul\":255:257   */\n      0x19\n        /* \"#utility.yul\":235:253   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":228:258   */\n      mstore\n      shl(0x3b, 0x0a8ded6cadc40c8decae640dcdee840c2c6c6cae0e8408aa89)\n        /* \"#utility.yul\":274:292   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":267:322   */\n      mstore\n        /* \"#utility.yul\":339:357   */\n      0x64\n      add\n        /* \"contracts/Cardeiro_4.sol\":4485:4520  revert(\"Token does not accept ETH\") */\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Cardeiro_4.sol\":563:4530  contract Cardeiro is ERC20, ERC20Burnable, Ownable, ReentrancyGuard {... */\n    tag_2:\n        /* \"contracts/Cardeiro_4.sol\":4396:4431  revert(\"Token does not accept ETH\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":216:218   */\n      0x20\n        /* \"contracts/Cardeiro_4.sol\":4396:4431  revert(\"Token does not accept ETH\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":198:219   */\n      mstore\n        /* \"#utility.yul\":255:257   */\n      0x19\n        /* \"#utility.yul\":235:253   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":228:258   */\n      mstore\n      shl(0x3b, 0x0a8ded6cadc40c8decae640dcdee840c2c6c6cae0e8408aa89)\n        /* \"#utility.yul\":274:292   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":267:322   */\n      mstore\n        /* \"#utility.yul\":339:357   */\n      0x64\n      add\n        /* \"contracts/Cardeiro_4.sol\":4396:4431  revert(\"Token does not accept ETH\") */\n      tag_31\n        /* \"#utility.yul\":14:363   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      revert(0x00, 0x00)\n    tag_36:\n      pop\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      revert(0x00, 0x00)\n    tag_41:\n      pop\n      tag_42\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n        /* \"#utility.yul\":1439:1453   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1432:1454   */\n      iszero\n        /* \"#utility.yul\":1414:1455   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1402:1404   */\n      0x20\n        /* \"#utility.yul\":1387:1405   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_39\n        /* \"#utility.yul\":1274:1461   */\n      jump\n        /* \"contracts/Cardeiro_4.sol\":3746:3924  function getExpectedBurn(uint256 rate) public view returns (uint256) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_48\n      jumpi\n      revert(0x00, 0x00)\n    tag_48:\n      pop\n      tag_49\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      mload(0x40)\n        /* \"#utility.yul\":1843:1868   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1831:1833   */\n      0x20\n        /* \"#utility.yul\":1816:1834   */\n      add\n        /* \"contracts/Cardeiro_4.sol\":3746:3924  function getExpectedBurn(uint256 rate) public view returns (uint256) {... */\n      tag_39\n        /* \"#utility.yul\":1697:1874   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      revert(0x00, 0x00)\n    tag_55:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      jump(tag_49)\n        /* \"contracts/Cardeiro_4.sol\":4133:4352  function transferFrom(address from, address to, uint256 amount)... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      revert(0x00, 0x00)\n    tag_59:\n      pop\n      tag_42\n      tag_61\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      revert(0x00, 0x00)\n    tag_65:\n      pop\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"#utility.yul\":2400:2436   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2388:2390   */\n      0x20\n        /* \"#utility.yul\":2373:2391   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      tag_39\n        /* \"#utility.yul\":2258:2442   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_70\n      jumpi\n      revert(0x00, 0x00)\n    tag_70:\n      pop\n      tag_71\n      tag_72\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n    tag_71:\n      stop\n        /* \"contracts/Cardeiro_4.sol\":691:714  address public treasury */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      revert(0x00, 0x00)\n    tag_74:\n      pop\n      sload(0x07)\n      tag_75\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_75:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2611:2643   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2593:2644   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2581:2583   */\n      0x20\n        /* \"#utility.yul\":2566:2584   */\n      add\n        /* \"contracts/Cardeiro_4.sol\":691:714  address public treasury */\n      tag_39\n        /* \"#utility.yul\":2447:2650   */\n      jump\n        /* \"contracts/Cardeiro_4.sol\":762:792  uint256 public halvingInterval */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_79\n      jumpi\n      revert(0x00, 0x00)\n    tag_79:\n      pop\n      tag_49\n      sload(0x08)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      revert(0x00, 0x00)\n    tag_83:\n      pop\n      tag_49\n      tag_85\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_85:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_89\n      jumpi\n      revert(0x00, 0x00)\n    tag_89:\n      pop\n      tag_71\n      tag_91\n      jump\t// in\n        /* \"contracts/Cardeiro_4.sol\":2357:2504  function isHalvingDue() public view returns (bool) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_92\n      jumpi\n      revert(0x00, 0x00)\n    tag_92:\n      pop\n      tag_42\n      tag_94\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_96\n      jumpi\n      revert(0x00, 0x00)\n    tag_96:\n      pop\n      tag_71\n      tag_98\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_98:\n      tag_99\n      jump\t// in\n        /* \"contracts/Cardeiro_4.sol\":937:963  uint256 public halvingRate */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_100\n      jumpi\n      revert(0x00, 0x00)\n    tag_100:\n      pop\n      tag_49\n      sload(0x0a)\n      dup2\n      jump\n        /* \"contracts/Cardeiro_4.sol\":3643:3740  function updateTreasury(address _treasury) public onlyOwner {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_104\n      jumpi\n      revert(0x00, 0x00)\n    tag_104:\n      pop\n      tag_71\n      tag_106\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_106:\n      tag_107\n      jump\t// in\n        /* \"contracts/Cardeiro_4.sol\":840:870  uint256 public lastHalvingTime */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_108\n      jumpi\n      revert(0x00, 0x00)\n    tag_108:\n      pop\n      tag_49\n      sload(0x09)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_112\n      jumpi\n      revert(0x00, 0x00)\n    tag_112:\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump(tag_75)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_116\n      jumpi\n      revert(0x00, 0x00)\n    tag_116:\n      pop\n      tag_37\n      tag_118\n      jump\t// in\n        /* \"contracts/Cardeiro_4.sol\":3930:4127  function transfer(address to, uint256 amount) ... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_120\n      jumpi\n      revert(0x00, 0x00)\n    tag_120:\n      pop\n      tag_42\n      tag_122\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_122:\n      tag_123\n      jump\t// in\n        /* \"contracts/Cardeiro_4.sol\":3245:3577  function updateHalvingParams(uint256 _halvingInterval, uint256 _halvingRate) public onlyOwner {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_125\n      jumpi\n      revert(0x00, 0x00)\n    tag_125:\n      pop\n      tag_71\n      tag_127\n      calldatasize\n      0x04\n      tag_128\n      jump\t// in\n    tag_127:\n      tag_129\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_130\n      jumpi\n      revert(0x00, 0x00)\n    tag_130:\n      pop\n      tag_49\n      tag_132\n      calldatasize\n      0x04\n      tag_133\n      jump\t// in\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"contracts/Cardeiro_4.sol\":2576:3177  function executeHalving() public nonReentrant {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_136\n      jumpi\n      revert(0x00, 0x00)\n    tag_136:\n      pop\n      tag_71\n      tag_138\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_139\n      jumpi\n      revert(0x00, 0x00)\n    tag_139:\n      pop\n      tag_71\n      tag_141\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_141:\n      tag_142\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_144\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_146\n      swap1\n      tag_145\n      jump\t// in\n    tag_146:\n      dup1\n      iszero\n      tag_147\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_148\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_147)\n    tag_148:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_149:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_149\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_147:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_153\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_154\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_150:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Cardeiro_4.sol\":3746:3924  function getExpectedBurn(uint256 rate) public view returns (uint256) {... */\n    tag_52:\n        /* \"contracts/Cardeiro_4.sol\":3861:3869  treasury */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x07))\n        /* \"contracts/Cardeiro_4.sol\":3806:3813  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/Cardeiro_4.sol\":3914:3917  100 */\n      0x64\n        /* \"contracts/Cardeiro_4.sol\":3888:3910  treasuryBalance * rate */\n      tag_157\n        /* \"contracts/Cardeiro_4.sol\":3906:3910  rate */\n      dup5\n        /* \"contracts/Cardeiro_4.sol\":3825:3870  uint256 treasuryBalance = balanceOf(treasury) */\n      dup4\n        /* \"contracts/Cardeiro_4.sol\":3888:3910  treasuryBalance * rate */\n      tag_158\n      jump\t// in\n    tag_157:\n        /* \"contracts/Cardeiro_4.sol\":3887:3917  (treasuryBalance * rate) / 100 */\n      tag_159\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n        /* \"contracts/Cardeiro_4.sol\":3880:3917  return (treasuryBalance * rate) / 100 */\n      swap4\n        /* \"contracts/Cardeiro_4.sol\":3746:3924  function getExpectedBurn(uint256 rate) public view returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Cardeiro_4.sol\":4133:4352  function transferFrom(address from, address to, uint256 amount)... */\n    tag_63:\n        /* \"contracts/Cardeiro_4.sol\":4282:4286  bool */\n      0x00\n        /* \"contracts/Cardeiro_4.sol\":1590:1604  isHalvingDue() */\n      tag_163\n        /* \"contracts/Cardeiro_4.sol\":1590:1602  isHalvingDue */\n      tag_94\n        /* \"contracts/Cardeiro_4.sol\":1590:1604  isHalvingDue() */\n      jump\t// in\n    tag_163:\n        /* \"contracts/Cardeiro_4.sol\":1586:1647  if (isHalvingDue()) {... */\n      iszero\n      tag_165\n      jumpi\n        /* \"contracts/Cardeiro_4.sol\":1620:1636  executeHalving() */\n      tag_165\n        /* \"contracts/Cardeiro_4.sol\":1620:1634  executeHalving */\n      tag_138\n        /* \"contracts/Cardeiro_4.sol\":1620:1636  executeHalving() */\n      jump\t// in\n    tag_165:\n        /* \"contracts/Cardeiro_4.sol\":4309:4345  super.transferFrom(from, to, amount) */\n      tag_167\n        /* \"contracts/Cardeiro_4.sol\":4328:4332  from */\n      dup5\n        /* \"contracts/Cardeiro_4.sol\":4334:4336  to */\n      dup5\n        /* \"contracts/Cardeiro_4.sol\":4338:4344  amount */\n      dup5\n        /* \"contracts/Cardeiro_4.sol\":4309:4327  super.transferFrom */\n      tag_168\n        /* \"contracts/Cardeiro_4.sol\":4309:4345  super.transferFrom(from, to, amount) */\n      jump\t// in\n    tag_167:\n        /* \"contracts/Cardeiro_4.sol\":4302:4345  return super.transferFrom(from, to, amount) */\n      swap5\n        /* \"contracts/Cardeiro_4.sol\":4133:4352  function transferFrom(address from, address to, uint256 amount)... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      tag_171\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":692:697  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:677  _burn */\n      tag_173\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      jump\t// in\n    tag_171:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_176\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_177\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_176:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_179\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_180\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Cardeiro_4.sol\":2357:2504  function isHalvingDue() public view returns (bool) {... */\n    tag_94:\n        /* \"contracts/Cardeiro_4.sol\":2402:2406  bool */\n      0x00\n        /* \"contracts/Cardeiro_4.sol\":1436:1440  1800 */\n      0x0708\n        /* \"contracts/Cardeiro_4.sol\":2463:2478  halvingInterval */\n      sload(0x08)\n        /* \"contracts/Cardeiro_4.sol\":2445:2460  lastHalvingTime */\n      sload(0x09)\n        /* \"contracts/Cardeiro_4.sol\":2445:2478  lastHalvingTime + halvingInterval */\n      tag_182\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_182:\n        /* \"contracts/Cardeiro_4.sol\":2445:2496  lastHalvingTime + halvingInterval + SECURITY_MARGIN */\n      tag_184\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_184:\n        /* \"contracts/Cardeiro_4.sol\":2425:2440  block.timestamp */\n      timestamp\n        /* \"contracts/Cardeiro_4.sol\":2425:2497  block.timestamp >= (lastHalvingTime + halvingInterval + SECURITY_MARGIN) */\n      lt\n      iszero\n        /* \"contracts/Cardeiro_4.sol\":2418:2497  return block.timestamp >= (lastHalvingTime + halvingInterval + SECURITY_MARGIN) */\n      swap1\n      pop\n        /* \"contracts/Cardeiro_4.sol\":2357:2504  function isHalvingDue() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      tag_186\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1112:1119  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1135:1140  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1111  _spendAllowance */\n      tag_188\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      jump\t// in\n    tag_186:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      tag_189\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1157:1164  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1166:1171  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1156  _burn */\n      tag_173\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      jump\t// in\n    tag_189:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Cardeiro_4.sol\":3643:3740  function updateTreasury(address _treasury) public onlyOwner {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_191\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_177\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_191:\n        /* \"contracts/Cardeiro_4.sol\":3713:3721  treasury */\n      0x07\n        /* \"contracts/Cardeiro_4.sol\":3713:3733  treasury = _treasury */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/Cardeiro_4.sol\":3643:3740  function updateTreasury(address _treasury) public onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_144\n      swap1\n      tag_145\n      jump\t// in\n        /* \"contracts/Cardeiro_4.sol\":3930:4127  function transfer(address to, uint256 amount) ... */\n    tag_123:\n        /* \"contracts/Cardeiro_4.sol\":4066:4070  bool */\n      0x00\n        /* \"contracts/Cardeiro_4.sol\":1590:1604  isHalvingDue() */\n      tag_201\n        /* \"contracts/Cardeiro_4.sol\":1590:1602  isHalvingDue */\n      tag_94\n        /* \"contracts/Cardeiro_4.sol\":1590:1604  isHalvingDue() */\n      jump\t// in\n    tag_201:\n        /* \"contracts/Cardeiro_4.sol\":1586:1647  if (isHalvingDue()) {... */\n      iszero\n      tag_203\n      jumpi\n        /* \"contracts/Cardeiro_4.sol\":1620:1636  executeHalving() */\n      tag_203\n        /* \"contracts/Cardeiro_4.sol\":1620:1634  executeHalving */\n      tag_138\n        /* \"contracts/Cardeiro_4.sol\":1620:1636  executeHalving() */\n      jump\t// in\n    tag_203:\n        /* \"contracts/Cardeiro_4.sol\":4094:4120  super.transfer(to, amount) */\n      tag_159\n        /* \"contracts/Cardeiro_4.sol\":4109:4111  to */\n      dup4\n        /* \"contracts/Cardeiro_4.sol\":4113:4119  amount */\n      dup4\n        /* \"contracts/Cardeiro_4.sol\":4094:4108  super.transfer */\n      tag_206\n        /* \"contracts/Cardeiro_4.sol\":4094:4120  super.transfer(to, amount) */\n      jump\t// in\n        /* \"contracts/Cardeiro_4.sol\":3245:3577  function updateHalvingParams(uint256 _halvingInterval, uint256 _halvingRate) public onlyOwner {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_208\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_177\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_208:\n        /* \"contracts/Cardeiro_4.sol\":1014:1015  5 */\n      0x05\n        /* \"contracts/Cardeiro_4.sol\":3357:3369  _halvingRate */\n      dup2\n        /* \"contracts/Cardeiro_4.sol\":3357:3389  _halvingRate >= MIN_HALVING_RATE */\n      lt\n      iszero\n        /* \"contracts/Cardeiro_4.sol\":3349:3414  require(_halvingRate >= MIN_HALVING_RATE, \"Halving rate too low\") */\n      tag_210\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4706:4708   */\n      0x20\n        /* \"contracts/Cardeiro_4.sol\":3349:3414  require(_halvingRate >= MIN_HALVING_RATE, \"Halving rate too low\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4688:4709   */\n      mstore\n        /* \"#utility.yul\":4745:4747   */\n      0x14\n        /* \"#utility.yul\":4725:4743   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4718:4748   */\n      mstore\n      shl(0x60, 0x48616c76696e67207261746520746f6f206c6f77)\n        /* \"#utility.yul\":4764:4782   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4757:4807   */\n      mstore\n        /* \"#utility.yul\":4824:4842   */\n      0x64\n      add\n        /* \"contracts/Cardeiro_4.sol\":3349:3414  require(_halvingRate >= MIN_HALVING_RATE, \"Halving rate too low\") */\n      tag_31\n        /* \"#utility.yul\":4504:4848   */\n      jump\n        /* \"contracts/Cardeiro_4.sol\":3349:3414  require(_halvingRate >= MIN_HALVING_RATE, \"Halving rate too low\") */\n    tag_210:\n        /* \"contracts/Cardeiro_4.sol\":1072:1074  20 */\n      0x14\n        /* \"contracts/Cardeiro_4.sol\":3432:3444  _halvingRate */\n      dup2\n        /* \"contracts/Cardeiro_4.sol\":3432:3464  _halvingRate <= MAX_HALVING_RATE */\n      gt\n      iszero\n        /* \"contracts/Cardeiro_4.sol\":3424:3490  require(_halvingRate <= MAX_HALVING_RATE, \"Halving rate too high\") */\n      tag_213\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5055:5057   */\n      0x20\n        /* \"contracts/Cardeiro_4.sol\":3424:3490  require(_halvingRate <= MAX_HALVING_RATE, \"Halving rate too high\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5037:5058   */\n      mstore\n        /* \"#utility.yul\":5094:5096   */\n      0x15\n        /* \"#utility.yul\":5074:5092   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5067:5097   */\n      mstore\n      shl(0x5b, 0x090c2d8ecd2dcce40e4c2e8ca40e8dede40d0d2ced)\n        /* \"#utility.yul\":5113:5131   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5106:5157   */\n      mstore\n        /* \"#utility.yul\":5174:5192   */\n      0x64\n      add\n        /* \"contracts/Cardeiro_4.sol\":3424:3490  require(_halvingRate <= MAX_HALVING_RATE, \"Halving rate too high\") */\n      tag_31\n        /* \"#utility.yul\":4853:5198   */\n      jump\n        /* \"contracts/Cardeiro_4.sol\":3424:3490  require(_halvingRate <= MAX_HALVING_RATE, \"Halving rate too high\") */\n    tag_213:\n        /* \"contracts/Cardeiro_4.sol\":3500:3515  halvingInterval */\n      0x08\n        /* \"contracts/Cardeiro_4.sol\":3500:3534  halvingInterval = _halvingInterval */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Cardeiro_4.sol\":3544:3555  halvingRate */\n      0x0a\n        /* \"contracts/Cardeiro_4.sol\":3544:3570  halvingRate = _halvingRate */\n      sstore\n        /* \"contracts/Cardeiro_4.sol\":3245:3577  function updateHalvingParams(uint256 _halvingInterval, uint256 _halvingRate) public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Cardeiro_4.sol\":2576:3177  function executeHalving() public nonReentrant {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      tag_218\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2519  _nonReentrantBefore */\n      tag_219\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      jump\t// in\n    tag_218:\n        /* \"contracts/Cardeiro_4.sol\":2640:2654  isHalvingDue() */\n      tag_221\n        /* \"contracts/Cardeiro_4.sol\":2640:2652  isHalvingDue */\n      tag_94\n        /* \"contracts/Cardeiro_4.sol\":2640:2654  isHalvingDue() */\n      jump\t// in\n    tag_221:\n        /* \"contracts/Cardeiro_4.sol\":2632:2687  require(isHalvingDue(), \"Halving interval not reached\") */\n      tag_222\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5405:5407   */\n      0x20\n        /* \"contracts/Cardeiro_4.sol\":2632:2687  require(isHalvingDue(), \"Halving interval not reached\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5387:5408   */\n      mstore\n        /* \"#utility.yul\":5444:5446   */\n      0x1c\n        /* \"#utility.yul\":5424:5442   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5417:5447   */\n      mstore\n        /* \"#utility.yul\":5483:5513   */\n      0x48616c76696e6720696e74657276616c206e6f74207265616368656400000000\n        /* \"#utility.yul\":5463:5481   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5456:5514   */\n      mstore\n        /* \"#utility.yul\":5531:5549   */\n      0x64\n      add\n        /* \"contracts/Cardeiro_4.sol\":2632:2687  require(isHalvingDue(), \"Halving interval not reached\") */\n      tag_31\n        /* \"#utility.yul\":5203:5555   */\n      jump\n        /* \"contracts/Cardeiro_4.sol\":2632:2687  require(isHalvingDue(), \"Halving interval not reached\") */\n    tag_222:\n        /* \"contracts/Cardeiro_4.sol\":2742:2750  treasury */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x07))\n        /* \"contracts/Cardeiro_4.sol\":2706:2729  uint256 treasuryBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/Cardeiro_4.sol\":2706:2751  uint256 treasuryBalance = balanceOf(treasury) */\n      swap1\n      pop\n        /* \"contracts/Cardeiro_4.sol\":2761:2779  uint256 burnAmount */\n      0x00\n        /* \"contracts/Cardeiro_4.sol\":2816:2819  100 */\n      0x64\n        /* \"contracts/Cardeiro_4.sol\":2801:2812  halvingRate */\n      sload(0x0a)\n        /* \"contracts/Cardeiro_4.sol\":2783:2798  treasuryBalance */\n      dup4\n        /* \"contracts/Cardeiro_4.sol\":2783:2812  treasuryBalance * halvingRate */\n      tag_226\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_226:\n        /* \"contracts/Cardeiro_4.sol\":2782:2819  (treasuryBalance * halvingRate) / 100 */\n      tag_227\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_227:\n        /* \"contracts/Cardeiro_4.sol\":2761:2819  uint256 burnAmount = (treasuryBalance * halvingRate) / 100 */\n      swap1\n      pop\n        /* \"contracts/Cardeiro_4.sol\":2842:2856  burnAmount > 0 */\n      dup1\n      iszero\n        /* \"contracts/Cardeiro_4.sol\":2838:3171  if (burnAmount > 0) {... */\n      tag_228\n      jumpi\n        /* \"contracts/Cardeiro_4.sol\":2919:2927  treasury */\n      sload(0x07)\n        /* \"contracts/Cardeiro_4.sol\":2913:2940  _burn(treasury, burnAmount) */\n      tag_229\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Cardeiro_4.sol\":2919:2927  treasury */\n      and\n        /* \"contracts/Cardeiro_4.sol\":2929:2939  burnAmount */\n      dup3\n        /* \"contracts/Cardeiro_4.sol\":2913:2918  _burn */\n      tag_173\n        /* \"contracts/Cardeiro_4.sol\":2913:2940  _burn(treasury, burnAmount) */\n      jump\t// in\n    tag_229:\n        /* \"contracts/Cardeiro_4.sol\":3025:3058  block.timestamp - SECURITY_MARGIN */\n      tag_230\n        /* \"contracts/Cardeiro_4.sol\":1436:1440  1800 */\n      0x0708\n        /* \"contracts/Cardeiro_4.sol\":3025:3040  block.timestamp */\n      timestamp\n        /* \"contracts/Cardeiro_4.sol\":3025:3058  block.timestamp - SECURITY_MARGIN */\n      tag_231\n      jump\t// in\n    tag_230:\n        /* \"contracts/Cardeiro_4.sol\":3007:3022  lastHalvingTime */\n      0x09\n        /* \"contracts/Cardeiro_4.sol\":3007:3058  lastHalvingTime = block.timestamp - SECURITY_MARGIN */\n      sstore\n        /* \"contracts/Cardeiro_4.sol\":3124:3160  Halving(burnAmount, block.timestamp) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":5867:5892   */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/Cardeiro_4.sol\":3144:3159  block.timestamp */\n      timestamp\n        /* \"#utility.yul\":5923:5925   */\n      0x20\n        /* \"#utility.yul\":5908:5926   */\n      dup3\n      add\n        /* \"#utility.yul\":5901:5935   */\n      mstore\n        /* \"contracts/Cardeiro_4.sol\":3124:3160  Halving(burnAmount, block.timestamp) */\n      0x394823b0bcaf78cd8f5876a52c05dbab91512a05f5da2a31e239a11ab66d605f\n      swap2\n        /* \"#utility.yul\":5840:5858   */\n      add\n        /* \"contracts/Cardeiro_4.sol\":3124:3160  Halving(burnAmount, block.timestamp) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Cardeiro_4.sol\":2838:3171  if (burnAmount > 0) {... */\n    tag_228:\n        /* \"contracts/Cardeiro_4.sol\":2622:3177  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      tag_179\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1857:1858  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":3068:3075  _status */\n      0x06\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":3068:3089  _status = NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2888:3096  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_142:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_237\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_177\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_237:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_239\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2593:2644   */\n      mstore\n        /* \"#utility.yul\":2566:2584   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_31\n        /* \"#utility.yul\":2447:2650   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_239:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_171\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_180\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_244\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_245\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_244:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_248\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_188\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_248:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_249\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_250\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_249:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n    tag_173:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n      tag_252\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8098:8128  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8125:8126  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8098:8128  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2593:2644   */\n      mstore\n        /* \"#utility.yul\":2566:2584   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8098:8128  ERC20InvalidSender(address(0)) */\n      tag_31\n        /* \"#utility.yul\":2447:2650   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n    tag_252:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      tag_189\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8156:8163  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8173:8174  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8177:8182  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8155  _update */\n      tag_255\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_177:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_179\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2593:2644   */\n      mstore\n        /* \"#utility.yul\":2566:2584   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_31\n        /* \"#utility.yul\":2447:2650   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_180:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_188:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10616  currentAllowance < type(uint256).max */\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_269\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10655:10660  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10652  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10660  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n      iszero\n      tag_266\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10687:10747  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6166:6198   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10687:10747  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6148:6199   */\n      mstore\n        /* \"#utility.yul\":6215:6233   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":6208:6242   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":6258:6276   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":6251:6285   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":6121:6139   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10687:10747  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      tag_31\n        /* \"#utility.yul\":5946:6291   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n    tag_266:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      tag_269\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10812:10817  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10819:10826  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10847:10852  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10852  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10854:10859  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10811  _approve */\n      tag_245\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_269:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10891  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_206:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_153\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_250\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2575:2882  function _nonReentrantBefore() private {... */\n    tag_219:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1899:1900  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2702:2709  _status */\n      sload(0x06)\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2702:2720  _status == ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2698:2784  if (_status == ENTERED) {... */\n      tag_274\n      jumpi\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2743:2773  ReentrancyGuardReentrantCall() */\n      mload(0x40)\n      shl(0xe0, 0x3ee5aeb5)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2698:2784  if (_status == ENTERED) {... */\n    tag_274:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1899:1900  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2858:2865  _status */\n      0x06\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2858:2875  _status = ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2575:2882  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_245:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_277\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2593:2644   */\n      mstore\n        /* \"#utility.yul\":2566:2584   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      tag_31\n        /* \"#utility.yul\":2447:2650   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_277:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_279\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2593:2644   */\n      mstore\n        /* \"#utility.yul\":2566:2584   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      tag_31\n        /* \"#utility.yul\":2447:2650   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_279:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_269\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_282\n      swap2\n        /* \"#utility.yul\":1843:1868   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1831:1833   */\n      0x20\n        /* \"#utility.yul\":1816:1834   */\n      add\n      swap1\n        /* \"#utility.yul\":1697:1874   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n    tag_282:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_250:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_284\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2593:2644   */\n      mstore\n        /* \"#utility.yul\":2566:2584   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      tag_31\n        /* \"#utility.yul\":2447:2650   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_284:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_286\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2593:2644   */\n      mstore\n        /* \"#utility.yul\":2566:2584   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      tag_31\n        /* \"#utility.yul\":2447:2650   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_286:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_244\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_255:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_290\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_291\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_291:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_292\n      swap1\n      pop\n      jump\n    tag_290:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_293\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6166:6198   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6148:6199   */\n      mstore\n        /* \"#utility.yul\":6215:6233   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":6208:6242   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":6258:6276   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":6251:6285   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":6121:6139   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_31\n        /* \"#utility.yul\":5946:6291   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_293:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_292:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_295\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_296)\n    tag_295:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_296:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_297\n      swap2\n        /* \"#utility.yul\":1843:1868   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1831:1833   */\n      0x20\n        /* \"#utility.yul\":1816:1834   */\n      add\n      swap1\n        /* \"#utility.yul\":1697:1874   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n    tag_297:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":368:786   */\n    tag_40:\n        /* \"#utility.yul\":517:519   */\n      0x20\n        /* \"#utility.yul\":506:515   */\n      dup2\n        /* \"#utility.yul\":499:520   */\n      mstore\n        /* \"#utility.yul\":480:484   */\n      0x00\n        /* \"#utility.yul\":549:555   */\n      dup3\n        /* \"#utility.yul\":543:556   */\n      mload\n        /* \"#utility.yul\":592:598   */\n      dup1\n        /* \"#utility.yul\":587:589   */\n      0x20\n        /* \"#utility.yul\":576:585   */\n      dup5\n        /* \"#utility.yul\":572:590   */\n      add\n        /* \"#utility.yul\":565:599   */\n      mstore\n        /* \"#utility.yul\":651:657   */\n      dup1\n        /* \"#utility.yul\":646:648   */\n      0x20\n        /* \"#utility.yul\":638:644   */\n      dup6\n        /* \"#utility.yul\":634:649   */\n      add\n        /* \"#utility.yul\":629:631   */\n      0x40\n        /* \"#utility.yul\":618:627   */\n      dup6\n        /* \"#utility.yul\":614:632   */\n      add\n        /* \"#utility.yul\":608:658   */\n      mcopy\n        /* \"#utility.yul\":707:708   */\n      0x00\n        /* \"#utility.yul\":702:704   */\n      0x40\n        /* \"#utility.yul\":693:699   */\n      dup3\n        /* \"#utility.yul\":682:691   */\n      dup6\n        /* \"#utility.yul\":678:700   */\n      add\n        /* \"#utility.yul\":674:705   */\n      add\n        /* \"#utility.yul\":667:709   */\n      mstore\n        /* \"#utility.yul\":777:779   */\n      0x40\n        /* \"#utility.yul\":770:772   */\n      0x1f\n        /* \"#utility.yul\":766:773   */\n      not\n        /* \"#utility.yul\":761:763   */\n      0x1f\n        /* \"#utility.yul\":753:759   */\n      dup4\n        /* \"#utility.yul\":749:764   */\n      add\n        /* \"#utility.yul\":745:774   */\n      and\n        /* \"#utility.yul\":734:743   */\n      dup5\n        /* \"#utility.yul\":730:775   */\n      add\n        /* \"#utility.yul\":726:780   */\n      add\n        /* \"#utility.yul\":718:780   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":368:786   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":791:964   */\n    tag_298:\n        /* \"#utility.yul\":859:879   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":908:939   */\n      dup2\n      and\n        /* \"#utility.yul\":898:940   */\n      dup2\n      eq\n        /* \"#utility.yul\":888:958   */\n      tag_304\n      jumpi\n        /* \"#utility.yul\":954:955   */\n      0x00\n        /* \"#utility.yul\":951:952   */\n      0x00\n        /* \"#utility.yul\":944:956   */\n      revert\n        /* \"#utility.yul\":888:958   */\n    tag_304:\n        /* \"#utility.yul\":791:964   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":969:1269   */\n    tag_44:\n        /* \"#utility.yul\":1037:1043   */\n      0x00\n        /* \"#utility.yul\":1045:1051   */\n      0x00\n        /* \"#utility.yul\":1098:1100   */\n      0x40\n        /* \"#utility.yul\":1086:1095   */\n      dup4\n        /* \"#utility.yul\":1077:1084   */\n      dup6\n        /* \"#utility.yul\":1073:1096   */\n      sub\n        /* \"#utility.yul\":1069:1101   */\n      slt\n        /* \"#utility.yul\":1066:1118   */\n      iszero\n      tag_306\n      jumpi\n        /* \"#utility.yul\":1114:1115   */\n      0x00\n        /* \"#utility.yul\":1111:1112   */\n      0x00\n        /* \"#utility.yul\":1104:1116   */\n      revert\n        /* \"#utility.yul\":1066:1118   */\n    tag_306:\n        /* \"#utility.yul\":1137:1166   */\n      tag_307\n        /* \"#utility.yul\":1156:1165   */\n      dup4\n        /* \"#utility.yul\":1137:1166   */\n      tag_298\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":1127:1166   */\n      swap5\n        /* \"#utility.yul\":1235:1237   */\n      0x20\n        /* \"#utility.yul\":1220:1238   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1207:1239   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":969:1269   */\n      jump\t// out\n        /* \"#utility.yul\":1466:1692   */\n    tag_51:\n        /* \"#utility.yul\":1525:1531   */\n      0x00\n        /* \"#utility.yul\":1578:1580   */\n      0x20\n        /* \"#utility.yul\":1566:1575   */\n      dup3\n        /* \"#utility.yul\":1557:1564   */\n      dup5\n        /* \"#utility.yul\":1553:1576   */\n      sub\n        /* \"#utility.yul\":1549:1581   */\n      slt\n        /* \"#utility.yul\":1546:1598   */\n      iszero\n      tag_310\n      jumpi\n        /* \"#utility.yul\":1594:1595   */\n      0x00\n        /* \"#utility.yul\":1591:1592   */\n      0x00\n        /* \"#utility.yul\":1584:1596   */\n      revert\n        /* \"#utility.yul\":1546:1598   */\n    tag_310:\n      pop\n        /* \"#utility.yul\":1639:1662   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1466:1692   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1879:2253   */\n    tag_62:\n        /* \"#utility.yul\":1956:1962   */\n      0x00\n        /* \"#utility.yul\":1964:1970   */\n      0x00\n        /* \"#utility.yul\":1972:1978   */\n      0x00\n        /* \"#utility.yul\":2025:2027   */\n      0x60\n        /* \"#utility.yul\":2013:2022   */\n      dup5\n        /* \"#utility.yul\":2004:2011   */\n      dup7\n        /* \"#utility.yul\":2000:2023   */\n      sub\n        /* \"#utility.yul\":1996:2028   */\n      slt\n        /* \"#utility.yul\":1993:2045   */\n      iszero\n      tag_313\n      jumpi\n        /* \"#utility.yul\":2041:2042   */\n      0x00\n        /* \"#utility.yul\":2038:2039   */\n      0x00\n        /* \"#utility.yul\":2031:2043   */\n      revert\n        /* \"#utility.yul\":1993:2045   */\n    tag_313:\n        /* \"#utility.yul\":2064:2093   */\n      tag_314\n        /* \"#utility.yul\":2083:2092   */\n      dup5\n        /* \"#utility.yul\":2064:2093   */\n      tag_298\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":2054:2093   */\n      swap3\n      pop\n        /* \"#utility.yul\":2112:2150   */\n      tag_315\n        /* \"#utility.yul\":2146:2148   */\n      0x20\n        /* \"#utility.yul\":2135:2144   */\n      dup6\n        /* \"#utility.yul\":2131:2149   */\n      add\n        /* \"#utility.yul\":2112:2150   */\n      tag_298\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":1879:2253   */\n      swap3\n      swap6\n        /* \"#utility.yul\":2102:2150   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2219:2221   */\n      0x40\n        /* \"#utility.yul\":2204:2222   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2191:2223   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1879:2253   */\n      jump\t// out\n        /* \"#utility.yul\":2655:2841   */\n    tag_86:\n        /* \"#utility.yul\":2714:2720   */\n      0x00\n        /* \"#utility.yul\":2767:2769   */\n      0x20\n        /* \"#utility.yul\":2755:2764   */\n      dup3\n        /* \"#utility.yul\":2746:2753   */\n      dup5\n        /* \"#utility.yul\":2742:2765   */\n      sub\n        /* \"#utility.yul\":2738:2770   */\n      slt\n        /* \"#utility.yul\":2735:2787   */\n      iszero\n      tag_319\n      jumpi\n        /* \"#utility.yul\":2783:2784   */\n      0x00\n        /* \"#utility.yul\":2780:2781   */\n      0x00\n        /* \"#utility.yul\":2773:2785   */\n      revert\n        /* \"#utility.yul\":2735:2787   */\n    tag_319:\n        /* \"#utility.yul\":2806:2835   */\n      tag_159\n        /* \"#utility.yul\":2825:2834   */\n      dup3\n        /* \"#utility.yul\":2806:2835   */\n      tag_298\n      jump\t// in\n        /* \"#utility.yul\":2846:3192   */\n    tag_128:\n        /* \"#utility.yul\":2914:2920   */\n      0x00\n        /* \"#utility.yul\":2922:2928   */\n      0x00\n        /* \"#utility.yul\":2975:2977   */\n      0x40\n        /* \"#utility.yul\":2963:2972   */\n      dup4\n        /* \"#utility.yul\":2954:2961   */\n      dup6\n        /* \"#utility.yul\":2950:2973   */\n      sub\n        /* \"#utility.yul\":2946:2978   */\n      slt\n        /* \"#utility.yul\":2943:2995   */\n      iszero\n      tag_322\n      jumpi\n        /* \"#utility.yul\":2991:2992   */\n      0x00\n        /* \"#utility.yul\":2988:2989   */\n      0x00\n        /* \"#utility.yul\":2981:2993   */\n      revert\n        /* \"#utility.yul\":2943:2995   */\n    tag_322:\n      pop\n      pop\n        /* \"#utility.yul\":3036:3059   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":3156:3158   */\n      0x20\n        /* \"#utility.yul\":3141:3159   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":3128:3160   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":2846:3192   */\n      jump\t// out\n        /* \"#utility.yul\":3197:3457   */\n    tag_133:\n        /* \"#utility.yul\":3265:3271   */\n      0x00\n        /* \"#utility.yul\":3273:3279   */\n      0x00\n        /* \"#utility.yul\":3326:3328   */\n      0x40\n        /* \"#utility.yul\":3314:3323   */\n      dup4\n        /* \"#utility.yul\":3305:3312   */\n      dup6\n        /* \"#utility.yul\":3301:3324   */\n      sub\n        /* \"#utility.yul\":3297:3329   */\n      slt\n        /* \"#utility.yul\":3294:3346   */\n      iszero\n      tag_324\n      jumpi\n        /* \"#utility.yul\":3342:3343   */\n      0x00\n        /* \"#utility.yul\":3339:3340   */\n      0x00\n        /* \"#utility.yul\":3332:3344   */\n      revert\n        /* \"#utility.yul\":3294:3346   */\n    tag_324:\n        /* \"#utility.yul\":3365:3394   */\n      tag_325\n        /* \"#utility.yul\":3384:3393   */\n      dup4\n        /* \"#utility.yul\":3365:3394   */\n      tag_298\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":3355:3394   */\n      swap2\n      pop\n        /* \"#utility.yul\":3413:3451   */\n      tag_326\n        /* \"#utility.yul\":3447:3449   */\n      0x20\n        /* \"#utility.yul\":3436:3445   */\n      dup5\n        /* \"#utility.yul\":3432:3450   */\n      add\n        /* \"#utility.yul\":3413:3451   */\n      tag_298\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":3403:3451   */\n      swap1\n      pop\n        /* \"#utility.yul\":3197:3457   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3462:3842   */\n    tag_145:\n        /* \"#utility.yul\":3541:3542   */\n      0x01\n        /* \"#utility.yul\":3537:3549   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":3584:3596   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":3605:3666   */\n      tag_328\n      jumpi\n        /* \"#utility.yul\":3659:3663   */\n      0x7f\n        /* \"#utility.yul\":3651:3657   */\n      dup3\n        /* \"#utility.yul\":3647:3664   */\n      and\n        /* \"#utility.yul\":3637:3664   */\n      swap2\n      pop\n        /* \"#utility.yul\":3605:3666   */\n    tag_328:\n        /* \"#utility.yul\":3712:3714   */\n      0x20\n        /* \"#utility.yul\":3704:3710   */\n      dup3\n        /* \"#utility.yul\":3701:3715   */\n      lt\n        /* \"#utility.yul\":3681:3699   */\n      dup2\n        /* \"#utility.yul\":3678:3716   */\n      sub\n        /* \"#utility.yul\":3675:3836   */\n      tag_329\n      jumpi\n        /* \"#utility.yul\":3758:3768   */\n      0x4e487b71\n        /* \"#utility.yul\":3753:3756   */\n      0xe0\n        /* \"#utility.yul\":3749:3769   */\n      shl\n        /* \"#utility.yul\":3746:3747   */\n      0x00\n        /* \"#utility.yul\":3739:3770   */\n      mstore\n        /* \"#utility.yul\":3793:3797   */\n      0x22\n        /* \"#utility.yul\":3790:3791   */\n      0x04\n        /* \"#utility.yul\":3783:3798   */\n      mstore\n        /* \"#utility.yul\":3821:3825   */\n      0x24\n        /* \"#utility.yul\":3818:3819   */\n      0x00\n        /* \"#utility.yul\":3811:3826   */\n      revert\n        /* \"#utility.yul\":3675:3836   */\n    tag_329:\n      pop\n        /* \"#utility.yul\":3462:3842   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3847:3974   */\n    tag_299:\n        /* \"#utility.yul\":3908:3918   */\n      0x4e487b71\n        /* \"#utility.yul\":3903:3906   */\n      0xe0\n        /* \"#utility.yul\":3899:3919   */\n      shl\n        /* \"#utility.yul\":3896:3897   */\n      0x00\n        /* \"#utility.yul\":3889:3920   */\n      mstore\n        /* \"#utility.yul\":3939:3943   */\n      0x11\n        /* \"#utility.yul\":3936:3937   */\n      0x04\n        /* \"#utility.yul\":3929:3944   */\n      mstore\n        /* \"#utility.yul\":3963:3967   */\n      0x24\n        /* \"#utility.yul\":3960:3961   */\n      0x00\n        /* \"#utility.yul\":3953:3968   */\n      revert\n        /* \"#utility.yul\":3979:4147   */\n    tag_158:\n        /* \"#utility.yul\":4052:4061   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":4083:4092   */\n      dup2\n      iszero\n        /* \"#utility.yul\":4100:4115   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":4094:4116   */\n      dup5\n      eq\n        /* \"#utility.yul\":4080:4117   */\n      or\n        /* \"#utility.yul\":4070:4141   */\n      tag_150\n      jumpi\n        /* \"#utility.yul\":4121:4139   */\n      tag_150\n      tag_299\n      jump\t// in\n        /* \"#utility.yul\":4152:4369   */\n    tag_160:\n        /* \"#utility.yul\":4192:4193   */\n      0x00\n        /* \"#utility.yul\":4218:4219   */\n      dup3\n        /* \"#utility.yul\":4208:4340   */\n      tag_335\n      jumpi\n        /* \"#utility.yul\":4262:4272   */\n      0x4e487b71\n        /* \"#utility.yul\":4257:4260   */\n      0xe0\n        /* \"#utility.yul\":4253:4273   */\n      shl\n        /* \"#utility.yul\":4250:4251   */\n      0x00\n        /* \"#utility.yul\":4243:4274   */\n      mstore\n        /* \"#utility.yul\":4297:4301   */\n      0x12\n        /* \"#utility.yul\":4294:4295   */\n      0x04\n        /* \"#utility.yul\":4287:4302   */\n      mstore\n        /* \"#utility.yul\":4325:4329   */\n      0x24\n        /* \"#utility.yul\":4322:4323   */\n      0x00\n        /* \"#utility.yul\":4315:4330   */\n      revert\n        /* \"#utility.yul\":4208:4340   */\n    tag_335:\n      pop\n        /* \"#utility.yul\":4354:4363   */\n      div\n      swap1\n        /* \"#utility.yul\":4152:4369   */\n      jump\t// out\n        /* \"#utility.yul\":4374:4499   */\n    tag_183:\n        /* \"#utility.yul\":4439:4448   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4460:4470   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":4457:4493   */\n      iszero\n      tag_150\n      jumpi\n        /* \"#utility.yul\":4473:4491   */\n      tag_150\n      tag_299\n      jump\t// in\n        /* \"#utility.yul\":5560:5688   */\n    tag_231:\n        /* \"#utility.yul\":5627:5636   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":5648:5659   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":5645:5682   */\n      iszero\n      tag_150\n      jumpi\n        /* \"#utility.yul\":5662:5680   */\n      tag_150\n      tag_299\n      jump\t// in\n\n    auxdata: 0xa264697066735822122059cf05bc20986ac4dae2d4ad43851b784b3a7454e95a591ef88d1b40a443667e64736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1001": {
									"entryPoint": null,
									"id": 1001,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1180": {
									"entryPoint": null,
									"id": 1180,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 598,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 517,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 654,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_uint256t_addresst_uint256t_uint256_fromMemory": {
									"entryPoint": 948,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1a7d2fe61ea3b46cf063320d3f94ed24f16b3846a0bb57ef7d22b70acf607e4b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d53bdfa93bb7a76d4743ea30578e2dc0750b008d141205debceac8f0891300eb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f632157a5b36b9e6a1b80a3c79c025445cf465bacf92b036da473b170c3d13d0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1406,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1377,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 1095,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 1039,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1357,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1019,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5517:9",
										"nodeType": "YulBlock",
										"src": "0:5517:9",
										"statements": [
											{
												"nativeSrc": "6:3:9",
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "146:500:9",
													"nodeType": "YulBlock",
													"src": "146:500:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "193:16:9",
																"nodeType": "YulBlock",
																"src": "193:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "202:1:9",
																					"nodeType": "YulLiteral",
																					"src": "202:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "205:1:9",
																					"nodeType": "YulLiteral",
																					"src": "205:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "195:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "195:6:9"
																			},
																			"nativeSrc": "195:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "195:12:9"
																		},
																		"nativeSrc": "195:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "195:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "167:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "167:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "176:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "176:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "163:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "163:3:9"
																		},
																		"nativeSrc": "163:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "163:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "188:3:9",
																		"nodeType": "YulLiteral",
																		"src": "188:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "159:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "159:3:9"
																},
																"nativeSrc": "159:33:9",
																"nodeType": "YulFunctionCall",
																"src": "159:33:9"
															},
															"nativeSrc": "156:53:9",
															"nodeType": "YulIf",
															"src": "156:53:9"
														},
														{
															"nativeSrc": "218:14:9",
															"nodeType": "YulVariableDeclaration",
															"src": "218:14:9",
															"value": {
																"kind": "number",
																"nativeSrc": "231:1:9",
																"nodeType": "YulLiteral",
																"src": "231:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "222:5:9",
																	"nodeType": "YulTypedName",
																	"src": "222:5:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "241:25:9",
															"nodeType": "YulAssignment",
															"src": "241:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "256:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "256:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "250:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "250:5:9"
																},
																"nativeSrc": "250:16:9",
																"nodeType": "YulFunctionCall",
																"src": "250:16:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "241:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "241:5:9"
																}
															]
														},
														{
															"nativeSrc": "275:15:9",
															"nodeType": "YulAssignment",
															"src": "275:15:9",
															"value": {
																"name": "value",
																"nativeSrc": "285:5:9",
																"nodeType": "YulIdentifier",
																"src": "285:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "275:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "275:6:9"
																}
															]
														},
														{
															"nativeSrc": "299:40:9",
															"nodeType": "YulVariableDeclaration",
															"src": "299:40:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "324:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "324:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "335:2:9",
																				"nodeType": "YulLiteral",
																				"src": "335:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "320:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "320:3:9"
																		},
																		"nativeSrc": "320:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "320:18:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "314:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "314:5:9"
																},
																"nativeSrc": "314:25:9",
																"nodeType": "YulFunctionCall",
																"src": "314:25:9"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "303:7:9",
																	"nodeType": "YulTypedName",
																	"src": "303:7:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "406:16:9",
																"nodeType": "YulBlock",
																"src": "406:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "415:1:9",
																					"nodeType": "YulLiteral",
																					"src": "415:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "418:1:9",
																					"nodeType": "YulLiteral",
																					"src": "418:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "408:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:9"
																			},
																			"nativeSrc": "408:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "408:12:9"
																		},
																		"nativeSrc": "408:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "408:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nativeSrc": "361:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "361:7:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value_1",
																						"nativeSrc": "374:7:9",
																						"nodeType": "YulIdentifier",
																						"src": "374:7:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "391:3:9",
																										"nodeType": "YulLiteral",
																										"src": "391:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "396:1:9",
																										"nodeType": "YulLiteral",
																										"src": "396:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "387:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "387:3:9"
																								},
																								"nativeSrc": "387:11:9",
																								"nodeType": "YulFunctionCall",
																								"src": "387:11:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "400:1:9",
																								"nodeType": "YulLiteral",
																								"src": "400:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "383:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "383:3:9"
																						},
																						"nativeSrc": "383:19:9",
																						"nodeType": "YulFunctionCall",
																						"src": "383:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "370:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "370:3:9"
																				},
																				"nativeSrc": "370:33:9",
																				"nodeType": "YulFunctionCall",
																				"src": "370:33:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "358:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "358:2:9"
																		},
																		"nativeSrc": "358:46:9",
																		"nodeType": "YulFunctionCall",
																		"src": "358:46:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "351:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "351:6:9"
																},
																"nativeSrc": "351:54:9",
																"nodeType": "YulFunctionCall",
																"src": "351:54:9"
															},
															"nativeSrc": "348:74:9",
															"nodeType": "YulIf",
															"src": "348:74:9"
														},
														{
															"nativeSrc": "431:17:9",
															"nodeType": "YulAssignment",
															"src": "431:17:9",
															"value": {
																"name": "value_1",
																"nativeSrc": "441:7:9",
																"nodeType": "YulIdentifier",
																"src": "441:7:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "431:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "431:6:9"
																}
															]
														},
														{
															"nativeSrc": "457:16:9",
															"nodeType": "YulVariableDeclaration",
															"src": "457:16:9",
															"value": {
																"kind": "number",
																"nativeSrc": "472:1:9",
																"nodeType": "YulLiteral",
																"src": "472:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "461:7:9",
																	"nodeType": "YulTypedName",
																	"src": "461:7:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "482:36:9",
															"nodeType": "YulAssignment",
															"src": "482:36:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "503:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "503:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "514:2:9",
																				"nodeType": "YulLiteral",
																				"src": "514:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "499:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "499:3:9"
																		},
																		"nativeSrc": "499:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "499:18:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "493:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "493:5:9"
																},
																"nativeSrc": "493:25:9",
																"nodeType": "YulFunctionCall",
																"src": "493:25:9"
															},
															"variableNames": [
																{
																	"name": "value_2",
																	"nativeSrc": "482:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "482:7:9"
																}
															]
														},
														{
															"nativeSrc": "527:17:9",
															"nodeType": "YulAssignment",
															"src": "527:17:9",
															"value": {
																"name": "value_2",
																"nativeSrc": "537:7:9",
																"nodeType": "YulIdentifier",
																"src": "537:7:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "527:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "527:6:9"
																}
															]
														},
														{
															"nativeSrc": "553:16:9",
															"nodeType": "YulVariableDeclaration",
															"src": "553:16:9",
															"value": {
																"kind": "number",
																"nativeSrc": "568:1:9",
																"nodeType": "YulLiteral",
																"src": "568:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nativeSrc": "557:7:9",
																	"nodeType": "YulTypedName",
																	"src": "557:7:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "578:36:9",
															"nodeType": "YulAssignment",
															"src": "578:36:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "599:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "599:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "610:2:9",
																				"nodeType": "YulLiteral",
																				"src": "610:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "595:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "595:3:9"
																		},
																		"nativeSrc": "595:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "595:18:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "589:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "589:5:9"
																},
																"nativeSrc": "589:25:9",
																"nodeType": "YulFunctionCall",
																"src": "589:25:9"
															},
															"variableNames": [
																{
																	"name": "value_3",
																	"nativeSrc": "578:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "578:7:9"
																}
															]
														},
														{
															"nativeSrc": "623:17:9",
															"nodeType": "YulAssignment",
															"src": "623:17:9",
															"value": {
																"name": "value_3",
																"nativeSrc": "633:7:9",
																"nodeType": "YulIdentifier",
																"src": "633:7:9"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "623:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "623:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_addresst_uint256t_uint256_fromMemory",
												"nativeSrc": "14:632:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "88:9:9",
														"nodeType": "YulTypedName",
														"src": "88:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "99:7:9",
														"nodeType": "YulTypedName",
														"src": "99:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "111:6:9",
														"nodeType": "YulTypedName",
														"src": "111:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "119:6:9",
														"nodeType": "YulTypedName",
														"src": "119:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "127:6:9",
														"nodeType": "YulTypedName",
														"src": "127:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "135:6:9",
														"nodeType": "YulTypedName",
														"src": "135:6:9",
														"type": ""
													}
												],
												"src": "14:632:9"
											},
											{
												"body": {
													"nativeSrc": "683:95:9",
													"nodeType": "YulBlock",
													"src": "683:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "700:1:9",
																		"nodeType": "YulLiteral",
																		"src": "700:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "707:3:9",
																				"nodeType": "YulLiteral",
																				"src": "707:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "712:10:9",
																				"nodeType": "YulLiteral",
																				"src": "712:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "703:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "703:3:9"
																		},
																		"nativeSrc": "703:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "703:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "693:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "693:6:9"
																},
																"nativeSrc": "693:31:9",
																"nodeType": "YulFunctionCall",
																"src": "693:31:9"
															},
															"nativeSrc": "693:31:9",
															"nodeType": "YulExpressionStatement",
															"src": "693:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "740:1:9",
																		"nodeType": "YulLiteral",
																		"src": "740:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "743:4:9",
																		"nodeType": "YulLiteral",
																		"src": "743:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "733:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "733:6:9"
																},
																"nativeSrc": "733:15:9",
																"nodeType": "YulFunctionCall",
																"src": "733:15:9"
															},
															"nativeSrc": "733:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "733:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "764:1:9",
																		"nodeType": "YulLiteral",
																		"src": "764:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "767:4:9",
																		"nodeType": "YulLiteral",
																		"src": "767:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "757:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "757:6:9"
																},
																"nativeSrc": "757:15:9",
																"nodeType": "YulFunctionCall",
																"src": "757:15:9"
															},
															"nativeSrc": "757:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "757:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "651:127:9",
												"nodeType": "YulFunctionDefinition",
												"src": "651:127:9"
											},
											{
												"body": {
													"nativeSrc": "838:325:9",
													"nodeType": "YulBlock",
													"src": "838:325:9",
													"statements": [
														{
															"nativeSrc": "848:22:9",
															"nodeType": "YulAssignment",
															"src": "848:22:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "862:1:9",
																		"nodeType": "YulLiteral",
																		"src": "862:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "865:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "865:4:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "858:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "858:3:9"
																},
																"nativeSrc": "858:12:9",
																"nodeType": "YulFunctionCall",
																"src": "858:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "848:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "848:6:9"
																}
															]
														},
														{
															"nativeSrc": "879:38:9",
															"nodeType": "YulVariableDeclaration",
															"src": "879:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "909:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "909:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "915:1:9",
																		"nodeType": "YulLiteral",
																		"src": "915:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "905:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "905:3:9"
																},
																"nativeSrc": "905:12:9",
																"nodeType": "YulFunctionCall",
																"src": "905:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "883:18:9",
																	"nodeType": "YulTypedName",
																	"src": "883:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "956:31:9",
																"nodeType": "YulBlock",
																"src": "956:31:9",
																"statements": [
																	{
																		"nativeSrc": "958:27:9",
																		"nodeType": "YulAssignment",
																		"src": "958:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "972:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "972:6:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "980:4:9",
																					"nodeType": "YulLiteral",
																					"src": "980:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "968:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "968:3:9"
																			},
																			"nativeSrc": "968:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "968:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "958:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "958:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "936:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "936:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "929:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "929:6:9"
																},
																"nativeSrc": "929:26:9",
																"nodeType": "YulFunctionCall",
																"src": "929:26:9"
															},
															"nativeSrc": "926:61:9",
															"nodeType": "YulIf",
															"src": "926:61:9"
														},
														{
															"body": {
																"nativeSrc": "1046:111:9",
																"nodeType": "YulBlock",
																"src": "1046:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1067:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1067:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1074:3:9",
																							"nodeType": "YulLiteral",
																							"src": "1074:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1079:10:9",
																							"nodeType": "YulLiteral",
																							"src": "1079:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1070:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "1070:3:9"
																					},
																					"nativeSrc": "1070:20:9",
																					"nodeType": "YulFunctionCall",
																					"src": "1070:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1060:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1060:6:9"
																			},
																			"nativeSrc": "1060:31:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1060:31:9"
																		},
																		"nativeSrc": "1060:31:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1060:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1111:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1111:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1114:4:9",
																					"nodeType": "YulLiteral",
																					"src": "1114:4:9",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1104:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1104:6:9"
																			},
																			"nativeSrc": "1104:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1104:15:9"
																		},
																		"nativeSrc": "1104:15:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1104:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1139:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1139:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1142:4:9",
																					"nodeType": "YulLiteral",
																					"src": "1142:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1132:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1132:6:9"
																			},
																			"nativeSrc": "1132:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1132:15:9"
																		},
																		"nativeSrc": "1132:15:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1132:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1002:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "1002:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1025:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1025:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1033:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1033:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1022:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1022:2:9"
																		},
																		"nativeSrc": "1022:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1022:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "999:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "999:2:9"
																},
																"nativeSrc": "999:38:9",
																"nodeType": "YulFunctionCall",
																"src": "999:38:9"
															},
															"nativeSrc": "996:161:9",
															"nodeType": "YulIf",
															"src": "996:161:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "783:380:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "818:4:9",
														"nodeType": "YulTypedName",
														"src": "818:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "827:6:9",
														"nodeType": "YulTypedName",
														"src": "827:6:9",
														"type": ""
													}
												],
												"src": "783:380:9"
											},
											{
												"body": {
													"nativeSrc": "1224:65:9",
													"nodeType": "YulBlock",
													"src": "1224:65:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1241:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1241:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "1244:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1244:3:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1234:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1234:6:9"
																},
																"nativeSrc": "1234:14:9",
																"nodeType": "YulFunctionCall",
																"src": "1234:14:9"
															},
															"nativeSrc": "1234:14:9",
															"nodeType": "YulExpressionStatement",
															"src": "1234:14:9"
														},
														{
															"nativeSrc": "1257:26:9",
															"nodeType": "YulAssignment",
															"src": "1257:26:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1275:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1275:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1278:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1278:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1265:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "1265:9:9"
																},
																"nativeSrc": "1265:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1265:18:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1257:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1257:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "1168:121:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1207:3:9",
														"nodeType": "YulTypedName",
														"src": "1207:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1215:4:9",
														"nodeType": "YulTypedName",
														"src": "1215:4:9",
														"type": ""
													}
												],
												"src": "1168:121:9"
											},
											{
												"body": {
													"nativeSrc": "1375:437:9",
													"nodeType": "YulBlock",
													"src": "1375:437:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1408:398:9",
																"nodeType": "YulBlock",
																"src": "1408:398:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1429:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1429:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "1432:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "1432:5:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1422:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1422:6:9"
																			},
																			"nativeSrc": "1422:16:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1422:16:9"
																		},
																		"nativeSrc": "1422:16:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1422:16:9"
																	},
																	{
																		"nativeSrc": "1451:30:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1451:30:9",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1473:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1473:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1476:4:9",
																					"nodeType": "YulLiteral",
																					"src": "1476:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "1463:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1463:9:9"
																			},
																			"nativeSrc": "1463:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1463:18:9"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "1455:4:9",
																				"nodeType": "YulTypedName",
																				"src": "1455:4:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1494:57:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1494:57:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1517:4:9",
																					"nodeType": "YulIdentifier",
																					"src": "1517:4:9"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1527:1:9",
																							"nodeType": "YulLiteral",
																							"src": "1527:1:9",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "1534:10:9",
																									"nodeType": "YulIdentifier",
																									"src": "1534:10:9"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1546:2:9",
																									"nodeType": "YulLiteral",
																									"src": "1546:2:9",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1530:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "1530:3:9"
																							},
																							"nativeSrc": "1530:19:9",
																							"nodeType": "YulFunctionCall",
																							"src": "1530:19:9"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1523:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "1523:3:9"
																					},
																					"nativeSrc": "1523:27:9",
																					"nodeType": "YulFunctionCall",
																					"src": "1523:27:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1513:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "1513:3:9"
																			},
																			"nativeSrc": "1513:38:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1513:38:9"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "1498:11:9",
																				"nodeType": "YulTypedName",
																				"src": "1498:11:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1588:23:9",
																			"nodeType": "YulBlock",
																			"src": "1588:23:9",
																			"statements": [
																				{
																					"nativeSrc": "1590:19:9",
																					"nodeType": "YulAssignment",
																					"src": "1590:19:9",
																					"value": {
																						"name": "data",
																						"nativeSrc": "1605:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "1605:4:9"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "1590:11:9",
																							"nodeType": "YulIdentifier",
																							"src": "1590:11:9"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "1570:10:9",
																					"nodeType": "YulIdentifier",
																					"src": "1570:10:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1582:4:9",
																					"nodeType": "YulLiteral",
																					"src": "1582:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1567:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "1567:2:9"
																			},
																			"nativeSrc": "1567:20:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1567:20:9"
																		},
																		"nativeSrc": "1564:47:9",
																		"nodeType": "YulIf",
																		"src": "1564:47:9"
																	},
																	{
																		"nativeSrc": "1624:41:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1624:41:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1638:4:9",
																					"nodeType": "YulIdentifier",
																					"src": "1638:4:9"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1648:1:9",
																							"nodeType": "YulLiteral",
																							"src": "1648:1:9",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1655:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "1655:3:9"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1660:2:9",
																									"nodeType": "YulLiteral",
																									"src": "1660:2:9",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1651:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "1651:3:9"
																							},
																							"nativeSrc": "1651:12:9",
																							"nodeType": "YulFunctionCall",
																							"src": "1651:12:9"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1644:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "1644:3:9"
																					},
																					"nativeSrc": "1644:20:9",
																					"nodeType": "YulFunctionCall",
																					"src": "1644:20:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1634:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "1634:3:9"
																			},
																			"nativeSrc": "1634:31:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1634:31:9"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "1628:2:9",
																				"nodeType": "YulTypedName",
																				"src": "1628:2:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1678:24:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1678:24:9",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1691:11:9",
																			"nodeType": "YulIdentifier",
																			"src": "1691:11:9"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1682:5:9",
																				"nodeType": "YulTypedName",
																				"src": "1682:5:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1776:20:9",
																			"nodeType": "YulBlock",
																			"src": "1776:20:9",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1785:5:9",
																								"nodeType": "YulIdentifier",
																								"src": "1785:5:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1792:1:9",
																								"nodeType": "YulLiteral",
																								"src": "1792:1:9",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1778:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "1778:6:9"
																						},
																						"nativeSrc": "1778:16:9",
																						"nodeType": "YulFunctionCall",
																						"src": "1778:16:9"
																					},
																					"nativeSrc": "1778:16:9",
																					"nodeType": "YulExpressionStatement",
																					"src": "1778:16:9"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1726:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "1726:5:9"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1733:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "1733:2:9"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1723:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "1723:2:9"
																			},
																			"nativeSrc": "1723:13:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1723:13:9"
																		},
																		"nativeSrc": "1715:81:9",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1737:26:9",
																			"nodeType": "YulBlock",
																			"src": "1737:26:9",
																			"statements": [
																				{
																					"nativeSrc": "1739:22:9",
																					"nodeType": "YulAssignment",
																					"src": "1739:22:9",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1752:5:9",
																								"nodeType": "YulIdentifier",
																								"src": "1752:5:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1759:1:9",
																								"nodeType": "YulLiteral",
																								"src": "1759:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1748:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "1748:3:9"
																						},
																						"nativeSrc": "1748:13:9",
																						"nodeType": "YulFunctionCall",
																						"src": "1748:13:9"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1739:5:9",
																							"nodeType": "YulIdentifier",
																							"src": "1739:5:9"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1719:3:9",
																			"nodeType": "YulBlock",
																			"src": "1719:3:9",
																			"statements": []
																		},
																		"src": "1715:81:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "1391:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1391:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1396:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1396:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1388:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1388:2:9"
																},
																"nativeSrc": "1388:11:9",
																"nodeType": "YulFunctionCall",
																"src": "1388:11:9"
															},
															"nativeSrc": "1385:421:9",
															"nodeType": "YulIf",
															"src": "1385:421:9"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "1294:518:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "1347:5:9",
														"nodeType": "YulTypedName",
														"src": "1347:5:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1354:3:9",
														"nodeType": "YulTypedName",
														"src": "1354:3:9",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "1359:10:9",
														"nodeType": "YulTypedName",
														"src": "1359:10:9",
														"type": ""
													}
												],
												"src": "1294:518:9"
											},
											{
												"body": {
													"nativeSrc": "1902:81:9",
													"nodeType": "YulBlock",
													"src": "1902:81:9",
													"statements": [
														{
															"nativeSrc": "1912:65:9",
															"nodeType": "YulAssignment",
															"src": "1912:65:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1927:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "1927:4:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1945:1:9",
																										"nodeType": "YulLiteral",
																										"src": "1945:1:9",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1948:3:9",
																										"nodeType": "YulIdentifier",
																										"src": "1948:3:9"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1941:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "1941:3:9"
																								},
																								"nativeSrc": "1941:11:9",
																								"nodeType": "YulFunctionCall",
																								"src": "1941:11:9"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1958:1:9",
																										"nodeType": "YulLiteral",
																										"src": "1958:1:9",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1954:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "1954:3:9"
																								},
																								"nativeSrc": "1954:6:9",
																								"nodeType": "YulFunctionCall",
																								"src": "1954:6:9"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1937:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "1937:3:9"
																						},
																						"nativeSrc": "1937:24:9",
																						"nodeType": "YulFunctionCall",
																						"src": "1937:24:9"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1933:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1933:3:9"
																				},
																				"nativeSrc": "1933:29:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1933:29:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1923:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1923:3:9"
																		},
																		"nativeSrc": "1923:40:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1923:40:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1969:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1969:1:9",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1972:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "1972:3:9"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1965:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1965:3:9"
																		},
																		"nativeSrc": "1965:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1965:11:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1920:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1920:2:9"
																},
																"nativeSrc": "1920:57:9",
																"nodeType": "YulFunctionCall",
																"src": "1920:57:9"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1912:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1912:4:9"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1817:166:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1879:4:9",
														"nodeType": "YulTypedName",
														"src": "1879:4:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1885:3:9",
														"nodeType": "YulTypedName",
														"src": "1885:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1893:4:9",
														"nodeType": "YulTypedName",
														"src": "1893:4:9",
														"type": ""
													}
												],
												"src": "1817:166:9"
											},
											{
												"body": {
													"nativeSrc": "2084:1203:9",
													"nodeType": "YulBlock",
													"src": "2084:1203:9",
													"statements": [
														{
															"nativeSrc": "2094:24:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2094:24:9",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2114:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2114:3:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2108:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2108:5:9"
																},
																"nativeSrc": "2108:10:9",
																"nodeType": "YulFunctionCall",
																"src": "2108:10:9"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "2098:6:9",
																	"nodeType": "YulTypedName",
																	"src": "2098:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2161:22:9",
																"nodeType": "YulBlock",
																"src": "2161:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2163:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "2163:16:9"
																			},
																			"nativeSrc": "2163:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2163:18:9"
																		},
																		"nativeSrc": "2163:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2163:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2133:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2133:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2149:2:9",
																						"nodeType": "YulLiteral",
																						"src": "2149:2:9",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2153:1:9",
																						"nodeType": "YulLiteral",
																						"src": "2153:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2145:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2145:3:9"
																				},
																				"nativeSrc": "2145:10:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:10:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2157:1:9",
																				"nodeType": "YulLiteral",
																				"src": "2157:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2141:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2141:3:9"
																		},
																		"nativeSrc": "2141:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2141:18:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2130:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "2130:2:9"
																},
																"nativeSrc": "2130:30:9",
																"nodeType": "YulFunctionCall",
																"src": "2130:30:9"
															},
															"nativeSrc": "2127:56:9",
															"nodeType": "YulIf",
															"src": "2127:56:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2236:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "2236:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2274:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "2274:4:9"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2268:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "2268:5:9"
																				},
																				"nativeSrc": "2268:11:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2268:11:9"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "2242:25:9",
																			"nodeType": "YulIdentifier",
																			"src": "2242:25:9"
																		},
																		"nativeSrc": "2242:38:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2242:38:9"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "2282:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2282:6:9"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "2192:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "2192:43:9"
																},
																"nativeSrc": "2192:97:9",
																"nodeType": "YulFunctionCall",
																"src": "2192:97:9"
															},
															"nativeSrc": "2192:97:9",
															"nodeType": "YulExpressionStatement",
															"src": "2192:97:9"
														},
														{
															"nativeSrc": "2298:18:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2298:18:9",
															"value": {
																"kind": "number",
																"nativeSrc": "2315:1:9",
																"nodeType": "YulLiteral",
																"src": "2315:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2302:9:9",
																	"nodeType": "YulTypedName",
																	"src": "2302:9:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2325:17:9",
															"nodeType": "YulAssignment",
															"src": "2325:17:9",
															"value": {
																"kind": "number",
																"nativeSrc": "2338:4:9",
																"nodeType": "YulLiteral",
																"src": "2338:4:9",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2325:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "2325:9:9"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "2388:642:9",
																		"nodeType": "YulBlock",
																		"src": "2388:642:9",
																		"statements": [
																			{
																				"nativeSrc": "2402:35:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2402:35:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "2421:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "2421:6:9"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "2433:2:9",
																									"nodeType": "YulLiteral",
																									"src": "2433:2:9",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "2429:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "2429:3:9"
																							},
																							"nativeSrc": "2429:7:9",
																							"nodeType": "YulFunctionCall",
																							"src": "2429:7:9"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "2417:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "2417:3:9"
																					},
																					"nativeSrc": "2417:20:9",
																					"nodeType": "YulFunctionCall",
																					"src": "2417:20:9"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "2406:7:9",
																						"nodeType": "YulTypedName",
																						"src": "2406:7:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2450:49:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2450:49:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2494:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "2494:4:9"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "2464:29:9",
																						"nodeType": "YulIdentifier",
																						"src": "2464:29:9"
																					},
																					"nativeSrc": "2464:35:9",
																					"nodeType": "YulFunctionCall",
																					"src": "2464:35:9"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "2454:6:9",
																						"nodeType": "YulTypedName",
																						"src": "2454:6:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2512:10:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2512:10:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2521:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2521:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "2516:1:9",
																						"nodeType": "YulTypedName",
																						"src": "2516:1:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2592:165:9",
																					"nodeType": "YulBlock",
																					"src": "2592:165:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2617:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "2617:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2635:3:9",
																														"nodeType": "YulIdentifier",
																														"src": "2635:3:9"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2640:9:9",
																														"nodeType": "YulIdentifier",
																														"src": "2640:9:9"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2631:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "2631:3:9"
																												},
																												"nativeSrc": "2631:19:9",
																												"nodeType": "YulFunctionCall",
																												"src": "2631:19:9"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2625:5:9",
																											"nodeType": "YulIdentifier",
																											"src": "2625:5:9"
																										},
																										"nativeSrc": "2625:26:9",
																										"nodeType": "YulFunctionCall",
																										"src": "2625:26:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2610:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "2610:6:9"
																								},
																								"nativeSrc": "2610:42:9",
																								"nodeType": "YulFunctionCall",
																								"src": "2610:42:9"
																							},
																							"nativeSrc": "2610:42:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "2610:42:9"
																						},
																						{
																							"nativeSrc": "2669:24:9",
																							"nodeType": "YulAssignment",
																							"src": "2669:24:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2683:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "2683:6:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2691:1:9",
																										"nodeType": "YulLiteral",
																										"src": "2691:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2679:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "2679:3:9"
																								},
																								"nativeSrc": "2679:14:9",
																								"nodeType": "YulFunctionCall",
																								"src": "2679:14:9"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2669:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "2669:6:9"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2710:33:9",
																							"nodeType": "YulAssignment",
																							"src": "2710:33:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2727:9:9",
																										"nodeType": "YulIdentifier",
																										"src": "2727:9:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2738:4:9",
																										"nodeType": "YulLiteral",
																										"src": "2738:4:9",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2723:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "2723:3:9"
																								},
																								"nativeSrc": "2723:20:9",
																								"nodeType": "YulFunctionCall",
																								"src": "2723:20:9"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2710:9:9",
																									"nodeType": "YulIdentifier",
																									"src": "2710:9:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "2546:1:9",
																							"nodeType": "YulIdentifier",
																							"src": "2546:1:9"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2549:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "2549:7:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2543:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "2543:2:9"
																					},
																					"nativeSrc": "2543:14:9",
																					"nodeType": "YulFunctionCall",
																					"src": "2543:14:9"
																				},
																				"nativeSrc": "2535:222:9",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "2558:21:9",
																					"nodeType": "YulBlock",
																					"src": "2558:21:9",
																					"statements": [
																						{
																							"nativeSrc": "2560:17:9",
																							"nodeType": "YulAssignment",
																							"src": "2560:17:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "2569:1:9",
																										"nodeType": "YulIdentifier",
																										"src": "2569:1:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2572:4:9",
																										"nodeType": "YulLiteral",
																										"src": "2572:4:9",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2565:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "2565:3:9"
																								},
																								"nativeSrc": "2565:12:9",
																								"nodeType": "YulFunctionCall",
																								"src": "2565:12:9"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "2560:1:9",
																									"nodeType": "YulIdentifier",
																									"src": "2560:1:9"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "2539:3:9",
																					"nodeType": "YulBlock",
																					"src": "2539:3:9",
																					"statements": []
																				},
																				"src": "2535:222:9"
																			},
																			{
																				"body": {
																					"nativeSrc": "2805:166:9",
																					"nodeType": "YulBlock",
																					"src": "2805:166:9",
																					"statements": [
																						{
																							"nativeSrc": "2823:43:9",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2823:43:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2850:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "2850:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2855:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "2855:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2846:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "2846:3:9"
																										},
																										"nativeSrc": "2846:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "2846:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2840:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "2840:5:9"
																								},
																								"nativeSrc": "2840:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "2840:26:9"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2827:9:9",
																									"nodeType": "YulTypedName",
																									"src": "2827:9:9",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2890:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "2890:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2902:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "2902:9:9"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2929:1:9",
																																				"nodeType": "YulLiteral",
																																				"src": "2929:1:9",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2932:6:9",
																																				"nodeType": "YulIdentifier",
																																				"src": "2932:6:9"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2925:3:9",
																																			"nodeType": "YulIdentifier",
																																			"src": "2925:3:9"
																																		},
																																		"nativeSrc": "2925:14:9",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2925:14:9"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2941:3:9",
																																		"nodeType": "YulLiteral",
																																		"src": "2941:3:9",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2921:3:9",
																																	"nodeType": "YulIdentifier",
																																	"src": "2921:3:9"
																																},
																																"nativeSrc": "2921:24:9",
																																"nodeType": "YulFunctionCall",
																																"src": "2921:24:9"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2951:1:9",
																																		"nodeType": "YulLiteral",
																																		"src": "2951:1:9",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2947:3:9",
																																	"nodeType": "YulIdentifier",
																																	"src": "2947:3:9"
																																},
																																"nativeSrc": "2947:6:9",
																																"nodeType": "YulFunctionCall",
																																"src": "2947:6:9"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2917:3:9",
																															"nodeType": "YulIdentifier",
																															"src": "2917:3:9"
																														},
																														"nativeSrc": "2917:37:9",
																														"nodeType": "YulFunctionCall",
																														"src": "2917:37:9"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2913:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "2913:3:9"
																												},
																												"nativeSrc": "2913:42:9",
																												"nodeType": "YulFunctionCall",
																												"src": "2913:42:9"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2898:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "2898:3:9"
																										},
																										"nativeSrc": "2898:58:9",
																										"nodeType": "YulFunctionCall",
																										"src": "2898:58:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2883:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "2883:6:9"
																								},
																								"nativeSrc": "2883:74:9",
																								"nodeType": "YulFunctionCall",
																								"src": "2883:74:9"
																							},
																							"nativeSrc": "2883:74:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "2883:74:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2776:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "2776:7:9"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2785:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "2785:6:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2773:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "2773:2:9"
																					},
																					"nativeSrc": "2773:19:9",
																					"nodeType": "YulFunctionCall",
																					"src": "2773:19:9"
																				},
																				"nativeSrc": "2770:201:9",
																				"nodeType": "YulIf",
																				"src": "2770:201:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2991:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "2991:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "3005:1:9",
																											"nodeType": "YulLiteral",
																											"src": "3005:1:9",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "3008:6:9",
																											"nodeType": "YulIdentifier",
																											"src": "3008:6:9"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "3001:3:9",
																										"nodeType": "YulIdentifier",
																										"src": "3001:3:9"
																									},
																									"nativeSrc": "3001:14:9",
																									"nodeType": "YulFunctionCall",
																									"src": "3001:14:9"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3017:1:9",
																									"nodeType": "YulLiteral",
																									"src": "3017:1:9",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2997:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "2997:3:9"
																							},
																							"nativeSrc": "2997:22:9",
																							"nodeType": "YulFunctionCall",
																							"src": "2997:22:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2984:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2984:6:9"
																					},
																					"nativeSrc": "2984:36:9",
																					"nodeType": "YulFunctionCall",
																					"src": "2984:36:9"
																				},
																				"nativeSrc": "2984:36:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "2984:36:9"
																			}
																		]
																	},
																	"nativeSrc": "2381:649:9",
																	"nodeType": "YulCase",
																	"src": "2381:649:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2386:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2386:1:9",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3047:234:9",
																		"nodeType": "YulBlock",
																		"src": "3047:234:9",
																		"statements": [
																			{
																				"nativeSrc": "3061:14:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3061:14:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3074:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3074:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "3065:5:9",
																						"nodeType": "YulTypedName",
																						"src": "3065:5:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3110:67:9",
																					"nodeType": "YulBlock",
																					"src": "3110:67:9",
																					"statements": [
																						{
																							"nativeSrc": "3128:35:9",
																							"nodeType": "YulAssignment",
																							"src": "3128:35:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3147:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "3147:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3152:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "3152:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3143:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "3143:3:9"
																										},
																										"nativeSrc": "3143:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "3143:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3137:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "3137:5:9"
																								},
																								"nativeSrc": "3137:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "3137:26:9"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "3128:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "3128:5:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "3091:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "3091:6:9"
																				},
																				"nativeSrc": "3088:89:9",
																				"nodeType": "YulIf",
																				"src": "3088:89:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3197:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "3197:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "3256:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "3256:5:9"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "3263:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "3263:6:9"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "3203:52:9",
																								"nodeType": "YulIdentifier",
																								"src": "3203:52:9"
																							},
																							"nativeSrc": "3203:67:9",
																							"nodeType": "YulFunctionCall",
																							"src": "3203:67:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3190:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "3190:6:9"
																					},
																					"nativeSrc": "3190:81:9",
																					"nodeType": "YulFunctionCall",
																					"src": "3190:81:9"
																				},
																				"nativeSrc": "3190:81:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "3190:81:9"
																			}
																		]
																	},
																	"nativeSrc": "3039:242:9",
																	"nodeType": "YulCase",
																	"src": "3039:242:9",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2361:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2361:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2369:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2369:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2358:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "2358:2:9"
																},
																"nativeSrc": "2358:14:9",
																"nodeType": "YulFunctionCall",
																"src": "2358:14:9"
															},
															"nativeSrc": "2351:930:9",
															"nodeType": "YulSwitch",
															"src": "2351:930:9"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1988:1299:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2069:4:9",
														"nodeType": "YulTypedName",
														"src": "2069:4:9",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "2075:3:9",
														"nodeType": "YulTypedName",
														"src": "2075:3:9",
														"type": ""
													}
												],
												"src": "1988:1299:9"
											},
											{
												"body": {
													"nativeSrc": "3393:102:9",
													"nodeType": "YulBlock",
													"src": "3393:102:9",
													"statements": [
														{
															"nativeSrc": "3403:26:9",
															"nodeType": "YulAssignment",
															"src": "3403:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3415:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3415:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3426:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3426:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3411:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3411:3:9"
																},
																"nativeSrc": "3411:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3411:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3403:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3403:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3445:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3445:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3460:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3460:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3476:3:9",
																								"nodeType": "YulLiteral",
																								"src": "3476:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3481:1:9",
																								"nodeType": "YulLiteral",
																								"src": "3481:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3472:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "3472:3:9"
																						},
																						"nativeSrc": "3472:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "3472:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3485:1:9",
																						"nodeType": "YulLiteral",
																						"src": "3485:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3468:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3468:3:9"
																				},
																				"nativeSrc": "3468:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3468:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3456:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3456:3:9"
																		},
																		"nativeSrc": "3456:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3456:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3438:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3438:6:9"
																},
																"nativeSrc": "3438:51:9",
																"nodeType": "YulFunctionCall",
																"src": "3438:51:9"
															},
															"nativeSrc": "3438:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "3438:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3292:203:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3362:9:9",
														"nodeType": "YulTypedName",
														"src": "3362:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3373:6:9",
														"nodeType": "YulTypedName",
														"src": "3373:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3384:4:9",
														"nodeType": "YulTypedName",
														"src": "3384:4:9",
														"type": ""
													}
												],
												"src": "3292:203:9"
											},
											{
												"body": {
													"nativeSrc": "3674:181:9",
													"nodeType": "YulBlock",
													"src": "3674:181:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3691:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3691:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3702:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3702:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3684:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3684:6:9"
																},
																"nativeSrc": "3684:21:9",
																"nodeType": "YulFunctionCall",
																"src": "3684:21:9"
															},
															"nativeSrc": "3684:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "3684:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3725:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3725:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3736:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3736:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3721:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3721:3:9"
																		},
																		"nativeSrc": "3721:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3721:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3741:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3741:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3714:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3714:6:9"
																},
																"nativeSrc": "3714:30:9",
																"nodeType": "YulFunctionCall",
																"src": "3714:30:9"
															},
															"nativeSrc": "3714:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "3714:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3764:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3764:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3775:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3775:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3760:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3760:3:9"
																		},
																		"nativeSrc": "3760:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3760:18:9"
																	},
																	{
																		"hexValue": "48616c76696e6720726174652063616e6e6f74206578636565642031303025",
																		"kind": "string",
																		"nativeSrc": "3780:33:9",
																		"nodeType": "YulLiteral",
																		"src": "3780:33:9",
																		"type": "",
																		"value": "Halving rate cannot exceed 100%"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3753:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3753:6:9"
																},
																"nativeSrc": "3753:61:9",
																"nodeType": "YulFunctionCall",
																"src": "3753:61:9"
															},
															"nativeSrc": "3753:61:9",
															"nodeType": "YulExpressionStatement",
															"src": "3753:61:9"
														},
														{
															"nativeSrc": "3823:26:9",
															"nodeType": "YulAssignment",
															"src": "3823:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3835:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3835:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3846:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3846:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3831:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3831:3:9"
																},
																"nativeSrc": "3831:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3831:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3823:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3823:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d53bdfa93bb7a76d4743ea30578e2dc0750b008d141205debceac8f0891300eb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3500:355:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3651:9:9",
														"nodeType": "YulTypedName",
														"src": "3651:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3665:4:9",
														"nodeType": "YulTypedName",
														"src": "3665:4:9",
														"type": ""
													}
												],
												"src": "3500:355:9"
											},
											{
												"body": {
													"nativeSrc": "4034:168:9",
													"nodeType": "YulBlock",
													"src": "4034:168:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4051:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4051:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4062:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4062:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4044:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4044:6:9"
																},
																"nativeSrc": "4044:21:9",
																"nodeType": "YulFunctionCall",
																"src": "4044:21:9"
															},
															"nativeSrc": "4044:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "4044:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4085:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4085:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4096:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4096:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4081:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4081:3:9"
																		},
																		"nativeSrc": "4081:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4081:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4101:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4101:2:9",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4074:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4074:6:9"
																},
																"nativeSrc": "4074:30:9",
																"nodeType": "YulFunctionCall",
																"src": "4074:30:9"
															},
															"nativeSrc": "4074:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "4074:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4124:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4124:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4135:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4135:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4120:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4120:3:9"
																		},
																		"nativeSrc": "4120:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4120:18:9"
																	},
																	{
																		"hexValue": "496e74657276616c20746f6f2073686f7274",
																		"kind": "string",
																		"nativeSrc": "4140:20:9",
																		"nodeType": "YulLiteral",
																		"src": "4140:20:9",
																		"type": "",
																		"value": "Interval too short"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4113:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4113:6:9"
																},
																"nativeSrc": "4113:48:9",
																"nodeType": "YulFunctionCall",
																"src": "4113:48:9"
															},
															"nativeSrc": "4113:48:9",
															"nodeType": "YulExpressionStatement",
															"src": "4113:48:9"
														},
														{
															"nativeSrc": "4170:26:9",
															"nodeType": "YulAssignment",
															"src": "4170:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4182:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4182:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4193:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4178:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4178:3:9"
																},
																"nativeSrc": "4178:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4178:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4170:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4170:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1a7d2fe61ea3b46cf063320d3f94ed24f16b3846a0bb57ef7d22b70acf607e4b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3860:342:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4011:9:9",
														"nodeType": "YulTypedName",
														"src": "4011:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4025:4:9",
														"nodeType": "YulTypedName",
														"src": "4025:4:9",
														"type": ""
													}
												],
												"src": "3860:342:9"
											},
											{
												"body": {
													"nativeSrc": "4239:95:9",
													"nodeType": "YulBlock",
													"src": "4239:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4256:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4256:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4263:3:9",
																				"nodeType": "YulLiteral",
																				"src": "4263:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4268:10:9",
																				"nodeType": "YulLiteral",
																				"src": "4268:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "4259:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4259:3:9"
																		},
																		"nativeSrc": "4259:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4259:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4249:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4249:6:9"
																},
																"nativeSrc": "4249:31:9",
																"nodeType": "YulFunctionCall",
																"src": "4249:31:9"
															},
															"nativeSrc": "4249:31:9",
															"nodeType": "YulExpressionStatement",
															"src": "4249:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4296:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4296:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4299:4:9",
																		"nodeType": "YulLiteral",
																		"src": "4299:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4289:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4289:6:9"
																},
																"nativeSrc": "4289:15:9",
																"nodeType": "YulFunctionCall",
																"src": "4289:15:9"
															},
															"nativeSrc": "4289:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "4289:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4320:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4320:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4323:4:9",
																		"nodeType": "YulLiteral",
																		"src": "4323:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4313:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4313:6:9"
																},
																"nativeSrc": "4313:15:9",
																"nodeType": "YulFunctionCall",
																"src": "4313:15:9"
															},
															"nativeSrc": "4313:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "4313:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4207:127:9",
												"nodeType": "YulFunctionDefinition",
												"src": "4207:127:9"
											},
											{
												"body": {
													"nativeSrc": "4391:116:9",
													"nodeType": "YulBlock",
													"src": "4391:116:9",
													"statements": [
														{
															"nativeSrc": "4401:20:9",
															"nodeType": "YulAssignment",
															"src": "4401:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4416:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "4416:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4419:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "4419:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4412:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4412:3:9"
																},
																"nativeSrc": "4412:9:9",
																"nodeType": "YulFunctionCall",
																"src": "4412:9:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "4401:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "4401:7:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4479:22:9",
																"nodeType": "YulBlock",
																"src": "4479:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4481:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "4481:16:9"
																			},
																			"nativeSrc": "4481:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4481:18:9"
																		},
																		"nativeSrc": "4481:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4481:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "4450:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "4450:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4443:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "4443:6:9"
																				},
																				"nativeSrc": "4443:9:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4443:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "4457:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "4457:1:9"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "4464:7:9",
																								"nodeType": "YulIdentifier",
																								"src": "4464:7:9"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "4473:1:9",
																								"nodeType": "YulIdentifier",
																								"src": "4473:1:9"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "4460:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "4460:3:9"
																						},
																						"nativeSrc": "4460:15:9",
																						"nodeType": "YulFunctionCall",
																						"src": "4460:15:9"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "4454:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "4454:2:9"
																				},
																				"nativeSrc": "4454:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4454:22:9"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "4440:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "4440:2:9"
																		},
																		"nativeSrc": "4440:37:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4440:37:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4433:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4433:6:9"
																},
																"nativeSrc": "4433:45:9",
																"nodeType": "YulFunctionCall",
																"src": "4433:45:9"
															},
															"nativeSrc": "4430:71:9",
															"nodeType": "YulIf",
															"src": "4430:71:9"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "4339:168:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4370:1:9",
														"nodeType": "YulTypedName",
														"src": "4370:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4373:1:9",
														"nodeType": "YulTypedName",
														"src": "4373:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "4379:7:9",
														"nodeType": "YulTypedName",
														"src": "4379:7:9",
														"type": ""
													}
												],
												"src": "4339:168:9"
											},
											{
												"body": {
													"nativeSrc": "4686:167:9",
													"nodeType": "YulBlock",
													"src": "4686:167:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4703:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4703:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4714:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4714:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4696:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4696:6:9"
																},
																"nativeSrc": "4696:21:9",
																"nodeType": "YulFunctionCall",
																"src": "4696:21:9"
															},
															"nativeSrc": "4696:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "4696:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4737:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4737:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4748:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4748:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4733:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4733:3:9"
																		},
																		"nativeSrc": "4733:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4733:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4753:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4753:2:9",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4726:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4726:6:9"
																},
																"nativeSrc": "4726:30:9",
																"nodeType": "YulFunctionCall",
																"src": "4726:30:9"
															},
															"nativeSrc": "4726:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "4726:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4776:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4776:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4787:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4787:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4772:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4772:3:9"
																		},
																		"nativeSrc": "4772:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4772:18:9"
																	},
																	{
																		"hexValue": "496e74657276616c20746f6f206c6f6e67",
																		"kind": "string",
																		"nativeSrc": "4792:19:9",
																		"nodeType": "YulLiteral",
																		"src": "4792:19:9",
																		"type": "",
																		"value": "Interval too long"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4765:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4765:6:9"
																},
																"nativeSrc": "4765:47:9",
																"nodeType": "YulFunctionCall",
																"src": "4765:47:9"
															},
															"nativeSrc": "4765:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "4765:47:9"
														},
														{
															"nativeSrc": "4821:26:9",
															"nodeType": "YulAssignment",
															"src": "4821:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4833:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4833:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4844:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4844:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4829:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4829:3:9"
																},
																"nativeSrc": "4829:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4829:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4821:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4821:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f632157a5b36b9e6a1b80a3c79c025445cf465bacf92b036da473b170c3d13d0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4512:341:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4663:9:9",
														"nodeType": "YulTypedName",
														"src": "4663:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4677:4:9",
														"nodeType": "YulTypedName",
														"src": "4677:4:9",
														"type": ""
													}
												],
												"src": "4512:341:9"
											},
											{
												"body": {
													"nativeSrc": "4906:77:9",
													"nodeType": "YulBlock",
													"src": "4906:77:9",
													"statements": [
														{
															"nativeSrc": "4916:16:9",
															"nodeType": "YulAssignment",
															"src": "4916:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4927:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "4927:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4930:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "4930:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4923:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4923:3:9"
																},
																"nativeSrc": "4923:9:9",
																"nodeType": "YulFunctionCall",
																"src": "4923:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4916:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4916:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4955:22:9",
																"nodeType": "YulBlock",
																"src": "4955:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4957:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "4957:16:9"
																			},
																			"nativeSrc": "4957:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4957:18:9"
																		},
																		"nativeSrc": "4957:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4957:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4947:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "4947:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4950:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4950:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4944:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "4944:2:9"
																},
																"nativeSrc": "4944:10:9",
																"nodeType": "YulFunctionCall",
																"src": "4944:10:9"
															},
															"nativeSrc": "4941:36:9",
															"nodeType": "YulIf",
															"src": "4941:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4858:125:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4889:1:9",
														"nodeType": "YulTypedName",
														"src": "4889:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4892:1:9",
														"nodeType": "YulTypedName",
														"src": "4892:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4898:3:9",
														"nodeType": "YulTypedName",
														"src": "4898:3:9",
														"type": ""
													}
												],
												"src": "4858:125:9"
											},
											{
												"body": {
													"nativeSrc": "5145:188:9",
													"nodeType": "YulBlock",
													"src": "5145:188:9",
													"statements": [
														{
															"nativeSrc": "5155:26:9",
															"nodeType": "YulAssignment",
															"src": "5155:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5167:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5167:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5178:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5178:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5163:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5163:3:9"
																},
																"nativeSrc": "5163:18:9",
																"nodeType": "YulFunctionCall",
																"src": "5163:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5155:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5155:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5197:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5197:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5212:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "5212:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5228:3:9",
																								"nodeType": "YulLiteral",
																								"src": "5228:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5233:1:9",
																								"nodeType": "YulLiteral",
																								"src": "5233:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5224:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "5224:3:9"
																						},
																						"nativeSrc": "5224:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "5224:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5237:1:9",
																						"nodeType": "YulLiteral",
																						"src": "5237:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5220:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5220:3:9"
																				},
																				"nativeSrc": "5220:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5220:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5208:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5208:3:9"
																		},
																		"nativeSrc": "5208:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5208:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5190:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5190:6:9"
																},
																"nativeSrc": "5190:51:9",
																"nodeType": "YulFunctionCall",
																"src": "5190:51:9"
															},
															"nativeSrc": "5190:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "5190:51:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5261:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5261:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5272:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5272:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5257:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5257:3:9"
																		},
																		"nativeSrc": "5257:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5257:18:9"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5277:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5277:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5250:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5250:6:9"
																},
																"nativeSrc": "5250:34:9",
																"nodeType": "YulFunctionCall",
																"src": "5250:34:9"
															},
															"nativeSrc": "5250:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "5250:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5304:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5304:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5315:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5315:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5300:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5300:3:9"
																		},
																		"nativeSrc": "5300:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5300:18:9"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "5320:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5320:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5293:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5293:6:9"
																},
																"nativeSrc": "5293:34:9",
																"nodeType": "YulFunctionCall",
																"src": "5293:34:9"
															},
															"nativeSrc": "5293:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "5293:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "4988:345:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5098:9:9",
														"nodeType": "YulTypedName",
														"src": "5098:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5109:6:9",
														"nodeType": "YulTypedName",
														"src": "5109:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5117:6:9",
														"nodeType": "YulTypedName",
														"src": "5117:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5125:6:9",
														"nodeType": "YulTypedName",
														"src": "5125:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5136:4:9",
														"nodeType": "YulTypedName",
														"src": "5136:4:9",
														"type": ""
													}
												],
												"src": "4988:345:9"
											},
											{
												"body": {
													"nativeSrc": "5439:76:9",
													"nodeType": "YulBlock",
													"src": "5439:76:9",
													"statements": [
														{
															"nativeSrc": "5449:26:9",
															"nodeType": "YulAssignment",
															"src": "5449:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5461:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5461:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5472:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5472:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5457:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5457:3:9"
																},
																"nativeSrc": "5457:18:9",
																"nodeType": "YulFunctionCall",
																"src": "5457:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5449:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5449:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5491:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5491:9:9"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "5502:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5502:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5484:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5484:6:9"
																},
																"nativeSrc": "5484:25:9",
																"nodeType": "YulFunctionCall",
																"src": "5484:25:9"
															},
															"nativeSrc": "5484:25:9",
															"nodeType": "YulExpressionStatement",
															"src": "5484:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5338:177:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5408:9:9",
														"nodeType": "YulTypedName",
														"src": "5408:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5419:6:9",
														"nodeType": "YulTypedName",
														"src": "5419:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5430:4:9",
														"nodeType": "YulTypedName",
														"src": "5430:4:9",
														"type": ""
													}
												],
												"src": "5338:177:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256t_addresst_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := 0\n        value := mload(headStart)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        if iszero(eq(value_1, and(value_1, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value1 := value_1\n        let value_2 := 0\n        value_2 := mload(add(headStart, 64))\n        value2 := value_2\n        let value_3 := 0\n        value_3 := mload(add(headStart, 96))\n        value3 := value_3\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_d53bdfa93bb7a76d4743ea30578e2dc0750b008d141205debceac8f0891300eb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Halving rate cannot exceed 100%\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1a7d2fe61ea3b46cf063320d3f94ed24f16b3846a0bb57ef7d22b70acf607e4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Interval too short\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_f632157a5b36b9e6a1b80a3c79c025445cf465bacf92b036da473b170c3d13d0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Interval too long\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x13FE CODESIZE SUB DUP1 PUSH2 0x13FE DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0x3B4 JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0x436172646569726F PUSH1 0xC0 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x10D115 PUSH1 0xEA SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x7B SWAP2 SWAP1 PUSH2 0x493 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x88 DUP3 DUP3 PUSH2 0x493 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC2 DUP2 PUSH2 0x205 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x6 SSTORE PUSH1 0x64 DUP2 GT ISZERO PUSH2 0x119 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x48616C76696E6720726174652063616E6E6F7420657863656564203130302500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB0 JUMP JUMPDEST PUSH3 0x15180 DUP3 LT ISZERO PUSH2 0x161 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B9D195C9D985B081D1BDBC81CDA1BDC9D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB0 JUMP JUMPDEST PUSH3 0x15180 PUSH2 0x172 PUSH2 0x16D PUSH1 0x2 PUSH2 0x561 JUMP JUMPDEST PUSH2 0x17C SWAP2 SWAP1 PUSH2 0x561 JUMP JUMPDEST PUSH2 0x187 SWAP1 PUSH1 0x2 PUSH2 0x561 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x1CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E74657276616C20746F6F206C6F6E67 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB0 JUMP JUMPDEST PUSH2 0x1D4 CALLER DUP6 PUSH2 0x256 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x8 SSTORE PUSH1 0xA SSTORE POP TIMESTAMP PUSH1 0x9 SSTORE PUSH2 0x591 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x27F JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB0 JUMP JUMPDEST PUSH2 0x28A PUSH0 DUP4 DUP4 PUSH2 0x28E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2B8 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x57E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x328 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x30A JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0xB0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x344 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x362 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x3A7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3C7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP5 MLOAD PUSH1 0x20 DUP7 ADD MLOAD SWAP1 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3E5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x40 DUP7 ADD MLOAD PUSH1 0x60 SWAP1 SWAP7 ADD MLOAD SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x423 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x441 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x48E JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x46C JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x48B JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x478 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4AC JUMPI PUSH2 0x4AC PUSH2 0x3FB JUMP JUMPDEST PUSH2 0x4C0 DUP2 PUSH2 0x4BA DUP5 SLOAD PUSH2 0x40F JUMP JUMPDEST DUP5 PUSH2 0x447 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4F2 JUMPI PUSH0 DUP4 ISZERO PUSH2 0x4DB JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x48B JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x521 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x501 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x53E JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x578 JUMPI PUSH2 0x578 PUSH2 0x54D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x578 JUMPI PUSH2 0x578 PUSH2 0x54D JUMP JUMPDEST PUSH2 0xE60 DUP1 PUSH2 0x59E PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x143 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x768A4173 GT PUSH2 0xB5 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x40B JUMPI DUP1 PUSH4 0xBBB0B1A6 EQ PUSH2 0x42A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x449 JUMPI DUP1 PUSH4 0xED299016 EQ PUSH2 0x48D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4A1 JUMPI PUSH2 0x191 JUMP JUMPDEST DUP1 PUSH4 0x768A4173 EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0x7E6335F4 EQ PUSH2 0x391 JUMPI DUP1 PUSH4 0x7F51BB1F EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0x8CBB6DF7 EQ PUSH2 0x3C5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3DA JUMPI PUSH2 0x191 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x107 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2A9 JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0x6A47AA06 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x34A JUMPI PUSH2 0x191 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x102B67AB EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x26F JUMPI PUSH2 0x191 JUMP JUMPDEST CALLDATASIZE PUSH2 0x191 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0xA8DED6CADC40C8DECAE640DCDEE840C2C6C6CAE0E8408AA89 PUSH1 0x3B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0xA8DED6CADC40C8DECAE640DCDEE840C2C6C6CAE0E8408AA89 PUSH1 0x3B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x188 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1E9 PUSH2 0x4C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0xC4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x21E PUSH2 0x219 CALLDATASIZE PUSH1 0x4 PUSH2 0xC9F JUMP JUMPDEST PUSH2 0x550 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x239 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x24D PUSH2 0x248 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC7 JUMP JUMPDEST PUSH2 0x569 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x266 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x24D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x21E PUSH2 0x289 CALLDATASIZE PUSH1 0x4 PUSH2 0xCDE JUMP JUMPDEST PUSH2 0x5A0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x299 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH2 0x2C3 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC7 JUMP JUMPDEST PUSH2 0x5C9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x2E9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x24D PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x321 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x24D PUSH2 0x330 CALLDATASIZE PUSH1 0x4 PUSH2 0xD18 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x355 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH2 0x5D6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x369 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x21E PUSH2 0x5E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH2 0x38C CALLDATASIZE PUSH1 0x4 PUSH2 0xC9F JUMP JUMPDEST PUSH2 0x60F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x24D PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH2 0x3C0 CALLDATASIZE PUSH1 0x4 PUSH2 0xD18 JUMP JUMPDEST PUSH2 0x628 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x24D PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x402 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1E9 PUSH2 0x652 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x416 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x21E PUSH2 0x425 CALLDATASIZE PUSH1 0x4 PUSH2 0xC9F JUMP JUMPDEST PUSH2 0x661 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x435 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH2 0x444 CALLDATASIZE PUSH1 0x4 PUSH2 0xD31 JUMP JUMPDEST PUSH2 0x681 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x454 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x24D PUSH2 0x463 CALLDATASIZE PUSH1 0x4 PUSH2 0xD51 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x498 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH2 0x725 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH2 0x4BB CALLDATASIZE PUSH1 0x4 PUSH2 0xD18 JUMP JUMPDEST PUSH2 0x82A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4CF SWAP1 PUSH2 0xD82 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4FB SWAP1 PUSH2 0xD82 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x546 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x51D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x546 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x529 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x55D DUP2 DUP6 DUP6 PUSH2 0x864 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x64 PUSH2 0x58F DUP5 DUP4 PUSH2 0xDCE JUMP JUMPDEST PUSH2 0x599 SWAP2 SWAP1 PUSH2 0xDE5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5A9 PUSH2 0x5E9 JUMP JUMPDEST ISZERO PUSH2 0x5B6 JUMPI PUSH2 0x5B6 PUSH2 0x725 JUMP JUMPDEST PUSH2 0x5C1 DUP5 DUP5 DUP5 PUSH2 0x876 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x5D3 CALLER DUP3 PUSH2 0x899 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x5DE PUSH2 0x8CD JUMP JUMPDEST PUSH2 0x5E7 PUSH0 PUSH2 0x8FA JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x708 PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH2 0x5FD SWAP2 SWAP1 PUSH2 0xE04 JUMP JUMPDEST PUSH2 0x607 SWAP2 SWAP1 PUSH2 0xE04 JUMP JUMPDEST TIMESTAMP LT ISZERO SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x61A DUP3 CALLER DUP4 PUSH2 0x94B JUMP JUMPDEST PUSH2 0x624 DUP3 DUP3 PUSH2 0x899 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x630 PUSH2 0x8CD JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x4CF SWAP1 PUSH2 0xD82 JUMP JUMPDEST PUSH0 PUSH2 0x66A PUSH2 0x5E9 JUMP JUMPDEST ISZERO PUSH2 0x677 JUMPI PUSH2 0x677 PUSH2 0x725 JUMP JUMPDEST PUSH2 0x599 DUP4 DUP4 PUSH2 0x9C7 JUMP JUMPDEST PUSH2 0x689 PUSH2 0x8CD JUMP JUMPDEST PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x6D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x48616C76696E67207261746520746F6F206C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x188 JUMP JUMPDEST PUSH1 0x14 DUP2 GT ISZERO PUSH2 0x71A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x90C2D8ECD2DCCE40E4C2E8CA40E8DEDE40D0D2CED PUSH1 0x5B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x188 JUMP JUMPDEST PUSH1 0x8 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0xA SSTORE JUMP JUMPDEST PUSH2 0x72D PUSH2 0x9D4 JUMP JUMPDEST PUSH2 0x735 PUSH2 0x5E9 JUMP JUMPDEST PUSH2 0x781 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x48616C76696E6720696E74657276616C206E6F74207265616368656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x188 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH1 0x64 PUSH1 0xA SLOAD DUP4 PUSH2 0x7AE SWAP2 SWAP1 PUSH2 0xDCE JUMP JUMPDEST PUSH2 0x7B8 SWAP2 SWAP1 PUSH2 0xDE5 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x81E JUMPI PUSH1 0x7 SLOAD PUSH2 0x7D6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH2 0x899 JUMP JUMPDEST PUSH2 0x7E2 PUSH2 0x708 TIMESTAMP PUSH2 0xE17 JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x394823B0BCAF78CD8F5876A52C05DBAB91512A05F5DA2A31E239A11AB66D605F SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP PUSH2 0x5E7 PUSH1 0x1 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0x832 PUSH2 0x8CD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x85B JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x188 JUMP JUMPDEST PUSH2 0x5D3 DUP2 PUSH2 0x8FA JUMP JUMPDEST PUSH2 0x871 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x9FE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x883 DUP6 DUP3 DUP6 PUSH2 0x94B JUMP JUMPDEST PUSH2 0x88E DUP6 DUP6 DUP6 PUSH2 0xAD0 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8C2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x188 JUMP JUMPDEST PUSH2 0x624 DUP3 PUSH0 DUP4 PUSH2 0xB29 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5E7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x188 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 LT ISZERO PUSH2 0x9C1 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x9B3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x188 JUMP JUMPDEST PUSH2 0x9C1 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x9FE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x55D DUP2 DUP6 DUP6 PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x9F7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xA27 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x188 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA50 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x188 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x9C1 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xAC2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xAF9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x188 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB22 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x188 JUMP JUMPDEST PUSH2 0x871 DUP4 DUP4 DUP4 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB53 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB48 SWAP2 SWAP1 PUSH2 0xE04 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xBC3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xBA5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x188 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBDF JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xC42 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC9A JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCB0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xCB9 DUP4 PUSH2 0xC84 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCD7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xCF0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xCF9 DUP5 PUSH2 0xC84 JUMP JUMPDEST SWAP3 POP PUSH2 0xD07 PUSH1 0x20 DUP6 ADD PUSH2 0xC84 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD28 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x599 DUP3 PUSH2 0xC84 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD42 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD62 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xD6B DUP4 PUSH2 0xC84 JUMP JUMPDEST SWAP2 POP PUSH2 0xD79 PUSH1 0x20 DUP5 ADD PUSH2 0xC84 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xD96 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDB4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x563 JUMPI PUSH2 0x563 PUSH2 0xDBA JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xDFF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x563 JUMPI PUSH2 0x563 PUSH2 0xDBA JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x563 JUMPI PUSH2 0x563 PUSH2 0xDBA JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE 0xCF SDIV 0xBC KECCAK256 SWAP9 PUSH11 0xC4DAE2D4AD43851B784B3A PUSH21 0x54E95A591EF88D1B40A443667E64736F6C63430008 SAR STOP CALLER ",
							"sourceMap": "563:3967:8:-:0;;;1674:634;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1848:10;1601:113:2;;;;;;;;;;;;;-1:-1:-1;;;1601:113:2;;;;;;;;;;;;;;;;-1:-1:-1;;;1601:113:2;;;1675:5;1667;:13;;;;;;:::i;:::-;-1:-1:-1;1690:7:2;:17;1700:7;1690;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;3438:51:9;3411:18;;1322:31:0;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1857:1:7;2061:7;:21;1894:3:8::2;1878:19:::0;::::2;;1870:63;;;::::0;-1:-1:-1;;;1870:63:8;;3702:2:9;1870:63:8::2;::::0;::::2;3684:21:9::0;3741:2;3721:18;;;3714:30;3780:33;3760:18;;;3753:61;3831:18;;1870:63:8::2;3500:355:9::0;1870:63:8::2;1181:5;1951:16;:35;;1943:66;;;::::0;-1:-1:-1;;;1943:66:8;;4062:2:9;1943:66:8::2;::::0;::::2;4044:21:9::0;4101:2;4081:18;;;4074:30;-1:-1:-1;;;4120:18:9;;;4113:48;4178:18;;1943:66:8::2;3860:342:9::0;1943:66:8::2;1181:5;1262:16;1128:3;1277:1;1262:16;:::i;:::-;1261:36;;;;:::i;:::-;2047:28;::::0;2074:1:::2;2047:28;:::i;:::-;2027:16;:48;;2019:78;;;::::0;-1:-1:-1;;;2019:78:8;;4714:2:9;2019:78:8::2;::::0;::::2;4696:21:9::0;4753:2;4733:18;;;4726:30;-1:-1:-1;;;4772:18:9;;;4765:47;4829:18;;2019:78:8::2;4512:341:9::0;2019:78:8::2;2116:32;2122:10;2134:13:::0;2116:5:::2;:32::i;:::-;2158:8;:20:::0;;-1:-1:-1;;;;;;2158:20:8::2;-1:-1:-1::0;;;;;2158:20:8;;;::::2;::::0;;;::::2;::::0;;;2188:15:::2;:34:::0;2232:11:::2;:26:::0;-1:-1:-1;2286:15:8::2;2268;:33:::0;563:3967;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;7458:208:2:-;-1:-1:-1;;;;;7528:21:2;;7524:91;;7572:32;;-1:-1:-1;;;7572:32:2;;7601:1;7572:32;;;3438:51:9;3411:18;;7572:32:2;3292:203:9;7524:91:2;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;6008:1107::-;-1:-1:-1;;;;;6097:18:2;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6093:540:2;;-1:-1:-1;6093:540:2;;-1:-1:-1;;;;;6307:15:2;;6285:19;6307:15;;;;;;;;;;;6340:19;;;6336:115;;;6386:50;;-1:-1:-1;;;6386:50:2;;-1:-1:-1;;;;;5208:32:9;;6386:50:2;;;5190:51:9;5257:18;;;5250:34;;;5300:18;;;5293:34;;;5163:18;;6386:50:2;4988:345:9;6336:115:2;-1:-1:-1;;;;;6571:15:2;;:9;:15;;;;;;;;;;6589:19;;;;6571:37;;6093:540;-1:-1:-1;;;;;6647:16:2;;6643:425;;6810:12;:21;;;;;;;6643:425;;;-1:-1:-1;;;;;7021:13:2;;:9;:13;;;;;;;;;;:22;;;;;;6643:425;7098:2;-1:-1:-1;;;;;7083:25:2;7092:4;-1:-1:-1;;;;;7083:25:2;;7102:5;7083:25;;;;5484::9;;5472:2;5457:18;;5338:177;7083:25:2;;;;;;;;6008:1107;;;:::o;14:632:9:-;111:6;119;127;135;188:3;176:9;167:7;163:23;159:33;156:53;;;205:1;202;195:12;156:53;250:16;;335:2;320:18;;314:25;250:16;;-1:-1:-1;;;;;;370:33:9;;358:46;;348:74;;418:1;415;408:12;348:74;514:2;499:18;;493:25;610:2;595:18;;;589:25;14:632;;441:7;;-1:-1:-1;14:632:9;-1:-1:-1;;;14:632:9:o;651:127::-;712:10;707:3;703:20;700:1;693:31;743:4;740:1;733:15;767:4;764:1;757:15;783:380;862:1;858:12;;;;905;;;926:61;;980:4;972:6;968:17;958:27;;926:61;1033:2;1025:6;1022:14;1002:18;999:38;996:161;;1079:10;1074:3;1070:20;1067:1;1060:31;1114:4;1111:1;1104:15;1142:4;1139:1;1132:15;996:161;;783:380;;;:::o;1294:518::-;1396:2;1391:3;1388:11;1385:421;;;1432:5;1429:1;1422:16;1476:4;1473:1;1463:18;1546:2;1534:10;1530:19;1527:1;1523:27;1517:4;1513:38;1582:4;1570:10;1567:20;1564:47;;;-1:-1:-1;1605:4:9;1564:47;1660:2;1655:3;1651:12;1648:1;1644:20;1638:4;1634:31;1624:41;;1715:81;1733:2;1726:5;1723:13;1715:81;;;1792:1;1778:16;;1759:1;1748:13;1715:81;;;1719:3;;1385:421;1294:518;;;:::o;1988:1299::-;2108:10;;-1:-1:-1;;;;;2130:30:9;;2127:56;;;2163:18;;:::i;:::-;2192:97;2282:6;2242:38;2274:4;2268:11;2242:38;:::i;:::-;2236:4;2192:97;:::i;:::-;2338:4;2369:2;2358:14;;2386:1;2381:649;;;;3074:1;3091:6;3088:89;;;-1:-1:-1;3143:19:9;;;3137:26;3088:89;-1:-1:-1;;1945:1:9;1941:11;;;1937:24;1933:29;1923:40;1969:1;1965:11;;;1920:57;3190:81;;2351:930;;2381:649;1241:1;1234:14;;;1278:4;1265:18;;-1:-1:-1;;2417:20:9;;;2535:222;2549:7;2546:1;2543:14;2535:222;;;2631:19;;;2625:26;2610:42;;2738:4;2723:20;;;;2691:1;2679:14;;;;2565:12;2535:222;;;2539:3;2785:6;2776:7;2773:19;2770:201;;;2846:19;;;2840:26;-1:-1:-1;;2929:1:9;2925:14;;;2941:3;2921:24;2917:37;2913:42;2898:58;2883:74;;2770:201;-1:-1:-1;;;;3017:1:9;3001:14;;;2997:22;2984:36;;-1:-1:-1;1988:1299:9:o;4207:127::-;4268:10;4263:3;4259:20;4256:1;4249:31;4299:4;4296:1;4289:15;4323:4;4320:1;4313:15;4339:168;4412:9;;;4443;;4460:15;;;4454:22;;4440:37;4430:71;;4481:18;;:::i;:::-;4339:168;;;;:::o;4858:125::-;4923:9;;;4944:10;;;4941:36;;;4957:18;;:::i;5338:177::-;563:3967:8;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_1360": {
									"entryPoint": null,
									"id": 1360,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1368": {
									"entryPoint": null,
									"id": 1368,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_690": {
									"entryPoint": 2148,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 2558,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_672": {
									"entryPoint": 2201,
									"id": 672,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 2253,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_961": {
									"entryPoint": null,
									"id": 961,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_1036": {
									"entryPoint": null,
									"id": 1036,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_1028": {
									"entryPoint": 2516,
									"id": 1028,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_798": {
									"entryPoint": 2379,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 2298,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 2768,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 2857,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": null,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 1360,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": null,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_922": {
									"entryPoint": 1551,
									"id": 922,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_901": {
									"entryPoint": 1481,
									"id": 901,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_363": {
									"entryPoint": null,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@executeHalving_1246": {
									"entryPoint": 1829,
									"id": 1246,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getExpectedBurn_1311": {
									"entryPoint": 1385,
									"id": 1311,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@halvingInterval_1070": {
									"entryPoint": null,
									"id": 1070,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@halvingRate_1074": {
									"entryPoint": null,
									"id": 1074,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isHalvingDue_1196": {
									"entryPoint": 1513,
									"id": 1196,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@lastHalvingTime_1072": {
									"entryPoint": null,
									"id": 1072,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 1216,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1494,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 1618,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": null,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1352": {
									"entryPoint": 1440,
									"id": 1352,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 2166,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 2090,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_1330": {
									"entryPoint": 1633,
									"id": 1330,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transfer_409": {
									"entryPoint": 2503,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@treasury_1068": {
									"entryPoint": null,
									"id": 1068,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateHalvingParams_1278": {
									"entryPoint": 1665,
									"id": 1278,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@updateTreasury_1290": {
									"entryPoint": 1576,
									"id": 1290,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 3204,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3352,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3409,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3294,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3231,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3271,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 3377,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3151,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2e96fdf67c9a0dad3ac1d60e5f88d1dea6af5eff3e2029d19a787ff8fa105135__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_78c4f9f3f3ed4ed6c78e4a6a7613e359adf3a3d4265b99c6653232671bf676f8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d6ef7acea0261efd64d5d7c6dec050eec6b82a90a97a4ff7324326876f46a190__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d9685d7b83f94a8526cd378518e03ae5cdd64f3bc22b0ae59b808c415888bde8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3588,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3557,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3534,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3607,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 3458,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3514,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6293:9",
										"nodeType": "YulBlock",
										"src": "0:6293:9",
										"statements": [
											{
												"nativeSrc": "6:3:9",
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "188:175:9",
													"nodeType": "YulBlock",
													"src": "188:175:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "205:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "205:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "216:2:9",
																		"nodeType": "YulLiteral",
																		"src": "216:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "198:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "198:6:9"
																},
																"nativeSrc": "198:21:9",
																"nodeType": "YulFunctionCall",
																"src": "198:21:9"
															},
															"nativeSrc": "198:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "198:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "239:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "239:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "250:2:9",
																				"nodeType": "YulLiteral",
																				"src": "250:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "235:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:9"
																		},
																		"nativeSrc": "235:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "235:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "255:2:9",
																		"nodeType": "YulLiteral",
																		"src": "255:2:9",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "228:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "228:6:9"
																},
																"nativeSrc": "228:30:9",
																"nodeType": "YulFunctionCall",
																"src": "228:30:9"
															},
															"nativeSrc": "228:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "228:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "278:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "278:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "289:2:9",
																				"nodeType": "YulLiteral",
																				"src": "289:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "274:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "274:3:9"
																		},
																		"nativeSrc": "274:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "274:18:9"
																	},
																	{
																		"hexValue": "546f6b656e20646f6573206e6f742061636365707420455448",
																		"kind": "string",
																		"nativeSrc": "294:27:9",
																		"nodeType": "YulLiteral",
																		"src": "294:27:9",
																		"type": "",
																		"value": "Token does not accept ETH"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "267:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "267:6:9"
																},
																"nativeSrc": "267:55:9",
																"nodeType": "YulFunctionCall",
																"src": "267:55:9"
															},
															"nativeSrc": "267:55:9",
															"nodeType": "YulExpressionStatement",
															"src": "267:55:9"
														},
														{
															"nativeSrc": "331:26:9",
															"nodeType": "YulAssignment",
															"src": "331:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "343:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "343:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "354:2:9",
																		"nodeType": "YulLiteral",
																		"src": "354:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "339:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "339:3:9"
																},
																"nativeSrc": "339:18:9",
																"nodeType": "YulFunctionCall",
																"src": "339:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "331:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "331:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d6ef7acea0261efd64d5d7c6dec050eec6b82a90a97a4ff7324326876f46a190__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:349:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "165:9:9",
														"nodeType": "YulTypedName",
														"src": "165:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "179:4:9",
														"nodeType": "YulTypedName",
														"src": "179:4:9",
														"type": ""
													}
												],
												"src": "14:349:9"
											},
											{
												"body": {
													"nativeSrc": "489:297:9",
													"nodeType": "YulBlock",
													"src": "489:297:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "506:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "506:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "517:2:9",
																		"nodeType": "YulLiteral",
																		"src": "517:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "499:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "499:6:9"
																},
																"nativeSrc": "499:21:9",
																"nodeType": "YulFunctionCall",
																"src": "499:21:9"
															},
															"nativeSrc": "499:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "499:21:9"
														},
														{
															"nativeSrc": "529:27:9",
															"nodeType": "YulVariableDeclaration",
															"src": "529:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "549:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "549:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "543:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "543:5:9"
																},
																"nativeSrc": "543:13:9",
																"nodeType": "YulFunctionCall",
																"src": "543:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "533:6:9",
																	"nodeType": "YulTypedName",
																	"src": "533:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "576:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "576:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "587:2:9",
																				"nodeType": "YulLiteral",
																				"src": "587:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "572:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "572:3:9"
																		},
																		"nativeSrc": "572:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "572:18:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "592:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "592:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "565:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "565:6:9"
																},
																"nativeSrc": "565:34:9",
																"nodeType": "YulFunctionCall",
																"src": "565:34:9"
															},
															"nativeSrc": "565:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "565:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "618:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "618:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "629:2:9",
																				"nodeType": "YulLiteral",
																				"src": "629:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "614:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "614:3:9"
																		},
																		"nativeSrc": "614:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "614:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "638:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "638:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "646:2:9",
																				"nodeType": "YulLiteral",
																				"src": "646:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "634:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "634:3:9"
																		},
																		"nativeSrc": "634:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "634:15:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "651:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "651:6:9"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "608:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "608:5:9"
																},
																"nativeSrc": "608:50:9",
																"nodeType": "YulFunctionCall",
																"src": "608:50:9"
															},
															"nativeSrc": "608:50:9",
															"nodeType": "YulExpressionStatement",
															"src": "608:50:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "682:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "682:9:9"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "693:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "693:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "678:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "678:3:9"
																				},
																				"nativeSrc": "678:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "678:22:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "702:2:9",
																				"nodeType": "YulLiteral",
																				"src": "702:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "674:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "674:3:9"
																		},
																		"nativeSrc": "674:31:9",
																		"nodeType": "YulFunctionCall",
																		"src": "674:31:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "707:1:9",
																		"nodeType": "YulLiteral",
																		"src": "707:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "667:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:9"
																},
																"nativeSrc": "667:42:9",
																"nodeType": "YulFunctionCall",
																"src": "667:42:9"
															},
															"nativeSrc": "667:42:9",
															"nodeType": "YulExpressionStatement",
															"src": "667:42:9"
														},
														{
															"nativeSrc": "718:62:9",
															"nodeType": "YulAssignment",
															"src": "718:62:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "734:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "734:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "753:6:9",
																								"nodeType": "YulIdentifier",
																								"src": "753:6:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "761:2:9",
																								"nodeType": "YulLiteral",
																								"src": "761:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "749:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "749:3:9"
																						},
																						"nativeSrc": "749:15:9",
																						"nodeType": "YulFunctionCall",
																						"src": "749:15:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "770:2:9",
																								"nodeType": "YulLiteral",
																								"src": "770:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "766:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "766:3:9"
																						},
																						"nativeSrc": "766:7:9",
																						"nodeType": "YulFunctionCall",
																						"src": "766:7:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "745:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "745:3:9"
																				},
																				"nativeSrc": "745:29:9",
																				"nodeType": "YulFunctionCall",
																				"src": "745:29:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "730:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "730:3:9"
																		},
																		"nativeSrc": "730:45:9",
																		"nodeType": "YulFunctionCall",
																		"src": "730:45:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "777:2:9",
																		"nodeType": "YulLiteral",
																		"src": "777:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "726:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "726:3:9"
																},
																"nativeSrc": "726:54:9",
																"nodeType": "YulFunctionCall",
																"src": "726:54:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "718:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "718:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "368:418:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "458:9:9",
														"nodeType": "YulTypedName",
														"src": "458:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "469:6:9",
														"nodeType": "YulTypedName",
														"src": "469:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "480:4:9",
														"nodeType": "YulTypedName",
														"src": "480:4:9",
														"type": ""
													}
												],
												"src": "368:418:9"
											},
											{
												"body": {
													"nativeSrc": "840:124:9",
													"nodeType": "YulBlock",
													"src": "840:124:9",
													"statements": [
														{
															"nativeSrc": "850:29:9",
															"nodeType": "YulAssignment",
															"src": "850:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "872:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "872:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "859:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "859:12:9"
																},
																"nativeSrc": "859:20:9",
																"nodeType": "YulFunctionCall",
																"src": "859:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "850:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "850:5:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "942:16:9",
																"nodeType": "YulBlock",
																"src": "942:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "951:1:9",
																					"nodeType": "YulLiteral",
																					"src": "951:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "954:1:9",
																					"nodeType": "YulLiteral",
																					"src": "954:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "944:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "944:6:9"
																			},
																			"nativeSrc": "944:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "944:12:9"
																		},
																		"nativeSrc": "944:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "944:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "901:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "901:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "912:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "912:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "927:3:9",
																										"nodeType": "YulLiteral",
																										"src": "927:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "932:1:9",
																										"nodeType": "YulLiteral",
																										"src": "932:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "923:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "923:3:9"
																								},
																								"nativeSrc": "923:11:9",
																								"nodeType": "YulFunctionCall",
																								"src": "923:11:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "936:1:9",
																								"nodeType": "YulLiteral",
																								"src": "936:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "919:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "919:3:9"
																						},
																						"nativeSrc": "919:19:9",
																						"nodeType": "YulFunctionCall",
																						"src": "919:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "908:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "908:3:9"
																				},
																				"nativeSrc": "908:31:9",
																				"nodeType": "YulFunctionCall",
																				"src": "908:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "898:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "898:2:9"
																		},
																		"nativeSrc": "898:42:9",
																		"nodeType": "YulFunctionCall",
																		"src": "898:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "891:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "891:6:9"
																},
																"nativeSrc": "891:50:9",
																"nodeType": "YulFunctionCall",
																"src": "891:50:9"
															},
															"nativeSrc": "888:70:9",
															"nodeType": "YulIf",
															"src": "888:70:9"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "791:173:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "819:6:9",
														"nodeType": "YulTypedName",
														"src": "819:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "830:5:9",
														"nodeType": "YulTypedName",
														"src": "830:5:9",
														"type": ""
													}
												],
												"src": "791:173:9"
											},
											{
												"body": {
													"nativeSrc": "1056:213:9",
													"nodeType": "YulBlock",
													"src": "1056:213:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1102:16:9",
																"nodeType": "YulBlock",
																"src": "1102:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1111:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1111:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1114:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1114:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1104:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1104:6:9"
																			},
																			"nativeSrc": "1104:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1104:12:9"
																		},
																		"nativeSrc": "1104:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1104:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1077:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1077:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1086:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1086:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1073:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1073:3:9"
																		},
																		"nativeSrc": "1073:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1073:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1098:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1098:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1069:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1069:3:9"
																},
																"nativeSrc": "1069:32:9",
																"nodeType": "YulFunctionCall",
																"src": "1069:32:9"
															},
															"nativeSrc": "1066:52:9",
															"nodeType": "YulIf",
															"src": "1066:52:9"
														},
														{
															"nativeSrc": "1127:39:9",
															"nodeType": "YulAssignment",
															"src": "1127:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1156:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1156:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1137:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "1137:18:9"
																},
																"nativeSrc": "1137:29:9",
																"nodeType": "YulFunctionCall",
																"src": "1137:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1127:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:9"
																}
															]
														},
														{
															"nativeSrc": "1175:14:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1175:14:9",
															"value": {
																"kind": "number",
																"nativeSrc": "1188:1:9",
																"nodeType": "YulLiteral",
																"src": "1188:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1179:5:9",
																	"nodeType": "YulTypedName",
																	"src": "1179:5:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1198:41:9",
															"nodeType": "YulAssignment",
															"src": "1198:41:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1224:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1224:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1235:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1235:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1220:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:9"
																		},
																		"nativeSrc": "1220:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1220:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1207:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "1207:12:9"
																},
																"nativeSrc": "1207:32:9",
																"nodeType": "YulFunctionCall",
																"src": "1207:32:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1198:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1198:5:9"
																}
															]
														},
														{
															"nativeSrc": "1248:15:9",
															"nodeType": "YulAssignment",
															"src": "1248:15:9",
															"value": {
																"name": "value",
																"nativeSrc": "1258:5:9",
																"nodeType": "YulIdentifier",
																"src": "1258:5:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1248:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1248:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "969:300:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1014:9:9",
														"nodeType": "YulTypedName",
														"src": "1014:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1025:7:9",
														"nodeType": "YulTypedName",
														"src": "1025:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1037:6:9",
														"nodeType": "YulTypedName",
														"src": "1037:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1045:6:9",
														"nodeType": "YulTypedName",
														"src": "1045:6:9",
														"type": ""
													}
												],
												"src": "969:300:9"
											},
											{
												"body": {
													"nativeSrc": "1369:92:9",
													"nodeType": "YulBlock",
													"src": "1369:92:9",
													"statements": [
														{
															"nativeSrc": "1379:26:9",
															"nodeType": "YulAssignment",
															"src": "1379:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1391:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1391:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1402:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1402:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1387:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1387:3:9"
																},
																"nativeSrc": "1387:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1387:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1379:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1379:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1421:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1421:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1446:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1446:6:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1439:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "1439:6:9"
																				},
																				"nativeSrc": "1439:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1439:14:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1432:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1432:6:9"
																		},
																		"nativeSrc": "1432:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1432:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1414:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1414:6:9"
																},
																"nativeSrc": "1414:41:9",
																"nodeType": "YulFunctionCall",
																"src": "1414:41:9"
															},
															"nativeSrc": "1414:41:9",
															"nodeType": "YulExpressionStatement",
															"src": "1414:41:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1274:187:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1338:9:9",
														"nodeType": "YulTypedName",
														"src": "1338:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1349:6:9",
														"nodeType": "YulTypedName",
														"src": "1349:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1360:4:9",
														"nodeType": "YulTypedName",
														"src": "1360:4:9",
														"type": ""
													}
												],
												"src": "1274:187:9"
											},
											{
												"body": {
													"nativeSrc": "1536:156:9",
													"nodeType": "YulBlock",
													"src": "1536:156:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1582:16:9",
																"nodeType": "YulBlock",
																"src": "1582:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1591:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1591:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1594:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1594:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1584:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1584:6:9"
																			},
																			"nativeSrc": "1584:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1584:12:9"
																		},
																		"nativeSrc": "1584:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1584:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1557:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1557:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1566:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1566:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1553:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1553:3:9"
																		},
																		"nativeSrc": "1553:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1553:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1578:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1578:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1549:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1549:3:9"
																},
																"nativeSrc": "1549:32:9",
																"nodeType": "YulFunctionCall",
																"src": "1549:32:9"
															},
															"nativeSrc": "1546:52:9",
															"nodeType": "YulIf",
															"src": "1546:52:9"
														},
														{
															"nativeSrc": "1607:14:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1607:14:9",
															"value": {
																"kind": "number",
																"nativeSrc": "1620:1:9",
																"nodeType": "YulLiteral",
																"src": "1620:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1611:5:9",
																	"nodeType": "YulTypedName",
																	"src": "1611:5:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1630:32:9",
															"nodeType": "YulAssignment",
															"src": "1630:32:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1652:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1652:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1639:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "1639:12:9"
																},
																"nativeSrc": "1639:23:9",
																"nodeType": "YulFunctionCall",
																"src": "1639:23:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1630:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1630:5:9"
																}
															]
														},
														{
															"nativeSrc": "1671:15:9",
															"nodeType": "YulAssignment",
															"src": "1671:15:9",
															"value": {
																"name": "value",
																"nativeSrc": "1681:5:9",
																"nodeType": "YulIdentifier",
																"src": "1681:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1671:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1671:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1466:226:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1502:9:9",
														"nodeType": "YulTypedName",
														"src": "1502:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1513:7:9",
														"nodeType": "YulTypedName",
														"src": "1513:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1525:6:9",
														"nodeType": "YulTypedName",
														"src": "1525:6:9",
														"type": ""
													}
												],
												"src": "1466:226:9"
											},
											{
												"body": {
													"nativeSrc": "1798:76:9",
													"nodeType": "YulBlock",
													"src": "1798:76:9",
													"statements": [
														{
															"nativeSrc": "1808:26:9",
															"nodeType": "YulAssignment",
															"src": "1808:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1820:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1820:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1831:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1831:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1816:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1816:3:9"
																},
																"nativeSrc": "1816:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1816:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1808:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1808:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1850:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1850:9:9"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1861:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1861:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1843:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1843:6:9"
																},
																"nativeSrc": "1843:25:9",
																"nodeType": "YulFunctionCall",
																"src": "1843:25:9"
															},
															"nativeSrc": "1843:25:9",
															"nodeType": "YulExpressionStatement",
															"src": "1843:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1697:177:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1767:9:9",
														"nodeType": "YulTypedName",
														"src": "1767:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1778:6:9",
														"nodeType": "YulTypedName",
														"src": "1778:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1789:4:9",
														"nodeType": "YulTypedName",
														"src": "1789:4:9",
														"type": ""
													}
												],
												"src": "1697:177:9"
											},
											{
												"body": {
													"nativeSrc": "1983:270:9",
													"nodeType": "YulBlock",
													"src": "1983:270:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2029:16:9",
																"nodeType": "YulBlock",
																"src": "2029:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2038:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2038:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2041:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2041:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2031:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2031:6:9"
																			},
																			"nativeSrc": "2031:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2031:12:9"
																		},
																		"nativeSrc": "2031:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2031:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2004:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2004:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2013:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2013:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2000:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2000:3:9"
																		},
																		"nativeSrc": "2000:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2000:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2025:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2025:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1996:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1996:3:9"
																},
																"nativeSrc": "1996:32:9",
																"nodeType": "YulFunctionCall",
																"src": "1996:32:9"
															},
															"nativeSrc": "1993:52:9",
															"nodeType": "YulIf",
															"src": "1993:52:9"
														},
														{
															"nativeSrc": "2054:39:9",
															"nodeType": "YulAssignment",
															"src": "2054:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2083:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2083:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2064:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "2064:18:9"
																},
																"nativeSrc": "2064:29:9",
																"nodeType": "YulFunctionCall",
																"src": "2064:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2054:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2054:6:9"
																}
															]
														},
														{
															"nativeSrc": "2102:48:9",
															"nodeType": "YulAssignment",
															"src": "2102:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2135:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2135:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2146:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2146:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2131:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2131:3:9"
																		},
																		"nativeSrc": "2131:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2131:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2112:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "2112:18:9"
																},
																"nativeSrc": "2112:38:9",
																"nodeType": "YulFunctionCall",
																"src": "2112:38:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2102:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2102:6:9"
																}
															]
														},
														{
															"nativeSrc": "2159:14:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2159:14:9",
															"value": {
																"kind": "number",
																"nativeSrc": "2172:1:9",
																"nodeType": "YulLiteral",
																"src": "2172:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2163:5:9",
																	"nodeType": "YulTypedName",
																	"src": "2163:5:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2182:41:9",
															"nodeType": "YulAssignment",
															"src": "2182:41:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2208:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2208:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2219:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2219:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2204:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2204:3:9"
																		},
																		"nativeSrc": "2204:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2204:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2191:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2191:12:9"
																},
																"nativeSrc": "2191:32:9",
																"nodeType": "YulFunctionCall",
																"src": "2191:32:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2182:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2182:5:9"
																}
															]
														},
														{
															"nativeSrc": "2232:15:9",
															"nodeType": "YulAssignment",
															"src": "2232:15:9",
															"value": {
																"name": "value",
																"nativeSrc": "2242:5:9",
																"nodeType": "YulIdentifier",
																"src": "2242:5:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2232:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2232:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1879:374:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1933:9:9",
														"nodeType": "YulTypedName",
														"src": "1933:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1944:7:9",
														"nodeType": "YulTypedName",
														"src": "1944:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1956:6:9",
														"nodeType": "YulTypedName",
														"src": "1956:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1964:6:9",
														"nodeType": "YulTypedName",
														"src": "1964:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1972:6:9",
														"nodeType": "YulTypedName",
														"src": "1972:6:9",
														"type": ""
													}
												],
												"src": "1879:374:9"
											},
											{
												"body": {
													"nativeSrc": "2355:87:9",
													"nodeType": "YulBlock",
													"src": "2355:87:9",
													"statements": [
														{
															"nativeSrc": "2365:26:9",
															"nodeType": "YulAssignment",
															"src": "2365:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2377:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2377:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2388:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2388:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2373:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2373:3:9"
																},
																"nativeSrc": "2373:18:9",
																"nodeType": "YulFunctionCall",
																"src": "2373:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2365:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2365:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2407:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2407:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2422:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2422:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2430:4:9",
																				"nodeType": "YulLiteral",
																				"src": "2430:4:9",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2418:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2418:3:9"
																		},
																		"nativeSrc": "2418:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2418:17:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2400:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2400:6:9"
																},
																"nativeSrc": "2400:36:9",
																"nodeType": "YulFunctionCall",
																"src": "2400:36:9"
															},
															"nativeSrc": "2400:36:9",
															"nodeType": "YulExpressionStatement",
															"src": "2400:36:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "2258:184:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2324:9:9",
														"nodeType": "YulTypedName",
														"src": "2324:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2335:6:9",
														"nodeType": "YulTypedName",
														"src": "2335:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2346:4:9",
														"nodeType": "YulTypedName",
														"src": "2346:4:9",
														"type": ""
													}
												],
												"src": "2258:184:9"
											},
											{
												"body": {
													"nativeSrc": "2548:102:9",
													"nodeType": "YulBlock",
													"src": "2548:102:9",
													"statements": [
														{
															"nativeSrc": "2558:26:9",
															"nodeType": "YulAssignment",
															"src": "2558:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2570:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2570:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2581:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2581:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2566:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2566:3:9"
																},
																"nativeSrc": "2566:18:9",
																"nodeType": "YulFunctionCall",
																"src": "2566:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2558:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2558:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2600:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2600:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2615:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2615:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2631:3:9",
																								"nodeType": "YulLiteral",
																								"src": "2631:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2636:1:9",
																								"nodeType": "YulLiteral",
																								"src": "2636:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2627:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "2627:3:9"
																						},
																						"nativeSrc": "2627:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "2627:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2640:1:9",
																						"nodeType": "YulLiteral",
																						"src": "2640:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2623:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2623:3:9"
																				},
																				"nativeSrc": "2623:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2623:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2611:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2611:3:9"
																		},
																		"nativeSrc": "2611:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2611:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2593:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2593:6:9"
																},
																"nativeSrc": "2593:51:9",
																"nodeType": "YulFunctionCall",
																"src": "2593:51:9"
															},
															"nativeSrc": "2593:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "2593:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2447:203:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2517:9:9",
														"nodeType": "YulTypedName",
														"src": "2517:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2528:6:9",
														"nodeType": "YulTypedName",
														"src": "2528:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2539:4:9",
														"nodeType": "YulTypedName",
														"src": "2539:4:9",
														"type": ""
													}
												],
												"src": "2447:203:9"
											},
											{
												"body": {
													"nativeSrc": "2725:116:9",
													"nodeType": "YulBlock",
													"src": "2725:116:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2771:16:9",
																"nodeType": "YulBlock",
																"src": "2771:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2780:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2780:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2783:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2783:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2773:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2773:6:9"
																			},
																			"nativeSrc": "2773:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2773:12:9"
																		},
																		"nativeSrc": "2773:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2773:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2746:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2746:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2755:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2755:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2742:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2742:3:9"
																		},
																		"nativeSrc": "2742:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2742:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2767:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2767:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2738:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2738:3:9"
																},
																"nativeSrc": "2738:32:9",
																"nodeType": "YulFunctionCall",
																"src": "2738:32:9"
															},
															"nativeSrc": "2735:52:9",
															"nodeType": "YulIf",
															"src": "2735:52:9"
														},
														{
															"nativeSrc": "2796:39:9",
															"nodeType": "YulAssignment",
															"src": "2796:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2825:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2825:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2806:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "2806:18:9"
																},
																"nativeSrc": "2806:29:9",
																"nodeType": "YulFunctionCall",
																"src": "2806:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2796:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2796:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2655:186:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2691:9:9",
														"nodeType": "YulTypedName",
														"src": "2691:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2702:7:9",
														"nodeType": "YulTypedName",
														"src": "2702:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2714:6:9",
														"nodeType": "YulTypedName",
														"src": "2714:6:9",
														"type": ""
													}
												],
												"src": "2655:186:9"
											},
											{
												"body": {
													"nativeSrc": "2933:259:9",
													"nodeType": "YulBlock",
													"src": "2933:259:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2979:16:9",
																"nodeType": "YulBlock",
																"src": "2979:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2988:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2988:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2991:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2991:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2981:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2981:6:9"
																			},
																			"nativeSrc": "2981:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2981:12:9"
																		},
																		"nativeSrc": "2981:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2981:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2954:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2954:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2963:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2963:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2950:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2950:3:9"
																		},
																		"nativeSrc": "2950:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2950:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2975:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2975:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2946:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2946:3:9"
																},
																"nativeSrc": "2946:32:9",
																"nodeType": "YulFunctionCall",
																"src": "2946:32:9"
															},
															"nativeSrc": "2943:52:9",
															"nodeType": "YulIf",
															"src": "2943:52:9"
														},
														{
															"nativeSrc": "3004:14:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3004:14:9",
															"value": {
																"kind": "number",
																"nativeSrc": "3017:1:9",
																"nodeType": "YulLiteral",
																"src": "3017:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3008:5:9",
																	"nodeType": "YulTypedName",
																	"src": "3008:5:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3027:32:9",
															"nodeType": "YulAssignment",
															"src": "3027:32:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3049:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3049:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3036:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "3036:12:9"
																},
																"nativeSrc": "3036:23:9",
																"nodeType": "YulFunctionCall",
																"src": "3036:23:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3027:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "3027:5:9"
																}
															]
														},
														{
															"nativeSrc": "3068:15:9",
															"nodeType": "YulAssignment",
															"src": "3068:15:9",
															"value": {
																"name": "value",
																"nativeSrc": "3078:5:9",
																"nodeType": "YulIdentifier",
																"src": "3078:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3068:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3068:6:9"
																}
															]
														},
														{
															"nativeSrc": "3092:16:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3092:16:9",
															"value": {
																"kind": "number",
																"nativeSrc": "3107:1:9",
																"nodeType": "YulLiteral",
																"src": "3107:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "3096:7:9",
																	"nodeType": "YulTypedName",
																	"src": "3096:7:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3117:43:9",
															"nodeType": "YulAssignment",
															"src": "3117:43:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3145:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3145:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3156:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3156:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3141:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3141:3:9"
																		},
																		"nativeSrc": "3141:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3141:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3128:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "3128:12:9"
																},
																"nativeSrc": "3128:32:9",
																"nodeType": "YulFunctionCall",
																"src": "3128:32:9"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "3117:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "3117:7:9"
																}
															]
														},
														{
															"nativeSrc": "3169:17:9",
															"nodeType": "YulAssignment",
															"src": "3169:17:9",
															"value": {
																"name": "value_1",
																"nativeSrc": "3179:7:9",
																"nodeType": "YulIdentifier",
																"src": "3179:7:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3169:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3169:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "2846:346:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2891:9:9",
														"nodeType": "YulTypedName",
														"src": "2891:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2902:7:9",
														"nodeType": "YulTypedName",
														"src": "2902:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2914:6:9",
														"nodeType": "YulTypedName",
														"src": "2914:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2922:6:9",
														"nodeType": "YulTypedName",
														"src": "2922:6:9",
														"type": ""
													}
												],
												"src": "2846:346:9"
											},
											{
												"body": {
													"nativeSrc": "3284:173:9",
													"nodeType": "YulBlock",
													"src": "3284:173:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3330:16:9",
																"nodeType": "YulBlock",
																"src": "3330:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3339:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3339:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3342:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3342:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3332:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3332:6:9"
																			},
																			"nativeSrc": "3332:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3332:12:9"
																		},
																		"nativeSrc": "3332:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3332:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3305:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3305:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3314:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3314:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3301:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3301:3:9"
																		},
																		"nativeSrc": "3301:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3301:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3326:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3326:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3297:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3297:3:9"
																},
																"nativeSrc": "3297:32:9",
																"nodeType": "YulFunctionCall",
																"src": "3297:32:9"
															},
															"nativeSrc": "3294:52:9",
															"nodeType": "YulIf",
															"src": "3294:52:9"
														},
														{
															"nativeSrc": "3355:39:9",
															"nodeType": "YulAssignment",
															"src": "3355:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3384:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3384:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3365:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "3365:18:9"
																},
																"nativeSrc": "3365:29:9",
																"nodeType": "YulFunctionCall",
																"src": "3365:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3355:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3355:6:9"
																}
															]
														},
														{
															"nativeSrc": "3403:48:9",
															"nodeType": "YulAssignment",
															"src": "3403:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3436:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3436:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3447:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3447:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3432:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3432:3:9"
																		},
																		"nativeSrc": "3432:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3432:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3413:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "3413:18:9"
																},
																"nativeSrc": "3413:38:9",
																"nodeType": "YulFunctionCall",
																"src": "3413:38:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3403:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3403:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "3197:260:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3242:9:9",
														"nodeType": "YulTypedName",
														"src": "3242:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3253:7:9",
														"nodeType": "YulTypedName",
														"src": "3253:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3265:6:9",
														"nodeType": "YulTypedName",
														"src": "3265:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3273:6:9",
														"nodeType": "YulTypedName",
														"src": "3273:6:9",
														"type": ""
													}
												],
												"src": "3197:260:9"
											},
											{
												"body": {
													"nativeSrc": "3517:325:9",
													"nodeType": "YulBlock",
													"src": "3517:325:9",
													"statements": [
														{
															"nativeSrc": "3527:22:9",
															"nodeType": "YulAssignment",
															"src": "3527:22:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3541:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3541:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "3544:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3544:4:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3537:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3537:3:9"
																},
																"nativeSrc": "3537:12:9",
																"nodeType": "YulFunctionCall",
																"src": "3537:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3527:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3527:6:9"
																}
															]
														},
														{
															"nativeSrc": "3558:38:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3558:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3588:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3588:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3594:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3584:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3584:3:9"
																},
																"nativeSrc": "3584:12:9",
																"nodeType": "YulFunctionCall",
																"src": "3584:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "3562:18:9",
																	"nodeType": "YulTypedName",
																	"src": "3562:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3635:31:9",
																"nodeType": "YulBlock",
																"src": "3635:31:9",
																"statements": [
																	{
																		"nativeSrc": "3637:27:9",
																		"nodeType": "YulAssignment",
																		"src": "3637:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "3651:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "3651:6:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3659:4:9",
																					"nodeType": "YulLiteral",
																					"src": "3659:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3647:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "3647:3:9"
																			},
																			"nativeSrc": "3647:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3647:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "3637:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3637:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3615:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "3615:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3608:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3608:6:9"
																},
																"nativeSrc": "3608:26:9",
																"nodeType": "YulFunctionCall",
																"src": "3608:26:9"
															},
															"nativeSrc": "3605:61:9",
															"nodeType": "YulIf",
															"src": "3605:61:9"
														},
														{
															"body": {
																"nativeSrc": "3725:111:9",
																"nodeType": "YulBlock",
																"src": "3725:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3746:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3746:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3753:3:9",
																							"nodeType": "YulLiteral",
																							"src": "3753:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3758:10:9",
																							"nodeType": "YulLiteral",
																							"src": "3758:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3749:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "3749:3:9"
																					},
																					"nativeSrc": "3749:20:9",
																					"nodeType": "YulFunctionCall",
																					"src": "3749:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3739:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3739:6:9"
																			},
																			"nativeSrc": "3739:31:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3739:31:9"
																		},
																		"nativeSrc": "3739:31:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3739:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3790:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3790:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3793:4:9",
																					"nodeType": "YulLiteral",
																					"src": "3793:4:9",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3783:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3783:6:9"
																			},
																			"nativeSrc": "3783:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3783:15:9"
																		},
																		"nativeSrc": "3783:15:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3783:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3818:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3818:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3821:4:9",
																					"nodeType": "YulLiteral",
																					"src": "3821:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3811:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3811:6:9"
																			},
																			"nativeSrc": "3811:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3811:15:9"
																		},
																		"nativeSrc": "3811:15:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3811:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3681:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "3681:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3704:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3704:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3712:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3712:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3701:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "3701:2:9"
																		},
																		"nativeSrc": "3701:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3701:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "3678:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "3678:2:9"
																},
																"nativeSrc": "3678:38:9",
																"nodeType": "YulFunctionCall",
																"src": "3678:38:9"
															},
															"nativeSrc": "3675:161:9",
															"nodeType": "YulIf",
															"src": "3675:161:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "3462:380:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3497:4:9",
														"nodeType": "YulTypedName",
														"src": "3497:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3506:6:9",
														"nodeType": "YulTypedName",
														"src": "3506:6:9",
														"type": ""
													}
												],
												"src": "3462:380:9"
											},
											{
												"body": {
													"nativeSrc": "3879:95:9",
													"nodeType": "YulBlock",
													"src": "3879:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3896:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3896:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3903:3:9",
																				"nodeType": "YulLiteral",
																				"src": "3903:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3908:10:9",
																				"nodeType": "YulLiteral",
																				"src": "3908:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3899:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3899:3:9"
																		},
																		"nativeSrc": "3899:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3899:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3889:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3889:6:9"
																},
																"nativeSrc": "3889:31:9",
																"nodeType": "YulFunctionCall",
																"src": "3889:31:9"
															},
															"nativeSrc": "3889:31:9",
															"nodeType": "YulExpressionStatement",
															"src": "3889:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3936:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3936:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3939:4:9",
																		"nodeType": "YulLiteral",
																		"src": "3939:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3929:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3929:6:9"
																},
																"nativeSrc": "3929:15:9",
																"nodeType": "YulFunctionCall",
																"src": "3929:15:9"
															},
															"nativeSrc": "3929:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "3929:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3960:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3960:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3963:4:9",
																		"nodeType": "YulLiteral",
																		"src": "3963:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3953:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3953:6:9"
																},
																"nativeSrc": "3953:15:9",
																"nodeType": "YulFunctionCall",
																"src": "3953:15:9"
															},
															"nativeSrc": "3953:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "3953:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3847:127:9",
												"nodeType": "YulFunctionDefinition",
												"src": "3847:127:9"
											},
											{
												"body": {
													"nativeSrc": "4031:116:9",
													"nodeType": "YulBlock",
													"src": "4031:116:9",
													"statements": [
														{
															"nativeSrc": "4041:20:9",
															"nodeType": "YulAssignment",
															"src": "4041:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4056:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "4056:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4059:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "4059:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4052:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4052:3:9"
																},
																"nativeSrc": "4052:9:9",
																"nodeType": "YulFunctionCall",
																"src": "4052:9:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "4041:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "4041:7:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4119:22:9",
																"nodeType": "YulBlock",
																"src": "4119:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4121:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "4121:16:9"
																			},
																			"nativeSrc": "4121:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4121:18:9"
																		},
																		"nativeSrc": "4121:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4121:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "4090:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "4090:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4083:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "4083:6:9"
																				},
																				"nativeSrc": "4083:9:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4083:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "4097:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "4097:1:9"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "4104:7:9",
																								"nodeType": "YulIdentifier",
																								"src": "4104:7:9"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "4113:1:9",
																								"nodeType": "YulIdentifier",
																								"src": "4113:1:9"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "4100:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "4100:3:9"
																						},
																						"nativeSrc": "4100:15:9",
																						"nodeType": "YulFunctionCall",
																						"src": "4100:15:9"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "4094:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "4094:2:9"
																				},
																				"nativeSrc": "4094:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4094:22:9"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "4080:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "4080:2:9"
																		},
																		"nativeSrc": "4080:37:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4080:37:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4073:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4073:6:9"
																},
																"nativeSrc": "4073:45:9",
																"nodeType": "YulFunctionCall",
																"src": "4073:45:9"
															},
															"nativeSrc": "4070:71:9",
															"nodeType": "YulIf",
															"src": "4070:71:9"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "3979:168:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4010:1:9",
														"nodeType": "YulTypedName",
														"src": "4010:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4013:1:9",
														"nodeType": "YulTypedName",
														"src": "4013:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "4019:7:9",
														"nodeType": "YulTypedName",
														"src": "4019:7:9",
														"type": ""
													}
												],
												"src": "3979:168:9"
											},
											{
												"body": {
													"nativeSrc": "4198:171:9",
													"nodeType": "YulBlock",
													"src": "4198:171:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "4229:111:9",
																"nodeType": "YulBlock",
																"src": "4229:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4250:1:9",
																					"nodeType": "YulLiteral",
																					"src": "4250:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "4257:3:9",
																							"nodeType": "YulLiteral",
																							"src": "4257:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4262:10:9",
																							"nodeType": "YulLiteral",
																							"src": "4262:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4253:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "4253:3:9"
																					},
																					"nativeSrc": "4253:20:9",
																					"nodeType": "YulFunctionCall",
																					"src": "4253:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4243:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "4243:6:9"
																			},
																			"nativeSrc": "4243:31:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4243:31:9"
																		},
																		"nativeSrc": "4243:31:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4243:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4294:1:9",
																					"nodeType": "YulLiteral",
																					"src": "4294:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4297:4:9",
																					"nodeType": "YulLiteral",
																					"src": "4297:4:9",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4287:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "4287:6:9"
																			},
																			"nativeSrc": "4287:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4287:15:9"
																		},
																		"nativeSrc": "4287:15:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4287:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4322:1:9",
																					"nodeType": "YulLiteral",
																					"src": "4322:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4325:4:9",
																					"nodeType": "YulLiteral",
																					"src": "4325:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4315:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "4315:6:9"
																			},
																			"nativeSrc": "4315:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4315:15:9"
																		},
																		"nativeSrc": "4315:15:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4315:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4218:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "4218:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4211:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4211:6:9"
																},
																"nativeSrc": "4211:9:9",
																"nodeType": "YulFunctionCall",
																"src": "4211:9:9"
															},
															"nativeSrc": "4208:132:9",
															"nodeType": "YulIf",
															"src": "4208:132:9"
														},
														{
															"nativeSrc": "4349:14:9",
															"nodeType": "YulAssignment",
															"src": "4349:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4358:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "4358:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4361:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "4361:1:9"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4354:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4354:3:9"
																},
																"nativeSrc": "4354:9:9",
																"nodeType": "YulFunctionCall",
																"src": "4354:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "4349:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "4349:1:9"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "4152:217:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4183:1:9",
														"nodeType": "YulTypedName",
														"src": "4183:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4186:1:9",
														"nodeType": "YulTypedName",
														"src": "4186:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "4192:1:9",
														"nodeType": "YulTypedName",
														"src": "4192:1:9",
														"type": ""
													}
												],
												"src": "4152:217:9"
											},
											{
												"body": {
													"nativeSrc": "4422:77:9",
													"nodeType": "YulBlock",
													"src": "4422:77:9",
													"statements": [
														{
															"nativeSrc": "4432:16:9",
															"nodeType": "YulAssignment",
															"src": "4432:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4443:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "4443:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4446:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "4446:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4439:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4439:3:9"
																},
																"nativeSrc": "4439:9:9",
																"nodeType": "YulFunctionCall",
																"src": "4439:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4432:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4432:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4471:22:9",
																"nodeType": "YulBlock",
																"src": "4471:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4473:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "4473:16:9"
																			},
																			"nativeSrc": "4473:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4473:18:9"
																		},
																		"nativeSrc": "4473:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4473:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4463:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "4463:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4466:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4466:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4460:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "4460:2:9"
																},
																"nativeSrc": "4460:10:9",
																"nodeType": "YulFunctionCall",
																"src": "4460:10:9"
															},
															"nativeSrc": "4457:36:9",
															"nodeType": "YulIf",
															"src": "4457:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4374:125:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4405:1:9",
														"nodeType": "YulTypedName",
														"src": "4405:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4408:1:9",
														"nodeType": "YulTypedName",
														"src": "4408:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4414:3:9",
														"nodeType": "YulTypedName",
														"src": "4414:3:9",
														"type": ""
													}
												],
												"src": "4374:125:9"
											},
											{
												"body": {
													"nativeSrc": "4678:170:9",
													"nodeType": "YulBlock",
													"src": "4678:170:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4695:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4695:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4706:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4706:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4688:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4688:6:9"
																},
																"nativeSrc": "4688:21:9",
																"nodeType": "YulFunctionCall",
																"src": "4688:21:9"
															},
															"nativeSrc": "4688:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "4688:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4729:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4729:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4740:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4740:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4725:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4725:3:9"
																		},
																		"nativeSrc": "4725:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4725:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4745:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4745:2:9",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4718:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4718:6:9"
																},
																"nativeSrc": "4718:30:9",
																"nodeType": "YulFunctionCall",
																"src": "4718:30:9"
															},
															"nativeSrc": "4718:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "4718:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4768:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4768:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4779:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4779:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4764:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4764:3:9"
																		},
																		"nativeSrc": "4764:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4764:18:9"
																	},
																	{
																		"hexValue": "48616c76696e67207261746520746f6f206c6f77",
																		"kind": "string",
																		"nativeSrc": "4784:22:9",
																		"nodeType": "YulLiteral",
																		"src": "4784:22:9",
																		"type": "",
																		"value": "Halving rate too low"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4757:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4757:6:9"
																},
																"nativeSrc": "4757:50:9",
																"nodeType": "YulFunctionCall",
																"src": "4757:50:9"
															},
															"nativeSrc": "4757:50:9",
															"nodeType": "YulExpressionStatement",
															"src": "4757:50:9"
														},
														{
															"nativeSrc": "4816:26:9",
															"nodeType": "YulAssignment",
															"src": "4816:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4828:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4828:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4839:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4839:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4824:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4824:3:9"
																},
																"nativeSrc": "4824:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4824:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4816:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4816:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d9685d7b83f94a8526cd378518e03ae5cdd64f3bc22b0ae59b808c415888bde8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4504:344:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4655:9:9",
														"nodeType": "YulTypedName",
														"src": "4655:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4669:4:9",
														"nodeType": "YulTypedName",
														"src": "4669:4:9",
														"type": ""
													}
												],
												"src": "4504:344:9"
											},
											{
												"body": {
													"nativeSrc": "5027:171:9",
													"nodeType": "YulBlock",
													"src": "5027:171:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5044:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5044:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5055:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5055:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5037:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5037:6:9"
																},
																"nativeSrc": "5037:21:9",
																"nodeType": "YulFunctionCall",
																"src": "5037:21:9"
															},
															"nativeSrc": "5037:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "5037:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5078:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5078:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5089:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5089:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5074:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5074:3:9"
																		},
																		"nativeSrc": "5074:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5074:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5094:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5094:2:9",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5067:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5067:6:9"
																},
																"nativeSrc": "5067:30:9",
																"nodeType": "YulFunctionCall",
																"src": "5067:30:9"
															},
															"nativeSrc": "5067:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "5067:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5117:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5117:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5128:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5128:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5113:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5113:3:9"
																		},
																		"nativeSrc": "5113:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5113:18:9"
																	},
																	{
																		"hexValue": "48616c76696e67207261746520746f6f2068696768",
																		"kind": "string",
																		"nativeSrc": "5133:23:9",
																		"nodeType": "YulLiteral",
																		"src": "5133:23:9",
																		"type": "",
																		"value": "Halving rate too high"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5106:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5106:6:9"
																},
																"nativeSrc": "5106:51:9",
																"nodeType": "YulFunctionCall",
																"src": "5106:51:9"
															},
															"nativeSrc": "5106:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "5106:51:9"
														},
														{
															"nativeSrc": "5166:26:9",
															"nodeType": "YulAssignment",
															"src": "5166:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5178:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5178:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5189:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5189:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5174:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5174:3:9"
																},
																"nativeSrc": "5174:18:9",
																"nodeType": "YulFunctionCall",
																"src": "5174:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5166:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5166:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2e96fdf67c9a0dad3ac1d60e5f88d1dea6af5eff3e2029d19a787ff8fa105135__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4853:345:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5004:9:9",
														"nodeType": "YulTypedName",
														"src": "5004:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5018:4:9",
														"nodeType": "YulTypedName",
														"src": "5018:4:9",
														"type": ""
													}
												],
												"src": "4853:345:9"
											},
											{
												"body": {
													"nativeSrc": "5377:178:9",
													"nodeType": "YulBlock",
													"src": "5377:178:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5394:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5394:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5405:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5405:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5387:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5387:6:9"
																},
																"nativeSrc": "5387:21:9",
																"nodeType": "YulFunctionCall",
																"src": "5387:21:9"
															},
															"nativeSrc": "5387:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "5387:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5428:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5428:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5439:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5439:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5424:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5424:3:9"
																		},
																		"nativeSrc": "5424:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5424:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5444:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5444:2:9",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5417:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5417:6:9"
																},
																"nativeSrc": "5417:30:9",
																"nodeType": "YulFunctionCall",
																"src": "5417:30:9"
															},
															"nativeSrc": "5417:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "5417:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5467:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5467:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5478:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5478:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5463:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5463:3:9"
																		},
																		"nativeSrc": "5463:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5463:18:9"
																	},
																	{
																		"hexValue": "48616c76696e6720696e74657276616c206e6f742072656163686564",
																		"kind": "string",
																		"nativeSrc": "5483:30:9",
																		"nodeType": "YulLiteral",
																		"src": "5483:30:9",
																		"type": "",
																		"value": "Halving interval not reached"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5456:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5456:6:9"
																},
																"nativeSrc": "5456:58:9",
																"nodeType": "YulFunctionCall",
																"src": "5456:58:9"
															},
															"nativeSrc": "5456:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "5456:58:9"
														},
														{
															"nativeSrc": "5523:26:9",
															"nodeType": "YulAssignment",
															"src": "5523:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5535:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5535:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5546:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5546:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5531:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5531:3:9"
																},
																"nativeSrc": "5531:18:9",
																"nodeType": "YulFunctionCall",
																"src": "5531:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5523:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5523:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_78c4f9f3f3ed4ed6c78e4a6a7613e359adf3a3d4265b99c6653232671bf676f8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5203:352:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5354:9:9",
														"nodeType": "YulTypedName",
														"src": "5354:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5368:4:9",
														"nodeType": "YulTypedName",
														"src": "5368:4:9",
														"type": ""
													}
												],
												"src": "5203:352:9"
											},
											{
												"body": {
													"nativeSrc": "5609:79:9",
													"nodeType": "YulBlock",
													"src": "5609:79:9",
													"statements": [
														{
															"nativeSrc": "5619:17:9",
															"nodeType": "YulAssignment",
															"src": "5619:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5631:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "5631:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5634:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "5634:1:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "5627:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5627:3:9"
																},
																"nativeSrc": "5627:9:9",
																"nodeType": "YulFunctionCall",
																"src": "5627:9:9"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "5619:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5619:4:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5660:22:9",
																"nodeType": "YulBlock",
																"src": "5660:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5662:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "5662:16:9"
																			},
																			"nativeSrc": "5662:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5662:18:9"
																		},
																		"nativeSrc": "5662:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5662:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "5651:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "5651:4:9"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "5657:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "5657:1:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5648:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "5648:2:9"
																},
																"nativeSrc": "5648:11:9",
																"nodeType": "YulFunctionCall",
																"src": "5648:11:9"
															},
															"nativeSrc": "5645:37:9",
															"nodeType": "YulIf",
															"src": "5645:37:9"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "5560:128:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5591:1:9",
														"nodeType": "YulTypedName",
														"src": "5591:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5594:1:9",
														"nodeType": "YulTypedName",
														"src": "5594:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "5600:4:9",
														"nodeType": "YulTypedName",
														"src": "5600:4:9",
														"type": ""
													}
												],
												"src": "5560:128:9"
											},
											{
												"body": {
													"nativeSrc": "5822:119:9",
													"nodeType": "YulBlock",
													"src": "5822:119:9",
													"statements": [
														{
															"nativeSrc": "5832:26:9",
															"nodeType": "YulAssignment",
															"src": "5832:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5844:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5844:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5855:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5855:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5840:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5840:3:9"
																},
																"nativeSrc": "5840:18:9",
																"nodeType": "YulFunctionCall",
																"src": "5840:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5832:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5832:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5874:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5874:9:9"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "5885:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5885:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5867:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5867:6:9"
																},
																"nativeSrc": "5867:25:9",
																"nodeType": "YulFunctionCall",
																"src": "5867:25:9"
															},
															"nativeSrc": "5867:25:9",
															"nodeType": "YulExpressionStatement",
															"src": "5867:25:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5912:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5912:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5923:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5923:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5908:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5908:3:9"
																		},
																		"nativeSrc": "5908:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5908:18:9"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5928:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5928:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5901:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5901:6:9"
																},
																"nativeSrc": "5901:34:9",
																"nodeType": "YulFunctionCall",
																"src": "5901:34:9"
															},
															"nativeSrc": "5901:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "5901:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "5693:248:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5783:9:9",
														"nodeType": "YulTypedName",
														"src": "5783:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5794:6:9",
														"nodeType": "YulTypedName",
														"src": "5794:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5802:6:9",
														"nodeType": "YulTypedName",
														"src": "5802:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5813:4:9",
														"nodeType": "YulTypedName",
														"src": "5813:4:9",
														"type": ""
													}
												],
												"src": "5693:248:9"
											},
											{
												"body": {
													"nativeSrc": "6103:188:9",
													"nodeType": "YulBlock",
													"src": "6103:188:9",
													"statements": [
														{
															"nativeSrc": "6113:26:9",
															"nodeType": "YulAssignment",
															"src": "6113:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6125:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6125:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6136:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6136:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6121:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6121:3:9"
																},
																"nativeSrc": "6121:18:9",
																"nodeType": "YulFunctionCall",
																"src": "6121:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6113:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6113:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6155:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6155:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6170:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "6170:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6186:3:9",
																								"nodeType": "YulLiteral",
																								"src": "6186:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6191:1:9",
																								"nodeType": "YulLiteral",
																								"src": "6191:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6182:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "6182:3:9"
																						},
																						"nativeSrc": "6182:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "6182:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6195:1:9",
																						"nodeType": "YulLiteral",
																						"src": "6195:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6178:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6178:3:9"
																				},
																				"nativeSrc": "6178:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6178:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6166:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6166:3:9"
																		},
																		"nativeSrc": "6166:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6166:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6148:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6148:6:9"
																},
																"nativeSrc": "6148:51:9",
																"nodeType": "YulFunctionCall",
																"src": "6148:51:9"
															},
															"nativeSrc": "6148:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "6148:51:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6219:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6219:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6230:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6230:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6215:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6215:3:9"
																		},
																		"nativeSrc": "6215:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6215:18:9"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "6235:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6235:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6208:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6208:6:9"
																},
																"nativeSrc": "6208:34:9",
																"nodeType": "YulFunctionCall",
																"src": "6208:34:9"
															},
															"nativeSrc": "6208:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "6208:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6262:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6262:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6273:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6273:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6258:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6258:3:9"
																		},
																		"nativeSrc": "6258:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6258:18:9"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "6278:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6278:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6251:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6251:6:9"
																},
																"nativeSrc": "6251:34:9",
																"nodeType": "YulFunctionCall",
																"src": "6251:34:9"
															},
															"nativeSrc": "6251:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "6251:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "5946:345:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6056:9:9",
														"nodeType": "YulTypedName",
														"src": "6056:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6067:6:9",
														"nodeType": "YulTypedName",
														"src": "6067:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6075:6:9",
														"nodeType": "YulTypedName",
														"src": "6075:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6083:6:9",
														"nodeType": "YulTypedName",
														"src": "6083:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6094:4:9",
														"nodeType": "YulTypedName",
														"src": "6094:4:9",
														"type": ""
													}
												],
												"src": "5946:345:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_stringliteral_d6ef7acea0261efd64d5d7c6dec050eec6b82a90a97a4ff7324326876f46a190__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Token does not accept ETH\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_d9685d7b83f94a8526cd378518e03ae5cdd64f3bc22b0ae59b808c415888bde8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Halving rate too low\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2e96fdf67c9a0dad3ac1d60e5f88d1dea6af5eff3e2029d19a787ff8fa105135__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Halving rate too high\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_78c4f9f3f3ed4ed6c78e4a6a7613e359adf3a3d4265b99c6653232671bf676f8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Halving interval not reached\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610143575f3560e01c8063768a4173116100b557806395d89b411161006e57806395d89b41146103f7578063a9059cbb1461040b578063bbb0b1a61461042a578063dd62ed3e14610449578063ed2990161461048d578063f2fde38b146104a157610191565b8063768a41731461035e57806379cc6790146103725780637e6335f4146103915780637f51bb1f146103a65780638cbb6df7146103c55780638da5cb5b146103da57610191565b8063313ce56711610107578063313ce5671461028e57806342966c68146102a957806361d027b3146102ca5780636a47aa061461030157806370a0823114610316578063715018a61461034a57610191565b806306fdde03146101d5578063095ea7b3146101ff578063102b67ab1461022e57806318160ddd1461025b57806323b872dd1461026f57610191565b366101915760405162461bcd60e51b81526020600482015260196024820152780a8ded6cadc40c8decae640dcdee840c2c6c6cae0e8408aa89603b1b60448201526064015b60405180910390fd5b60405162461bcd60e51b81526020600482015260196024820152780a8ded6cadc40c8decae640dcdee840c2c6c6cae0e8408aa89603b1b6044820152606401610188565b3480156101e0575f5ffd5b506101e96104c0565b6040516101f69190610c4f565b60405180910390f35b34801561020a575f5ffd5b5061021e610219366004610c9f565b610550565b60405190151581526020016101f6565b348015610239575f5ffd5b5061024d610248366004610cc7565b610569565b6040519081526020016101f6565b348015610266575f5ffd5b5060025461024d565b34801561027a575f5ffd5b5061021e610289366004610cde565b6105a0565b348015610299575f5ffd5b50604051601281526020016101f6565b3480156102b4575f5ffd5b506102c86102c3366004610cc7565b6105c9565b005b3480156102d5575f5ffd5b506007546102e9906001600160a01b031681565b6040516001600160a01b0390911681526020016101f6565b34801561030c575f5ffd5b5061024d60085481565b348015610321575f5ffd5b5061024d610330366004610d18565b6001600160a01b03165f9081526020819052604090205490565b348015610355575f5ffd5b506102c86105d6565b348015610369575f5ffd5b5061021e6105e9565b34801561037d575f5ffd5b506102c861038c366004610c9f565b61060f565b34801561039c575f5ffd5b5061024d600a5481565b3480156103b1575f5ffd5b506102c86103c0366004610d18565b610628565b3480156103d0575f5ffd5b5061024d60095481565b3480156103e5575f5ffd5b506005546001600160a01b03166102e9565b348015610402575f5ffd5b506101e9610652565b348015610416575f5ffd5b5061021e610425366004610c9f565b610661565b348015610435575f5ffd5b506102c8610444366004610d31565b610681565b348015610454575f5ffd5b5061024d610463366004610d51565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b348015610498575f5ffd5b506102c8610725565b3480156104ac575f5ffd5b506102c86104bb366004610d18565b61082a565b6060600380546104cf90610d82565b80601f01602080910402602001604051908101604052809291908181526020018280546104fb90610d82565b80156105465780601f1061051d57610100808354040283529160200191610546565b820191905f5260205f20905b81548152906001019060200180831161052957829003601f168201915b5050505050905090565b5f3361055d818585610864565b60019150505b92915050565b6007546001600160a01b03165f90815260208190526040812054606461058f8483610dce565b6105999190610de5565b9392505050565b5f6105a96105e9565b156105b6576105b6610725565b6105c1848484610876565b949350505050565b6105d33382610899565b50565b6105de6108cd565b6105e75f6108fa565b565b5f6107086008546009546105fd9190610e04565b6106079190610e04565b421015905090565b61061a82338361094b565b6106248282610899565b5050565b6106306108cd565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b6060600480546104cf90610d82565b5f61066a6105e9565b1561067757610677610725565b61059983836109c7565b6106896108cd565b60058110156106d15760405162461bcd60e51b815260206004820152601460248201527348616c76696e67207261746520746f6f206c6f7760601b6044820152606401610188565b601481111561071a5760405162461bcd60e51b8152602060048201526015602482015274090c2d8ecd2dcce40e4c2e8ca40e8dede40d0d2ced605b1b6044820152606401610188565b600891909155600a55565b61072d6109d4565b6107356105e9565b6107815760405162461bcd60e51b815260206004820152601c60248201527f48616c76696e6720696e74657276616c206e6f742072656163686564000000006044820152606401610188565b6007546001600160a01b03165f9081526020819052604081205490505f6064600a54836107ae9190610dce565b6107b89190610de5565b9050801561081e576007546107d6906001600160a01b031682610899565b6107e261070842610e17565b600955604080518281524260208201527f394823b0bcaf78cd8f5876a52c05dbab91512a05f5da2a31e239a11ab66d605f910160405180910390a15b50506105e76001600655565b6108326108cd565b6001600160a01b03811661085b57604051631e4fbdf760e01b81525f6004820152602401610188565b6105d3816108fa565b61087183838360016109fe565b505050565b5f3361088385828561094b565b61088e858585610ad0565b506001949350505050565b6001600160a01b0382166108c257604051634b637e8f60e11b81525f6004820152602401610188565b610624825f83610b29565b6005546001600160a01b031633146105e75760405163118cdaa760e01b8152336004820152602401610188565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f198110156109c157818110156109b357604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610188565b6109c184848484035f6109fe565b50505050565b5f3361055d818585610ad0565b6002600654036109f757604051633ee5aeb560e01b815260040160405180910390fd5b6002600655565b6001600160a01b038416610a275760405163e602df0560e01b81525f6004820152602401610188565b6001600160a01b038316610a5057604051634a1406b160e11b81525f6004820152602401610188565b6001600160a01b038085165f90815260016020908152604080832093871683529290522082905580156109c157826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610ac291815260200190565b60405180910390a350505050565b6001600160a01b038316610af957604051634b637e8f60e11b81525f6004820152602401610188565b6001600160a01b038216610b225760405163ec442f0560e01b81525f6004820152602401610188565b6108718383835b6001600160a01b038316610b53578060025f828254610b489190610e04565b90915550610bc39050565b6001600160a01b0383165f9081526020819052604090205481811015610ba55760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610188565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b038216610bdf57600280548290039055610bfd565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610c4291815260200190565b60405180910390a3505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b0381168114610c9a575f5ffd5b919050565b5f5f60408385031215610cb0575f5ffd5b610cb983610c84565b946020939093013593505050565b5f60208284031215610cd7575f5ffd5b5035919050565b5f5f5f60608486031215610cf0575f5ffd5b610cf984610c84565b9250610d0760208501610c84565b929592945050506040919091013590565b5f60208284031215610d28575f5ffd5b61059982610c84565b5f5f60408385031215610d42575f5ffd5b50508035926020909101359150565b5f5f60408385031215610d62575f5ffd5b610d6b83610c84565b9150610d7960208401610c84565b90509250929050565b600181811c90821680610d9657607f821691505b602082108103610db457634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b808202811582820484141761056357610563610dba565b5f82610dff57634e487b7160e01b5f52601260045260245ffd5b500490565b8082018082111561056357610563610dba565b8181038181111561056357610563610dba56fea264697066735822122059cf05bc20986ac4dae2d4ad43851b784b3a7454e95a591ef88d1b40a443667e64736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x143 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x768A4173 GT PUSH2 0xB5 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x40B JUMPI DUP1 PUSH4 0xBBB0B1A6 EQ PUSH2 0x42A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x449 JUMPI DUP1 PUSH4 0xED299016 EQ PUSH2 0x48D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4A1 JUMPI PUSH2 0x191 JUMP JUMPDEST DUP1 PUSH4 0x768A4173 EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0x7E6335F4 EQ PUSH2 0x391 JUMPI DUP1 PUSH4 0x7F51BB1F EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0x8CBB6DF7 EQ PUSH2 0x3C5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3DA JUMPI PUSH2 0x191 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x107 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2A9 JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0x6A47AA06 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x34A JUMPI PUSH2 0x191 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x102B67AB EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x26F JUMPI PUSH2 0x191 JUMP JUMPDEST CALLDATASIZE PUSH2 0x191 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0xA8DED6CADC40C8DECAE640DCDEE840C2C6C6CAE0E8408AA89 PUSH1 0x3B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0xA8DED6CADC40C8DECAE640DCDEE840C2C6C6CAE0E8408AA89 PUSH1 0x3B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x188 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1E9 PUSH2 0x4C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0xC4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x21E PUSH2 0x219 CALLDATASIZE PUSH1 0x4 PUSH2 0xC9F JUMP JUMPDEST PUSH2 0x550 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x239 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x24D PUSH2 0x248 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC7 JUMP JUMPDEST PUSH2 0x569 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x266 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x24D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x21E PUSH2 0x289 CALLDATASIZE PUSH1 0x4 PUSH2 0xCDE JUMP JUMPDEST PUSH2 0x5A0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x299 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH2 0x2C3 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC7 JUMP JUMPDEST PUSH2 0x5C9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x2E9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x24D PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x321 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x24D PUSH2 0x330 CALLDATASIZE PUSH1 0x4 PUSH2 0xD18 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x355 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH2 0x5D6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x369 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x21E PUSH2 0x5E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH2 0x38C CALLDATASIZE PUSH1 0x4 PUSH2 0xC9F JUMP JUMPDEST PUSH2 0x60F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x24D PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH2 0x3C0 CALLDATASIZE PUSH1 0x4 PUSH2 0xD18 JUMP JUMPDEST PUSH2 0x628 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x24D PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x402 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1E9 PUSH2 0x652 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x416 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x21E PUSH2 0x425 CALLDATASIZE PUSH1 0x4 PUSH2 0xC9F JUMP JUMPDEST PUSH2 0x661 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x435 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH2 0x444 CALLDATASIZE PUSH1 0x4 PUSH2 0xD31 JUMP JUMPDEST PUSH2 0x681 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x454 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x24D PUSH2 0x463 CALLDATASIZE PUSH1 0x4 PUSH2 0xD51 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x498 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH2 0x725 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH2 0x4BB CALLDATASIZE PUSH1 0x4 PUSH2 0xD18 JUMP JUMPDEST PUSH2 0x82A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4CF SWAP1 PUSH2 0xD82 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4FB SWAP1 PUSH2 0xD82 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x546 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x51D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x546 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x529 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x55D DUP2 DUP6 DUP6 PUSH2 0x864 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x64 PUSH2 0x58F DUP5 DUP4 PUSH2 0xDCE JUMP JUMPDEST PUSH2 0x599 SWAP2 SWAP1 PUSH2 0xDE5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5A9 PUSH2 0x5E9 JUMP JUMPDEST ISZERO PUSH2 0x5B6 JUMPI PUSH2 0x5B6 PUSH2 0x725 JUMP JUMPDEST PUSH2 0x5C1 DUP5 DUP5 DUP5 PUSH2 0x876 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x5D3 CALLER DUP3 PUSH2 0x899 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x5DE PUSH2 0x8CD JUMP JUMPDEST PUSH2 0x5E7 PUSH0 PUSH2 0x8FA JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x708 PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH2 0x5FD SWAP2 SWAP1 PUSH2 0xE04 JUMP JUMPDEST PUSH2 0x607 SWAP2 SWAP1 PUSH2 0xE04 JUMP JUMPDEST TIMESTAMP LT ISZERO SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x61A DUP3 CALLER DUP4 PUSH2 0x94B JUMP JUMPDEST PUSH2 0x624 DUP3 DUP3 PUSH2 0x899 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x630 PUSH2 0x8CD JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x4CF SWAP1 PUSH2 0xD82 JUMP JUMPDEST PUSH0 PUSH2 0x66A PUSH2 0x5E9 JUMP JUMPDEST ISZERO PUSH2 0x677 JUMPI PUSH2 0x677 PUSH2 0x725 JUMP JUMPDEST PUSH2 0x599 DUP4 DUP4 PUSH2 0x9C7 JUMP JUMPDEST PUSH2 0x689 PUSH2 0x8CD JUMP JUMPDEST PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x6D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x48616C76696E67207261746520746F6F206C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x188 JUMP JUMPDEST PUSH1 0x14 DUP2 GT ISZERO PUSH2 0x71A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x90C2D8ECD2DCCE40E4C2E8CA40E8DEDE40D0D2CED PUSH1 0x5B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x188 JUMP JUMPDEST PUSH1 0x8 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0xA SSTORE JUMP JUMPDEST PUSH2 0x72D PUSH2 0x9D4 JUMP JUMPDEST PUSH2 0x735 PUSH2 0x5E9 JUMP JUMPDEST PUSH2 0x781 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x48616C76696E6720696E74657276616C206E6F74207265616368656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x188 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH1 0x64 PUSH1 0xA SLOAD DUP4 PUSH2 0x7AE SWAP2 SWAP1 PUSH2 0xDCE JUMP JUMPDEST PUSH2 0x7B8 SWAP2 SWAP1 PUSH2 0xDE5 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x81E JUMPI PUSH1 0x7 SLOAD PUSH2 0x7D6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH2 0x899 JUMP JUMPDEST PUSH2 0x7E2 PUSH2 0x708 TIMESTAMP PUSH2 0xE17 JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x394823B0BCAF78CD8F5876A52C05DBAB91512A05F5DA2A31E239A11AB66D605F SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP PUSH2 0x5E7 PUSH1 0x1 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0x832 PUSH2 0x8CD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x85B JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x188 JUMP JUMPDEST PUSH2 0x5D3 DUP2 PUSH2 0x8FA JUMP JUMPDEST PUSH2 0x871 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x9FE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x883 DUP6 DUP3 DUP6 PUSH2 0x94B JUMP JUMPDEST PUSH2 0x88E DUP6 DUP6 DUP6 PUSH2 0xAD0 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8C2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x188 JUMP JUMPDEST PUSH2 0x624 DUP3 PUSH0 DUP4 PUSH2 0xB29 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5E7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x188 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 LT ISZERO PUSH2 0x9C1 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x9B3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x188 JUMP JUMPDEST PUSH2 0x9C1 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x9FE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x55D DUP2 DUP6 DUP6 PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x9F7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xA27 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x188 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA50 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x188 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x9C1 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xAC2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xAF9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x188 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB22 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x188 JUMP JUMPDEST PUSH2 0x871 DUP4 DUP4 DUP4 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB53 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB48 SWAP2 SWAP1 PUSH2 0xE04 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xBC3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xBA5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x188 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBDF JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xC42 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC9A JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCB0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xCB9 DUP4 PUSH2 0xC84 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCD7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xCF0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xCF9 DUP5 PUSH2 0xC84 JUMP JUMPDEST SWAP3 POP PUSH2 0xD07 PUSH1 0x20 DUP6 ADD PUSH2 0xC84 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD28 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x599 DUP3 PUSH2 0xC84 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD42 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD62 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xD6B DUP4 PUSH2 0xC84 JUMP JUMPDEST SWAP2 POP PUSH2 0xD79 PUSH1 0x20 DUP5 ADD PUSH2 0xC84 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xD96 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDB4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x563 JUMPI PUSH2 0x563 PUSH2 0xDBA JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xDFF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x563 JUMPI PUSH2 0x563 PUSH2 0xDBA JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x563 JUMPI PUSH2 0x563 PUSH2 0xDBA JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE 0xCF SDIV 0xBC KECCAK256 SWAP9 PUSH11 0xC4DAE2D4AD43851B784B3A PUSH21 0x54E95A591EF88D1B40A443667E64736F6C63430008 SAR STOP CALLER ",
							"sourceMap": "563:3967:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4485:35;;-1:-1:-1;;;4485:35:8;;216:2:9;4485:35:8;;;198:21:9;255:2;235:18;;;228:30;-1:-1:-1;;;274:18:9;;;267:55;339:18;;4485:35:8;;;;;;;;563:3967;4396:35;;-1:-1:-1;;;4396:35:8;;216:2:9;4396:35:8;;;198:21:9;255:2;235:18;;;228:30;-1:-1:-1;;;274:18:9;;;267:55;339:18;;4396:35:8;14:349:9;1779:89:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;-1:-1:-1;3998:186:2;;;;;:::i;:::-;;:::i;:::-;;;1439:14:9;;1432:22;1414:41;;1402:2;1387:18;3998:186:2;1274:187:9;3746:178:8;;;;;;;;;;-1:-1:-1;3746:178:8;;;;;:::i;:::-;;:::i;:::-;;;1843:25:9;;;1831:2;1816:18;3746:178:8;1697:177:9;2849:97:2;;;;;;;;;;-1:-1:-1;2927:12:2;;2849:97;;4133:219:8;;;;;;;;;;-1:-1:-1;4133:219:8;;;;;:::i;:::-;;:::i;2707:82:2:-;;;;;;;;;;-1:-1:-1;2707:82:2;;2780:2;2400:36:9;;2388:2;2373:18;2707:82:2;2258:184:9;618:87:4;;;;;;;;;;-1:-1:-1;618:87:4;;;;;:::i;:::-;;:::i;:::-;;691:23:8;;;;;;;;;;-1:-1:-1;691:23:8;;;;-1:-1:-1;;;;;691:23:8;;;;;;-1:-1:-1;;;;;2611:32:9;;;2593:51;;2581:2;2566:18;691:23:8;2447:203:9;762:30:8;;;;;;;;;;;;;;;;3004:116:2;;;;;;;;;;-1:-1:-1;3004:116:2;;;;;:::i;:::-;-1:-1:-1;;;;;3095:18:2;3069:7;3095:18;;;;;;;;;;;;3004:116;2293:101:0;;;;;;;;;;;;;:::i;2357:147:8:-;;;;;;;;;;;;;:::i;1021:158:4:-;;;;;;;;;;-1:-1:-1;1021:158:4;;;;;:::i;:::-;;:::i;937:26:8:-;;;;;;;;;;;;;;;;3643:97;;;;;;;;;;-1:-1:-1;3643:97:8;;;;;:::i;:::-;;:::i;840:30::-;;;;;;;;;;;;;;;;1638:85:0;;;;;;;;;;-1:-1:-1;1710:6:0;;-1:-1:-1;;;;;1710:6:0;1638:85;;1981:93:2;;;;;;;;;;;;;:::i;3930:197:8:-;;;;;;;;;;-1:-1:-1;3930:197:8;;;;;:::i;:::-;;:::i;3245:332::-;;;;;;;;;;-1:-1:-1;3245:332:8;;;;;:::i;:::-;;:::i;3551:140:2:-;;;;;;;;;;-1:-1:-1;3551:140:2;;;;;:::i;:::-;-1:-1:-1;;;;;3657:18:2;;;3631:7;3657:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3551:140;2576:601:8;;;;;;;;;;;;;:::i;2543:215:0:-;;;;;;;;;;-1:-1:-1;2543:215:0;;;;;:::i;:::-;;:::i;1779:89:2:-;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;735:10:6;4125:31:2;735:10:6;4141:7:2;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;;:::o;3746:178:8:-;3861:8;;-1:-1:-1;;;;;3861:8:8;3806:7;3095:18:2;;;;;;;;;;;3914:3:8;3888:22;3906:4;3825:45;3888:22;:::i;:::-;3887:30;;;;:::i;:::-;3880:37;3746:178;-1:-1:-1;;;3746:178:8:o;4133:219::-;4282:4;1590:14;:12;:14::i;:::-;1586:61;;;1620:16;:14;:16::i;:::-;4309:36:::1;4328:4;4334:2;4338:6;4309:18;:36::i;:::-;4302:43:::0;4133:219;-1:-1:-1;;;;4133:219:8:o;618:87:4:-;672:26;735:10:6;692:5:4;672;:26::i;:::-;618:87;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2357:147:8:-;2402:4;1436;2463:15;;2445;;:33;;;;:::i;:::-;:51;;;;:::i;:::-;2425:15;:72;;2418:79;;2357:147;:::o;1021:158:4:-;1096:45;1112:7;735:10:6;1135:5:4;1096:15;:45::i;:::-;1151:21;1157:7;1166:5;1151;:21::i;:::-;1021:158;;:::o;3643:97:8:-;1531:13:0;:11;:13::i;:::-;3713:8:8::1;:20:::0;;-1:-1:-1;;;;;;3713:20:8::1;-1:-1:-1::0;;;;;3713:20:8;;;::::1;::::0;;;::::1;::::0;;3643:97::o;1981:93:2:-;2028:13;2060:7;2053:14;;;;;:::i;3930:197:8:-;4066:4;1590:14;:12;:14::i;:::-;1586:61;;;1620:16;:14;:16::i;:::-;4094:26:::1;4109:2;4113:6;4094:14;:26::i;3245:332::-:0;1531:13:0;:11;:13::i;:::-;1014:1:8::1;3357:12;:32;;3349:65;;;::::0;-1:-1:-1;;;3349:65:8;;4706:2:9;3349:65:8::1;::::0;::::1;4688:21:9::0;4745:2;4725:18;;;4718:30;-1:-1:-1;;;4764:18:9;;;4757:50;4824:18;;3349:65:8::1;4504:344:9::0;3349:65:8::1;1072:2;3432:12;:32;;3424:66;;;::::0;-1:-1:-1;;;3424:66:8;;5055:2:9;3424:66:8::1;::::0;::::1;5037:21:9::0;5094:2;5074:18;;;5067:30;-1:-1:-1;;;5113:18:9;;;5106:51;5174:18;;3424:66:8::1;4853:345:9::0;3424:66:8::1;3500:15;:34:::0;;;;3544:11:::1;:26:::0;3245:332::o;2576:601::-;2500:21:7;:19;:21::i;:::-;2640:14:8::1;:12;:14::i;:::-;2632:55;;;::::0;-1:-1:-1;;;2632:55:8;;5405:2:9;2632:55:8::1;::::0;::::1;5387:21:9::0;5444:2;5424:18;;;5417:30;5483;5463:18;;;5456:58;5531:18;;2632:55:8::1;5203:352:9::0;2632:55:8::1;2742:8;::::0;-1:-1:-1;;;;;2742:8:8::1;2706:23;3095:18:2::0;;;;;;;;;;;2706:45:8::1;;2761:18;2816:3;2801:11;;2783:15;:29;;;;:::i;:::-;2782:37;;;;:::i;:::-;2761:58:::0;-1:-1:-1;2842:14:8;;2838:333:::1;;2919:8;::::0;2913:27:::1;::::0;-1:-1:-1;;;;;2919:8:8::1;2929:10:::0;2913:5:::1;:27::i;:::-;3025:33;1436:4;3025:15;:33;:::i;:::-;3007:15;:51:::0;3124:36:::1;::::0;;5867:25:9;;;3144:15:8::1;5923:2:9::0;5908:18;;5901:34;3124:36:8::1;::::0;5840:18:9;3124:36:8::1;;;;;;;2838:333;2622:555;;2542:20:7::0;1857:1;3068:7;:21;2888:208;2543:215:0;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;2593:51:9::0;2566:18;;2672:31:0::1;2447:203:9::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;8726:128:2:-:0;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;4776:244::-;4863:4;735:10:6;4919:37:2;4935:4;735:10:6;4950:5:2;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;-1:-1:-1;5009:4:2;;4776:244;-1:-1:-1;;;;4776:244:2:o;7984:206::-;-1:-1:-1;;;;;8054:21:2;;8050:89;;8098:30;;-1:-1:-1;;;8098:30:2;;8125:1;8098:30;;;2593:51:9;2566:18;;8098:30:2;2447:203:9;8050:89:2;8148:35;8156:7;8173:1;8177:5;8148:7;:35::i;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:6;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:6;1901:40:0;;;2593:51:9;2566:18;;1901:40:0;2447:203:9;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;10415:476:2:-;-1:-1:-1;;;;;3657:18:2;;;10514:24;3657:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10580:36:2;;10576:309;;;10655:5;10636:16;:24;10632:130;;;10687:60;;-1:-1:-1;;;10687:60:2;;-1:-1:-1;;;;;6166:32:9;;10687:60:2;;;6148:51:9;6215:18;;;6208:34;;;6258:18;;;6251:34;;;6121:18;;10687:60:2;5946:345:9;10632:130:2;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10504:387;10415:476;;;:::o;3315:178::-;3384:4;735:10:6;3438:27:2;735:10:6;3455:2:2;3459:5;3438:9;:27::i;2575:307:7:-;1899:1;2702:7;;:18;2698:86;;2743:30;;-1:-1:-1;;;2743:30:7;;;;;;;;;;;2698:86;1899:1;2858:7;:17;2575:307::o;9701:432:2:-;-1:-1:-1;;;;;9813:19:2;;9809:89;;9855:32;;-1:-1:-1;;;9855:32:2;;9884:1;9855:32;;;2593:51:9;2566:18;;9855:32:2;2447:203:9;9809:89:2;-1:-1:-1;;;;;9911:21:2;;9907:90;;9955:31;;-1:-1:-1;;;9955:31:2;;9983:1;9955:31;;;2593:51:9;2566:18;;9955:31:2;2447:203:9;9907:90:2;-1:-1:-1;;;;;10006:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10051:76;;;;10101:7;-1:-1:-1;;;;;10085:31:2;10094:5;-1:-1:-1;;;;;10085:31:2;;10110:5;10085:31;;;;1843:25:9;;1831:2;1816:18;;1697:177;10085:31:2;;;;;;;;9701:432;;;;:::o;5393:300::-;-1:-1:-1;;;;;5476:18:2;;5472:86;;5517:30;;-1:-1:-1;;;5517:30:2;;5544:1;5517:30;;;2593:51:9;2566:18;;5517:30:2;2447:203:9;5472:86:2;-1:-1:-1;;;;;5571:16:2;;5567:86;;5610:32;;-1:-1:-1;;;5610:32:2;;5639:1;5610:32;;;2593:51:9;2566:18;;5610:32:2;2447:203:9;5567:86:2;5662:24;5670:4;5676:2;5680:5;6008:1107;-1:-1:-1;;;;;6097:18:2;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6093:540:2;;-1:-1:-1;6093:540:2;;-1:-1:-1;;;;;6307:15:2;;6285:19;6307:15;;;;;;;;;;;6340:19;;;6336:115;;;6386:50;;-1:-1:-1;;;6386:50:2;;-1:-1:-1;;;;;6166:32:9;;6386:50:2;;;6148:51:9;6215:18;;;6208:34;;;6258:18;;;6251:34;;;6121:18;;6386:50:2;5946:345:9;6336:115:2;-1:-1:-1;;;;;6571:15:2;;:9;:15;;;;;;;;;;6589:19;;;;6571:37;;6093:540;-1:-1:-1;;;;;6647:16:2;;6643:425;;6810:12;:21;;;;;;;6643:425;;;-1:-1:-1;;;;;7021:13:2;;:9;:13;;;;;;;;;;:22;;;;;;6643:425;7098:2;-1:-1:-1;;;;;7083:25:2;7092:4;-1:-1:-1;;;;;7083:25:2;;7102:5;7083:25;;;;1843::9;;1831:2;1816:18;;1697:177;7083:25:2;;;;;;;;6008:1107;;;:::o;368:418:9:-;517:2;506:9;499:21;480:4;549:6;543:13;592:6;587:2;576:9;572:18;565:34;651:6;646:2;638:6;634:15;629:2;618:9;614:18;608:50;707:1;702:2;693:6;682:9;678:22;674:31;667:42;777:2;770;766:7;761:2;753:6;749:15;745:29;734:9;730:45;726:54;718:62;;;368:418;;;;:::o;791:173::-;859:20;;-1:-1:-1;;;;;908:31:9;;898:42;;888:70;;954:1;951;944:12;888:70;791:173;;;:::o;969:300::-;1037:6;1045;1098:2;1086:9;1077:7;1073:23;1069:32;1066:52;;;1114:1;1111;1104:12;1066:52;1137:29;1156:9;1137:29;:::i;:::-;1127:39;1235:2;1220:18;;;;1207:32;;-1:-1:-1;;;969:300:9:o;1466:226::-;1525:6;1578:2;1566:9;1557:7;1553:23;1549:32;1546:52;;;1594:1;1591;1584:12;1546:52;-1:-1:-1;1639:23:9;;1466:226;-1:-1:-1;1466:226:9:o;1879:374::-;1956:6;1964;1972;2025:2;2013:9;2004:7;2000:23;1996:32;1993:52;;;2041:1;2038;2031:12;1993:52;2064:29;2083:9;2064:29;:::i;:::-;2054:39;;2112:38;2146:2;2135:9;2131:18;2112:38;:::i;:::-;1879:374;;2102:48;;-1:-1:-1;;;2219:2:9;2204:18;;;;2191:32;;1879:374::o;2655:186::-;2714:6;2767:2;2755:9;2746:7;2742:23;2738:32;2735:52;;;2783:1;2780;2773:12;2735:52;2806:29;2825:9;2806:29;:::i;2846:346::-;2914:6;2922;2975:2;2963:9;2954:7;2950:23;2946:32;2943:52;;;2991:1;2988;2981:12;2943:52;-1:-1:-1;;3036:23:9;;;3156:2;3141:18;;;3128:32;;-1:-1:-1;2846:346:9:o;3197:260::-;3265:6;3273;3326:2;3314:9;3305:7;3301:23;3297:32;3294:52;;;3342:1;3339;3332:12;3294:52;3365:29;3384:9;3365:29;:::i;:::-;3355:39;;3413:38;3447:2;3436:9;3432:18;3413:38;:::i;:::-;3403:48;;3197:260;;;;;:::o;3462:380::-;3541:1;3537:12;;;;3584;;;3605:61;;3659:4;3651:6;3647:17;3637:27;;3605:61;3712:2;3704:6;3701:14;3681:18;3678:38;3675:161;;3758:10;3753:3;3749:20;3746:1;3739:31;3793:4;3790:1;3783:15;3821:4;3818:1;3811:15;3675:161;;3462:380;;;:::o;3847:127::-;3908:10;3903:3;3899:20;3896:1;3889:31;3939:4;3936:1;3929:15;3963:4;3960:1;3953:15;3979:168;4052:9;;;4083;;4100:15;;;4094:22;;4080:37;4070:71;;4121:18;;:::i;4152:217::-;4192:1;4218;4208:132;;4262:10;4257:3;4253:20;4250:1;4243:31;4297:4;4294:1;4287:15;4325:4;4322:1;4315:15;4208:132;-1:-1:-1;4354:9:9;;4152:217::o;4374:125::-;4439:9;;;4460:10;;;4457:36;;;4473:18;;:::i;5560:128::-;5627:9;;;5648:11;;;5645:37;;;5662:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "736000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "341",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24757",
								"balanceOf(address)": "2648",
								"burn(uint256)": "50961",
								"burnFrom(address,uint256)": "infinite",
								"decimals()": "199",
								"executeHalving()": "infinite",
								"getExpectedBurn(uint256)": "4801",
								"halvingInterval()": "2383",
								"halvingRate()": "2361",
								"isHalvingDue()": "infinite",
								"lastHalvingTime()": "2405",
								"name()": "infinite",
								"owner()": "2463",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2381",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28465",
								"treasury()": "2403",
								"updateHalvingParams(uint256,uint256)": "46738",
								"updateTreasury(address)": "26822"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 563,
									"end": 4530,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 563,
									"end": 4530,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 563,
									"end": 4530,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1674,
									"end": 2308,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 1674,
									"end": 2308,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1674,
									"end": 2308,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1674,
									"end": 2308,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1674,
									"end": 2308,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1674,
									"end": 2308,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1674,
									"end": 2308,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1674,
									"end": 2308,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1674,
									"end": 2308,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1674,
									"end": 2308,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1674,
									"end": 2308,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1674,
									"end": 2308,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1674,
									"end": 2308,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1674,
									"end": 2308,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 1674,
									"end": 2308,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 1674,
									"end": 2308,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1674,
									"end": 2308,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1674,
									"end": 2308,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 1674,
									"end": 2308,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1674,
									"end": 2308,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 1674,
									"end": 2308,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1674,
									"end": 2308,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1674,
									"end": 2308,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1674,
									"end": 2308,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1674,
									"end": 2308,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1674,
									"end": 2308,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1674,
									"end": 2308,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1674,
									"end": 2308,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1674,
									"end": 2308,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1674,
									"end": 2308,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1674,
									"end": 2308,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1674,
									"end": 2308,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1848,
									"end": 1858,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "436172646569726F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "10D115"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EA"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3438,
									"end": 3489,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3411,
									"end": 3429,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 3411,
									"end": 3429,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1857,
									"end": 1858,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2061,
									"end": 2068,
									"name": "PUSH",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1894,
									"end": 1897,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 1878,
									"end": 1897,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1878,
									"end": 1897,
									"modifierDepth": 2,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1878,
									"end": 1897,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1870,
									"end": 1933,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1870,
									"end": 1933,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1870,
									"end": 1933,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1870,
									"end": 1933,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1870,
									"end": 1933,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1870,
									"end": 1933,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3702,
									"end": 3704,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1870,
									"end": 1933,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1870,
									"end": 1933,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1870,
									"end": 1933,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3684,
									"end": 3705,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3741,
									"end": 3743,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 3721,
									"end": 3739,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 3721,
									"end": 3739,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3721,
									"end": 3739,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3714,
									"end": 3744,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3780,
									"end": 3813,
									"name": "PUSH",
									"source": 9,
									"value": "48616C76696E6720726174652063616E6E6F7420657863656564203130302500"
								},
								{
									"begin": 3760,
									"end": 3778,
									"name": "PUSH",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 3760,
									"end": 3778,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3760,
									"end": 3778,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3753,
									"end": 3814,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3831,
									"end": 3849,
									"name": "PUSH",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 3831,
									"end": 3849,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1870,
									"end": 1933,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 3500,
									"end": 3855,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1870,
									"end": 1933,
									"modifierDepth": 2,
									"name": "tag",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1870,
									"end": 1933,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1181,
									"end": 1186,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "15180"
								},
								{
									"begin": 1951,
									"end": 1967,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1951,
									"end": 1986,
									"modifierDepth": 2,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1951,
									"end": 1986,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1943,
									"end": 2009,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 1943,
									"end": 2009,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1943,
									"end": 2009,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1943,
									"end": 2009,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1943,
									"end": 2009,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1943,
									"end": 2009,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 4062,
									"end": 4064,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1943,
									"end": 2009,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1943,
									"end": 2009,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1943,
									"end": 2009,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4044,
									"end": 4065,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4101,
									"end": 4103,
									"name": "PUSH",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 4081,
									"end": 4099,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 4081,
									"end": 4099,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4081,
									"end": 4099,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4074,
									"end": 4104,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "125B9D195C9D985B081D1BDBC81CDA1BDC9D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "72"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 4120,
									"end": 4138,
									"name": "PUSH",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 4120,
									"end": 4138,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4120,
									"end": 4138,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4113,
									"end": 4161,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4178,
									"end": 4196,
									"name": "PUSH",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 4178,
									"end": 4196,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1943,
									"end": 2009,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 3860,
									"end": 4202,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1943,
									"end": 2009,
									"modifierDepth": 2,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 1943,
									"end": 2009,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1181,
									"end": 1186,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "15180"
								},
								{
									"begin": 1262,
									"end": 1278,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 1128,
									"end": 1131,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "16D"
								},
								{
									"begin": 1277,
									"end": 1278,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1262,
									"end": 1278,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 1262,
									"end": 1278,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1262,
									"end": 1278,
									"modifierDepth": 2,
									"name": "tag",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 1262,
									"end": 1278,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1261,
									"end": 1297,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 1261,
									"end": 1297,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1261,
									"end": 1297,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1261,
									"end": 1297,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 1261,
									"end": 1297,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1261,
									"end": 1297,
									"modifierDepth": 2,
									"name": "tag",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 1261,
									"end": 1297,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2047,
									"end": 2075,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 2047,
									"end": 2075,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2074,
									"end": 2075,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 2047,
									"end": 2075,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 2047,
									"end": 2075,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2047,
									"end": 2075,
									"modifierDepth": 2,
									"name": "tag",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 2047,
									"end": 2075,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2027,
									"end": 2043,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2027,
									"end": 2075,
									"modifierDepth": 2,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 2027,
									"end": 2075,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2019,
									"end": 2097,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 2019,
									"end": 2097,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2019,
									"end": 2097,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2019,
									"end": 2097,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2019,
									"end": 2097,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2019,
									"end": 2097,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 4714,
									"end": 4716,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2019,
									"end": 2097,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 2019,
									"end": 2097,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2019,
									"end": 2097,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4696,
									"end": 4717,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4753,
									"end": 4755,
									"name": "PUSH",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 4733,
									"end": 4751,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 4733,
									"end": 4751,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4733,
									"end": 4751,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4726,
									"end": 4756,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "496E74657276616C20746F6F206C6F6E67"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "78"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 4772,
									"end": 4790,
									"name": "PUSH",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 4772,
									"end": 4790,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4772,
									"end": 4790,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4765,
									"end": 4812,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4829,
									"end": 4847,
									"name": "PUSH",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 4829,
									"end": 4847,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2019,
									"end": 2097,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 4512,
									"end": 4853,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2019,
									"end": 2097,
									"modifierDepth": 2,
									"name": "tag",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 2019,
									"end": 2097,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2116,
									"end": 2148,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 2122,
									"end": 2132,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 2134,
									"end": 2147,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 2116,
									"end": 2121,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 2116,
									"end": 2148,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2116,
									"end": 2148,
									"modifierDepth": 2,
									"name": "tag",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 2116,
									"end": 2148,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2158,
									"end": 2166,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 2158,
									"end": 2178,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2158,
									"end": 2178,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2158,
									"end": 2178,
									"modifierDepth": 2,
									"name": "AND",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2158,
									"end": 2178,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 2158,
									"end": 2178,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2158,
									"end": 2178,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 2158,
									"end": 2178,
									"modifierDepth": 2,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2158,
									"end": 2178,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 2158,
									"end": 2178,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2158,
									"end": 2178,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 2158,
									"end": 2178,
									"modifierDepth": 2,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 2158,
									"end": 2178,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2158,
									"end": 2178,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2158,
									"end": 2178,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2188,
									"end": 2203,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 2188,
									"end": 2222,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2232,
									"end": 2243,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "A"
								},
								{
									"begin": 2232,
									"end": 2258,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2286,
									"end": 2301,
									"modifierDepth": 2,
									"name": "TIMESTAMP",
									"source": 8
								},
								{
									"begin": 2268,
									"end": 2283,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 2268,
									"end": 2301,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 563,
									"end": 4530,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 563,
									"end": 4530,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "tag",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EC442F05"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7601,
									"end": 7602,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3438,
									"end": 3489,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3411,
									"end": 3429,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 3411,
									"end": 3429,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 3292,
									"end": 3495,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "tag",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7644,
									"end": 7651,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7653,
									"end": 7658,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 7624,
									"end": 7659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "tag",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "tag",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6249,
									"end": 6254,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 6233,
									"end": 6254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "tag",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "46"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6285,
									"end": 6304,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "47"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "391434E3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5208,
									"end": 5240,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 5208,
									"end": 5240,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5190,
									"end": 5241,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5257,
									"end": 5275,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 5257,
									"end": 5275,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5257,
									"end": 5275,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5250,
									"end": 5284,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5250,
									"end": 5284,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5250,
									"end": 5284,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5300,
									"end": 5318,
									"name": "PUSH",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 5300,
									"end": 5318,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5300,
									"end": 5318,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5293,
									"end": 5327,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 5293,
									"end": 5327,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5293,
									"end": 5327,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5163,
									"end": 5181,
									"name": "PUSH",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 5163,
									"end": 5181,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 4988,
									"end": 5333,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "tag",
									"source": 2,
									"value": "47"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6580,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 2,
									"value": "46"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "50"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "51"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 2,
									"value": "50"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7030,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 2,
									"value": "51"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7098,
									"end": 7100,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7092,
									"end": 7096,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7102,
									"end": 7107,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "52"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 5484,
									"end": 5509,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5484,
									"end": 5509,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5472,
									"end": 5474,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 5457,
									"end": 5475,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5457,
									"end": 5475,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5338,
									"end": 5515,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "tag",
									"source": 2,
									"value": "52"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 646,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 646,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 111,
									"end": 117,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 119,
									"end": 125,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 127,
									"end": 133,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 135,
									"end": 141,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 191,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 176,
									"end": 185,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 167,
									"end": 174,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 163,
									"end": 186,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 159,
									"end": 192,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 156,
									"end": 209,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 156,
									"end": 209,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 156,
									"end": 209,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 205,
									"end": 206,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 203,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 207,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 156,
									"end": 209,
									"name": "tag",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 156,
									"end": 209,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 250,
									"end": 266,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 250,
									"end": 266,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 335,
									"end": 337,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 320,
									"end": 338,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 320,
									"end": 338,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 314,
									"end": 339,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 250,
									"end": 266,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 250,
									"end": 266,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 370,
									"end": 403,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 370,
									"end": 403,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 358,
									"end": 404,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 358,
									"end": 404,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 348,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 348,
									"end": 422,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 418,
									"end": 419,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 415,
									"end": 416,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 408,
									"end": 420,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 348,
									"end": 422,
									"name": "tag",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 348,
									"end": 422,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 514,
									"end": 516,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 499,
									"end": 517,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 499,
									"end": 517,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 493,
									"end": 518,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 610,
									"end": 612,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 595,
									"end": 613,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 595,
									"end": 613,
									"name": "SWAP7",
									"source": 9
								},
								{
									"begin": 595,
									"end": 613,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 589,
									"end": 614,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 14,
									"end": 646,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 14,
									"end": 646,
									"name": "SWAP8",
									"source": 9
								},
								{
									"begin": 441,
									"end": 448,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 441,
									"end": 448,
									"name": "SWAP7",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 646,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 646,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 651,
									"end": 778,
									"name": "tag",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 651,
									"end": 778,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 712,
									"end": 722,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 707,
									"end": 710,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 703,
									"end": 723,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 700,
									"end": 701,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 693,
									"end": 724,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 743,
									"end": 747,
									"name": "PUSH",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 740,
									"end": 741,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 733,
									"end": 748,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 767,
									"end": 771,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 764,
									"end": 765,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 757,
									"end": 772,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 783,
									"end": 1163,
									"name": "tag",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 783,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 862,
									"end": 863,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 858,
									"end": 870,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 858,
									"end": 870,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 858,
									"end": 870,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 858,
									"end": 870,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 905,
									"end": 917,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 905,
									"end": 917,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 905,
									"end": 917,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 926,
									"end": 987,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 926,
									"end": 987,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 980,
									"end": 984,
									"name": "PUSH",
									"source": 9,
									"value": "7F"
								},
								{
									"begin": 972,
									"end": 978,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 968,
									"end": 985,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 958,
									"end": 985,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 958,
									"end": 985,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 926,
									"end": 987,
									"name": "tag",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 926,
									"end": 987,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1033,
									"end": 1035,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1025,
									"end": 1031,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1022,
									"end": 1036,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1002,
									"end": 1020,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 999,
									"end": 1037,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 996,
									"end": 1157,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 996,
									"end": 1157,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1079,
									"end": 1089,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 1074,
									"end": 1077,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 1070,
									"end": 1090,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1067,
									"end": 1068,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1060,
									"end": 1091,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1114,
									"end": 1118,
									"name": "PUSH",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 1111,
									"end": 1112,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1104,
									"end": 1119,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1142,
									"end": 1146,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1139,
									"end": 1140,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1147,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 996,
									"end": 1157,
									"name": "tag",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 996,
									"end": 1157,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 996,
									"end": 1157,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 783,
									"end": 1163,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 783,
									"end": 1163,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 783,
									"end": 1163,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 783,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1294,
									"end": 1812,
									"name": "tag",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 1294,
									"end": 1812,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1396,
									"end": 1398,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 1391,
									"end": 1394,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1388,
									"end": 1399,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1385,
									"end": 1806,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1385,
									"end": 1806,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 1385,
									"end": 1806,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1432,
									"end": 1437,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1430,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1422,
									"end": 1438,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1476,
									"end": 1480,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1473,
									"end": 1474,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1463,
									"end": 1481,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 1546,
									"end": 1548,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 1534,
									"end": 1544,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1530,
									"end": 1549,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1527,
									"end": 1528,
									"name": "PUSH",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 1523,
									"end": 1550,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 1517,
									"end": 1521,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1513,
									"end": 1551,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1582,
									"end": 1586,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1570,
									"end": 1580,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1567,
									"end": 1587,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1564,
									"end": 1611,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1564,
									"end": 1611,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "71"
								},
								{
									"begin": 1564,
									"end": 1611,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1605,
									"end": 1609,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1564,
									"end": 1611,
									"name": "tag",
									"source": 9,
									"value": "71"
								},
								{
									"begin": 1564,
									"end": 1611,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1660,
									"end": 1662,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 1655,
									"end": 1658,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1651,
									"end": 1663,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1648,
									"end": 1649,
									"name": "PUSH",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 1644,
									"end": 1664,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 1638,
									"end": 1642,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1634,
									"end": 1665,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1624,
									"end": 1665,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1624,
									"end": 1665,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1715,
									"end": 1796,
									"name": "tag",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 1715,
									"end": 1796,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1733,
									"end": 1735,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1726,
									"end": 1731,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1723,
									"end": 1736,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1715,
									"end": 1796,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1715,
									"end": 1796,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 1715,
									"end": 1796,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1792,
									"end": 1793,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1778,
									"end": 1794,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1778,
									"end": 1794,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1759,
									"end": 1760,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1748,
									"end": 1761,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1715,
									"end": 1796,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 1715,
									"end": 1796,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1715,
									"end": 1796,
									"name": "tag",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 1715,
									"end": 1796,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1719,
									"end": 1722,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1719,
									"end": 1722,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1385,
									"end": 1806,
									"name": "tag",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 1385,
									"end": 1806,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1294,
									"end": 1812,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1294,
									"end": 1812,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1294,
									"end": 1812,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1294,
									"end": 1812,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1988,
									"end": 3287,
									"name": "tag",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 1988,
									"end": 3287,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2108,
									"end": 2118,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2108,
									"end": 2118,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2130,
									"end": 2160,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2130,
									"end": 2160,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 2127,
									"end": 2183,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2127,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 2127,
									"end": 2183,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2163,
									"end": 2181,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 2163,
									"end": 2181,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 2163,
									"end": 2181,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2163,
									"end": 2181,
									"name": "tag",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 2163,
									"end": 2181,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2192,
									"end": 2289,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 2282,
									"end": 2288,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2242,
									"end": 2280,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 2274,
									"end": 2278,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2268,
									"end": 2279,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 2242,
									"end": 2280,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 2242,
									"end": 2280,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2242,
									"end": 2280,
									"name": "tag",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 2242,
									"end": 2280,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2236,
									"end": 2240,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2192,
									"end": 2289,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 2192,
									"end": 2289,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2192,
									"end": 2289,
									"name": "tag",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 2192,
									"end": 2289,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2338,
									"end": 2342,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2369,
									"end": 2371,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 2358,
									"end": 2372,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2358,
									"end": 2372,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 2386,
									"end": 2387,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2381,
									"end": 3030,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2381,
									"end": 3030,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 2381,
									"end": 3030,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "82"
								},
								{
									"begin": 2381,
									"end": 3030,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3074,
									"end": 3075,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3091,
									"end": 3097,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3088,
									"end": 3177,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3088,
									"end": 3177,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "83"
								},
								{
									"begin": 3088,
									"end": 3177,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3143,
									"end": 3162,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3143,
									"end": 3162,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3143,
									"end": 3162,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3137,
									"end": 3163,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3088,
									"end": 3177,
									"name": "tag",
									"source": 9,
									"value": "83"
								},
								{
									"begin": 3088,
									"end": 3177,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1945,
									"end": 1946,
									"name": "PUSH",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 1941,
									"end": 1952,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1941,
									"end": 1952,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1941,
									"end": 1952,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1937,
									"end": 1961,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 1933,
									"end": 1962,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1923,
									"end": 1963,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1969,
									"end": 1970,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1965,
									"end": 1976,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1965,
									"end": 1976,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1965,
									"end": 1976,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1920,
									"end": 1977,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 3190,
									"end": 3271,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3190,
									"end": 3271,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2351,
									"end": 3281,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 2351,
									"end": 3281,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2381,
									"end": 3030,
									"name": "tag",
									"source": 9,
									"value": "82"
								},
								{
									"begin": 2381,
									"end": 3030,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1241,
									"end": 1242,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1234,
									"end": 1248,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1234,
									"end": 1248,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1234,
									"end": 1248,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1278,
									"end": 1282,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1265,
									"end": 1283,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1265,
									"end": 1283,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2417,
									"end": 2437,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2417,
									"end": 2437,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2417,
									"end": 2437,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2535,
									"end": 2757,
									"name": "tag",
									"source": 9,
									"value": "86"
								},
								{
									"begin": 2535,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2549,
									"end": 2556,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2546,
									"end": 2547,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2543,
									"end": 2557,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 2535,
									"end": 2757,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2535,
									"end": 2757,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "88"
								},
								{
									"begin": 2535,
									"end": 2757,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2631,
									"end": 2650,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 2631,
									"end": 2650,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2631,
									"end": 2650,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2625,
									"end": 2651,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2610,
									"end": 2652,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2610,
									"end": 2652,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2738,
									"end": 2742,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2723,
									"end": 2743,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 2723,
									"end": 2743,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2723,
									"end": 2743,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2723,
									"end": 2743,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 2691,
									"end": 2692,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2679,
									"end": 2693,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2679,
									"end": 2693,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2679,
									"end": 2693,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2679,
									"end": 2693,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2565,
									"end": 2577,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2535,
									"end": 2757,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "86"
								},
								{
									"begin": 2535,
									"end": 2757,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2535,
									"end": 2757,
									"name": "tag",
									"source": 9,
									"value": "88"
								},
								{
									"begin": 2535,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2539,
									"end": 2542,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2785,
									"end": 2791,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2776,
									"end": 2783,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2773,
									"end": 2792,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 2770,
									"end": 2971,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2770,
									"end": 2971,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 2770,
									"end": 2971,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2846,
									"end": 2865,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 2846,
									"end": 2865,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2846,
									"end": 2865,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2840,
									"end": 2866,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2929,
									"end": 2930,
									"name": "PUSH",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 2925,
									"end": 2939,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 2925,
									"end": 2939,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2925,
									"end": 2939,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 2941,
									"end": 2944,
									"name": "PUSH",
									"source": 9,
									"value": "F8"
								},
								{
									"begin": 2921,
									"end": 2945,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2917,
									"end": 2954,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 2913,
									"end": 2955,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 2898,
									"end": 2956,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2883,
									"end": 2957,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2883,
									"end": 2957,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2770,
									"end": 2971,
									"name": "tag",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 2770,
									"end": 2971,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3017,
									"end": 3018,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3001,
									"end": 3015,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3001,
									"end": 3015,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3001,
									"end": 3015,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 2997,
									"end": 3019,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2984,
									"end": 3020,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2984,
									"end": 3020,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1988,
									"end": 3287,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4207,
									"end": 4334,
									"name": "tag",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 4207,
									"end": 4334,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4268,
									"end": 4278,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 4263,
									"end": 4266,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 4259,
									"end": 4279,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 4256,
									"end": 4257,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4249,
									"end": 4280,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4299,
									"end": 4303,
									"name": "PUSH",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 4296,
									"end": 4297,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 4289,
									"end": 4304,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4323,
									"end": 4327,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 4320,
									"end": 4321,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4313,
									"end": 4328,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 4339,
									"end": 4507,
									"name": "tag",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 4339,
									"end": 4507,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4412,
									"end": 4421,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4412,
									"end": 4421,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4412,
									"end": 4421,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 4443,
									"end": 4452,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4443,
									"end": 4452,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4460,
									"end": 4475,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4460,
									"end": 4475,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4460,
									"end": 4475,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 4454,
									"end": 4476,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4454,
									"end": 4476,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 4440,
									"end": 4477,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 4430,
									"end": 4501,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "96"
								},
								{
									"begin": 4430,
									"end": 4501,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4481,
									"end": 4499,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "96"
								},
								{
									"begin": 4481,
									"end": 4499,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 4481,
									"end": 4499,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4481,
									"end": 4499,
									"name": "tag",
									"source": 9,
									"value": "96"
								},
								{
									"begin": 4481,
									"end": 4499,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4339,
									"end": 4507,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 4339,
									"end": 4507,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4339,
									"end": 4507,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4339,
									"end": 4507,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4339,
									"end": 4507,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4858,
									"end": 4983,
									"name": "tag",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 4858,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4923,
									"end": 4932,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4923,
									"end": 4932,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4923,
									"end": 4932,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4944,
									"end": 4954,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4944,
									"end": 4954,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4944,
									"end": 4954,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 4941,
									"end": 4977,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4941,
									"end": 4977,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "96"
								},
								{
									"begin": 4941,
									"end": 4977,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4957,
									"end": 4975,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "96"
								},
								{
									"begin": 4957,
									"end": 4975,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 4957,
									"end": 4975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5338,
									"end": 5515,
									"name": "tag",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 5338,
									"end": 5515,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 563,
									"end": 4530,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 563,
									"end": 4530,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 563,
									"end": 4530,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 563,
									"end": 4530,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 4530,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 563,
									"end": 4530,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 4530,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122059cf05bc20986ac4dae2d4ad43851b784b3a7454e95a591ef88d1b40a443667e64736f6c634300081d0033",
									".code": [
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH",
											"source": 8,
											"value": "768A4173"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH",
											"source": 8,
											"value": "95D89B41"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH",
											"source": 8,
											"value": "95D89B41"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH",
											"source": 8,
											"value": "BBB0B1A6"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH",
											"source": 8,
											"value": "DD62ED3E"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH",
											"source": 8,
											"value": "ED299016"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH",
											"source": 8,
											"value": "768A4173"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH",
											"source": 8,
											"value": "79CC6790"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH",
											"source": 8,
											"value": "7E6335F4"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH",
											"source": 8,
											"value": "7F51BB1F"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH",
											"source": 8,
											"value": "8CBB6DF7"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH",
											"source": 8,
											"value": "313CE567"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH",
											"source": 8,
											"value": "313CE567"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH",
											"source": 8,
											"value": "42966C68"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH",
											"source": 8,
											"value": "61D027B3"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH",
											"source": 8,
											"value": "6A47AA06"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH",
											"source": 8,
											"value": "6FDDE03"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH",
											"source": 8,
											"value": "95EA7B3"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH",
											"source": 8,
											"value": "102B67AB"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH",
											"source": 8,
											"value": "18160DDD"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4485,
											"end": 4520,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4485,
											"end": 4520,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4485,
											"end": 4520,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4485,
											"end": 4520,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 216,
											"end": 218,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4485,
											"end": 4520,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4485,
											"end": 4520,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4485,
											"end": 4520,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 198,
											"end": 219,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 255,
											"end": 257,
											"name": "PUSH",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 235,
											"end": 253,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 235,
											"end": 253,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 235,
											"end": 253,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 228,
											"end": 258,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8DED6CADC40C8DECAE640DCDEE840C2C6C6CAE0E8408AA89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 274,
											"end": 292,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 274,
											"end": 292,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 274,
											"end": 292,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 267,
											"end": 322,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 339,
											"end": 357,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 339,
											"end": 357,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4485,
											"end": 4520,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 4485,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4485,
											"end": 4520,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4485,
											"end": 4520,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4485,
											"end": 4520,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4485,
											"end": 4520,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4485,
											"end": 4520,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4485,
											"end": 4520,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4485,
											"end": 4520,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 563,
											"end": 4530,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4396,
											"end": 4431,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4396,
											"end": 4431,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4396,
											"end": 4431,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4396,
											"end": 4431,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 216,
											"end": 218,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4396,
											"end": 4431,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4396,
											"end": 4431,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4396,
											"end": 4431,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 198,
											"end": 219,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 255,
											"end": 257,
											"name": "PUSH",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 235,
											"end": 253,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 235,
											"end": 253,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 235,
											"end": 253,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 228,
											"end": 258,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8DED6CADC40C8DECAE640DCDEE840C2C6C6CAE0E8408AA89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 274,
											"end": 292,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 274,
											"end": 292,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 274,
											"end": 292,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 267,
											"end": 322,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 339,
											"end": 357,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 339,
											"end": 357,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4396,
											"end": 4431,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 14,
											"end": 363,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1453,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1439,
											"end": 1453,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1432,
											"end": 1454,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1414,
											"end": 1455,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1414,
											"end": 1455,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1402,
											"end": 1404,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1387,
											"end": 1405,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1274,
											"end": 1461,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3746,
											"end": 3924,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 3746,
											"end": 3924,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3746,
											"end": 3924,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 3746,
											"end": 3924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3746,
											"end": 3924,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3746,
											"end": 3924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 3746,
											"end": 3924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3746,
											"end": 3924,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3746,
											"end": 3924,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3746,
											"end": 3924,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3746,
											"end": 3924,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 3746,
											"end": 3924,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3746,
											"end": 3924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 3746,
											"end": 3924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 3746,
											"end": 3924,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3746,
											"end": 3924,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3746,
											"end": 3924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 3746,
											"end": 3924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3746,
											"end": 3924,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 3746,
											"end": 3924,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3746,
											"end": 3924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 3746,
											"end": 3924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3746,
											"end": 3924,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 3746,
											"end": 3924,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3746,
											"end": 3924,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3746,
											"end": 3924,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1868,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1843,
											"end": 1868,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1843,
											"end": 1868,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1831,
											"end": 1833,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1816,
											"end": 1834,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3746,
											"end": 3924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 1697,
											"end": 1874,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4133,
											"end": 4352,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 4133,
											"end": 4352,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4133,
											"end": 4352,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 4133,
											"end": 4352,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4133,
											"end": 4352,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4133,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 4133,
											"end": 4352,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4133,
											"end": 4352,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4133,
											"end": 4352,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4133,
											"end": 4352,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4133,
											"end": 4352,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 4133,
											"end": 4352,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4133,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 4133,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 4133,
											"end": 4352,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 4133,
											"end": 4352,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4133,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 4133,
											"end": 4352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4133,
											"end": 4352,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 4133,
											"end": 4352,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4133,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 4133,
											"end": 4352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2400,
											"end": 2436,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2400,
											"end": 2436,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2388,
											"end": 2390,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2373,
											"end": 2391,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2258,
											"end": 2442,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 691,
											"end": 714,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 691,
											"end": 714,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 691,
											"end": 714,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 691,
											"end": 714,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 691,
											"end": 714,
											"name": "tag",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 691,
											"end": 714,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 691,
											"end": 714,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 691,
											"end": 714,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 691,
											"end": 714,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2611,
											"end": 2643,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2611,
											"end": 2643,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2611,
											"end": 2643,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2593,
											"end": 2644,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2593,
											"end": 2644,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2581,
											"end": 2583,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2566,
											"end": 2584,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 2447,
											"end": 2650,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 762,
											"end": 792,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 762,
											"end": 792,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 762,
											"end": 792,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 762,
											"end": 792,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 762,
											"end": 792,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 762,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 762,
											"end": 792,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 762,
											"end": 792,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 762,
											"end": 792,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 762,
											"end": 792,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 762,
											"end": 792,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 762,
											"end": 792,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 762,
											"end": 792,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 762,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 762,
											"end": 792,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 762,
											"end": 792,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 762,
											"end": 792,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 762,
											"end": 792,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2504,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 2357,
											"end": 2504,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2357,
											"end": 2504,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2357,
											"end": 2504,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2357,
											"end": 2504,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2357,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 2357,
											"end": 2504,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2357,
											"end": 2504,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2504,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2504,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2357,
											"end": 2504,
											"name": "tag",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 2357,
											"end": 2504,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2357,
											"end": 2504,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2357,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 2357,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 2357,
											"end": 2504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 937,
											"end": 963,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 937,
											"end": 963,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 937,
											"end": 963,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 937,
											"end": 963,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 937,
											"end": 963,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 937,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 937,
											"end": 963,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 937,
											"end": 963,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 937,
											"end": 963,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 937,
											"end": 963,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 937,
											"end": 963,
											"name": "tag",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 937,
											"end": 963,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 937,
											"end": 963,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 937,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 937,
											"end": 963,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 937,
											"end": 963,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 937,
											"end": 963,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 937,
											"end": 963,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3643,
											"end": 3740,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 3643,
											"end": 3740,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3643,
											"end": 3740,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 3643,
											"end": 3740,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3643,
											"end": 3740,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3643,
											"end": 3740,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 3643,
											"end": 3740,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3643,
											"end": 3740,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3643,
											"end": 3740,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3643,
											"end": 3740,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3643,
											"end": 3740,
											"name": "tag",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 3643,
											"end": 3740,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3643,
											"end": 3740,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 3643,
											"end": 3740,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 3643,
											"end": 3740,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3643,
											"end": 3740,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3643,
											"end": 3740,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 3643,
											"end": 3740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3643,
											"end": 3740,
											"name": "tag",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 3643,
											"end": 3740,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3643,
											"end": 3740,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 3643,
											"end": 3740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 840,
											"end": 870,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 840,
											"end": 870,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 840,
											"end": 870,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 840,
											"end": 870,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 840,
											"end": 870,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 840,
											"end": 870,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 840,
											"end": 870,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 840,
											"end": 870,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 840,
											"end": 870,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 840,
											"end": 870,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 840,
											"end": 870,
											"name": "tag",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 840,
											"end": 870,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 840,
											"end": 870,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 840,
											"end": 870,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 840,
											"end": 870,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 840,
											"end": 870,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 840,
											"end": 870,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 840,
											"end": 870,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3930,
											"end": 4127,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 3930,
											"end": 4127,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3930,
											"end": 4127,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 3930,
											"end": 4127,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3930,
											"end": 4127,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3930,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 3930,
											"end": 4127,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3930,
											"end": 4127,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3930,
											"end": 4127,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3930,
											"end": 4127,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3930,
											"end": 4127,
											"name": "tag",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 3930,
											"end": 4127,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3930,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 3930,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 3930,
											"end": 4127,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3930,
											"end": 4127,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3930,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3930,
											"end": 4127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3930,
											"end": 4127,
											"name": "tag",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 3930,
											"end": 4127,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3930,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 3930,
											"end": 4127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3245,
											"end": 3577,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 3245,
											"end": 3577,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3245,
											"end": 3577,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 3245,
											"end": 3577,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3245,
											"end": 3577,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3245,
											"end": 3577,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 3245,
											"end": 3577,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3245,
											"end": 3577,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3245,
											"end": 3577,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3245,
											"end": 3577,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3245,
											"end": 3577,
											"name": "tag",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 3245,
											"end": 3577,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3245,
											"end": 3577,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 3245,
											"end": 3577,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 3245,
											"end": 3577,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3245,
											"end": 3577,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3245,
											"end": 3577,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 3245,
											"end": 3577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3245,
											"end": 3577,
											"name": "tag",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 3245,
											"end": 3577,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3245,
											"end": 3577,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 3245,
											"end": 3577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 3177,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2576,
											"end": 3177,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2576,
											"end": 3177,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2576,
											"end": 3177,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2576,
											"end": 3177,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2576,
											"end": 3177,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 2576,
											"end": 3177,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2576,
											"end": 3177,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2576,
											"end": 3177,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2576,
											"end": 3177,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2576,
											"end": 3177,
											"name": "tag",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 2576,
											"end": 3177,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2576,
											"end": 3177,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2576,
											"end": 3177,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 2576,
											"end": 3177,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 2576,
											"end": 3177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3746,
											"end": 3924,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 3746,
											"end": 3924,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3869,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 3861,
											"end": 3869,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3861,
											"end": 3869,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3806,
											"end": 3813,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3914,
											"end": 3917,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3888,
											"end": 3910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 3906,
											"end": 3910,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3825,
											"end": 3870,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3888,
											"end": 3910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 3888,
											"end": 3910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3888,
											"end": 3910,
											"name": "tag",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 3888,
											"end": 3910,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3887,
											"end": 3917,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 3887,
											"end": 3917,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3887,
											"end": 3917,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3887,
											"end": 3917,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 3887,
											"end": 3917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3887,
											"end": 3917,
											"name": "tag",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 3887,
											"end": 3917,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3880,
											"end": 3917,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3746,
											"end": 3924,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3746,
											"end": 3924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4133,
											"end": 4352,
											"name": "tag",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 4133,
											"end": 4352,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4282,
											"end": 4286,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1590,
											"end": 1604,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 1590,
											"end": 1602,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 1590,
											"end": 1604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1590,
											"end": 1604,
											"name": "tag",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 1590,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1586,
											"end": 1647,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1586,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 1586,
											"end": 1647,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1620,
											"end": 1636,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 1620,
											"end": 1636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1620,
											"end": 1636,
											"name": "tag",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 1620,
											"end": 1636,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4309,
											"end": 4345,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 4328,
											"end": 4332,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4334,
											"end": 4336,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4338,
											"end": 4344,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4309,
											"end": 4327,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 4309,
											"end": 4345,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4309,
											"end": 4345,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 4309,
											"end": 4345,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4302,
											"end": 4345,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 4133,
											"end": 4352,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4133,
											"end": 4352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 672,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 692,
											"end": 697,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 672,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 672,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 672,
											"end": 698,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 672,
											"end": 698,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2504,
											"name": "tag",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 2357,
											"end": 2504,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2402,
											"end": 2406,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1436,
											"end": 1440,
											"name": "PUSH",
											"source": 8,
											"value": "708"
										},
										{
											"begin": 2463,
											"end": 2478,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 2463,
											"end": 2478,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2445,
											"end": 2460,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 2445,
											"end": 2460,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2445,
											"end": 2478,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 2445,
											"end": 2478,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2445,
											"end": 2478,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2445,
											"end": 2478,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 2445,
											"end": 2478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2445,
											"end": 2478,
											"name": "tag",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 2445,
											"end": 2478,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2445,
											"end": 2496,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 2445,
											"end": 2496,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2445,
											"end": 2496,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2445,
											"end": 2496,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 2445,
											"end": 2496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2445,
											"end": 2496,
											"name": "tag",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 2445,
											"end": 2496,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2425,
											"end": 2440,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 2425,
											"end": 2497,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2425,
											"end": 2497,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2418,
											"end": 2497,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2418,
											"end": 2497,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2357,
											"end": 2504,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2357,
											"end": 2504,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 1112,
											"end": 1119,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1135,
											"end": 1140,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1096,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 1096,
											"end": 1141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 1157,
											"end": 1164,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1166,
											"end": 1171,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1151,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 1151,
											"end": 1172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3643,
											"end": 3740,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 3643,
											"end": 3740,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3713,
											"end": 3721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 3713,
											"end": 3733,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3713,
											"end": 3733,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3713,
											"end": 3733,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3713,
											"end": 3733,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3713,
											"end": 3733,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3713,
											"end": 3733,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3713,
											"end": 3733,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3713,
											"end": 3733,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3713,
											"end": 3733,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3713,
											"end": 3733,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3713,
											"end": 3733,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 3713,
											"end": 3733,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3713,
											"end": 3733,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3643,
											"end": 3740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3930,
											"end": 4127,
											"name": "tag",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 3930,
											"end": 4127,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4066,
											"end": 4070,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1590,
											"end": 1604,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 1590,
											"end": 1602,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 1590,
											"end": 1604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1590,
											"end": 1604,
											"name": "tag",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 1590,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1586,
											"end": 1647,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1586,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 1586,
											"end": 1647,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1620,
											"end": 1636,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 1620,
											"end": 1636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1620,
											"end": 1636,
											"name": "tag",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 1620,
											"end": 1636,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4094,
											"end": 4120,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 4109,
											"end": 4111,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4113,
											"end": 4119,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4094,
											"end": 4108,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 4094,
											"end": 4120,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3245,
											"end": 3577,
											"name": "tag",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 3245,
											"end": 3577,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1015,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 3357,
											"end": 3369,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3357,
											"end": 3389,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3357,
											"end": 3389,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3414,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 3349,
											"end": 3414,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3349,
											"end": 3414,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3349,
											"end": 3414,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3414,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4706,
											"end": 4708,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3349,
											"end": 3414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3349,
											"end": 3414,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3414,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4688,
											"end": 4709,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4745,
											"end": 4747,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 4725,
											"end": 4743,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4725,
											"end": 4743,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4725,
											"end": 4743,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4718,
											"end": 4748,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "48616C76696E67207261746520746F6F206C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4764,
											"end": 4782,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4764,
											"end": 4782,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4764,
											"end": 4782,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4757,
											"end": 4807,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4824,
											"end": 4842,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4824,
											"end": 4842,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3349,
											"end": 3414,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 4504,
											"end": 4848,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3349,
											"end": 3414,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 3349,
											"end": 3414,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1072,
											"end": 1074,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 3432,
											"end": 3444,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3432,
											"end": 3464,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3432,
											"end": 3464,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3424,
											"end": 3490,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 3424,
											"end": 3490,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3424,
											"end": 3490,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3424,
											"end": 3490,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3424,
											"end": 3490,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3424,
											"end": 3490,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5055,
											"end": 5057,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3424,
											"end": 3490,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3424,
											"end": 3490,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3424,
											"end": 3490,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5037,
											"end": 5058,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5094,
											"end": 5096,
											"name": "PUSH",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 5074,
											"end": 5092,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5074,
											"end": 5092,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5074,
											"end": 5092,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5067,
											"end": 5097,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90C2D8ECD2DCCE40E4C2E8CA40E8DEDE40D0D2CED"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5113,
											"end": 5131,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5113,
											"end": 5131,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5113,
											"end": 5131,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5106,
											"end": 5157,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5174,
											"end": 5192,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5174,
											"end": 5192,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3424,
											"end": 3490,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 4853,
											"end": 5198,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3424,
											"end": 3490,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 3424,
											"end": 3490,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3500,
											"end": 3515,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 3500,
											"end": 3534,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3500,
											"end": 3534,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3500,
											"end": 3534,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3500,
											"end": 3534,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3544,
											"end": 3555,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 3544,
											"end": 3570,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3245,
											"end": 3577,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2576,
											"end": 3177,
											"name": "tag",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 2576,
											"end": 3177,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 2500,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 2500,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2640,
											"end": 2654,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 2640,
											"end": 2652,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 2640,
											"end": 2654,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2640,
											"end": 2654,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 2640,
											"end": 2654,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2687,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 2632,
											"end": 2687,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2687,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2632,
											"end": 2687,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2632,
											"end": 2687,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2687,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5405,
											"end": 5407,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2632,
											"end": 2687,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2632,
											"end": 2687,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2687,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5387,
											"end": 5408,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5444,
											"end": 5446,
											"name": "PUSH",
											"source": 9,
											"value": "1C"
										},
										{
											"begin": 5424,
											"end": 5442,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5424,
											"end": 5442,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5424,
											"end": 5442,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5417,
											"end": 5447,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5483,
											"end": 5513,
											"name": "PUSH",
											"source": 9,
											"value": "48616C76696E6720696E74657276616C206E6F74207265616368656400000000"
										},
										{
											"begin": 5463,
											"end": 5481,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5463,
											"end": 5481,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5463,
											"end": 5481,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5456,
											"end": 5514,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5531,
											"end": 5549,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5531,
											"end": 5549,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2632,
											"end": 2687,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 5203,
											"end": 5555,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2632,
											"end": 2687,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 2632,
											"end": 2687,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 2742,
											"end": 2750,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2706,
											"end": 2729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2706,
											"end": 2751,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2706,
											"end": 2751,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2761,
											"end": 2779,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2816,
											"end": 2819,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 2801,
											"end": 2812,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 2801,
											"end": 2812,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2783,
											"end": 2798,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2783,
											"end": 2812,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 2783,
											"end": 2812,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2783,
											"end": 2812,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2783,
											"end": 2812,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 2783,
											"end": 2812,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2783,
											"end": 2812,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 2783,
											"end": 2812,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 2819,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 2782,
											"end": 2819,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 2819,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 2819,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 2782,
											"end": 2819,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 2819,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 2782,
											"end": 2819,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2761,
											"end": 2819,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2842,
											"end": 2856,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2842,
											"end": 2856,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 3171,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 2838,
											"end": 3171,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2919,
											"end": 2927,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 2919,
											"end": 2927,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2913,
											"end": 2940,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2919,
											"end": 2927,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2929,
											"end": 2939,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2913,
											"end": 2918,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 2913,
											"end": 2940,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2913,
											"end": 2940,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 2913,
											"end": 2940,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3025,
											"end": 3058,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 1436,
											"end": 1440,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "708"
										},
										{
											"begin": 3025,
											"end": 3040,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 3025,
											"end": 3058,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 3025,
											"end": 3058,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3025,
											"end": 3058,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 3025,
											"end": 3058,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3007,
											"end": 3022,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 3007,
											"end": 3058,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3124,
											"end": 3160,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3124,
											"end": 3160,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3124,
											"end": 3160,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5867,
											"end": 5892,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5867,
											"end": 5892,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5867,
											"end": 5892,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3144,
											"end": 3159,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 5923,
											"end": 5925,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5908,
											"end": 5926,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5908,
											"end": 5926,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5901,
											"end": 5935,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3124,
											"end": 3160,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "394823B0BCAF78CD8F5876A52C05DBAB91512A05F5DA2A31E239A11AB66D605F"
										},
										{
											"begin": 3124,
											"end": 3160,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5840,
											"end": 5858,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3124,
											"end": 3160,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3124,
											"end": 3160,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3124,
											"end": 3160,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3124,
											"end": 3160,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3124,
											"end": 3160,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3124,
											"end": 3160,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3124,
											"end": 3160,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 3171,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 2838,
											"end": 3171,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2622,
											"end": 3177,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2622,
											"end": 3177,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 1857,
											"end": 1858,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3068,
											"end": 3075,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2888,
											"end": 3096,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2593,
											"end": 2644,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2566,
											"end": 2584,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2566,
											"end": 2584,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2447,
											"end": 2650,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8125,
											"end": 8126,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2593,
											"end": 2644,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2566,
											"end": 2584,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2566,
											"end": 2584,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2447,
											"end": 2650,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "tag",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 8156,
											"end": 8163,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8173,
											"end": 8174,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8177,
											"end": 8182,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8148,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 8148,
											"end": 8183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2593,
											"end": 2644,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2566,
											"end": 2584,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2566,
											"end": 2584,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2447,
											"end": 2650,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10580,
											"end": 10616,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10616,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10655,
											"end": 10660,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10652,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10660,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6166,
											"end": 6198,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6166,
											"end": 6198,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6148,
											"end": 6199,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6215,
											"end": 6233,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6215,
											"end": 6233,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6215,
											"end": 6233,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6208,
											"end": 6242,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6208,
											"end": 6242,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6208,
											"end": 6242,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6258,
											"end": 6276,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6258,
											"end": 6276,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6258,
											"end": 6276,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6251,
											"end": 6285,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6251,
											"end": 6285,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6251,
											"end": 6285,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6121,
											"end": 6139,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6121,
											"end": 6139,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 5946,
											"end": 6291,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 10812,
											"end": 10817,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10819,
											"end": 10826,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10847,
											"end": 10852,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10852,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10854,
											"end": 10859,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10803,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 10803,
											"end": 10860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10504,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2882,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 2575,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2702,
											"end": 2720,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3EE5AEB5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2858,
											"end": 2865,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 2858,
											"end": 2875,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2575,
											"end": 2882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2593,
											"end": 2644,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2566,
											"end": 2584,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2566,
											"end": 2584,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2447,
											"end": 2650,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2593,
											"end": 2644,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2566,
											"end": 2584,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2566,
											"end": 2584,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2447,
											"end": 2650,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1868,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1843,
											"end": 1868,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1831,
											"end": 1833,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1816,
											"end": 1834,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1816,
											"end": 1834,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1697,
											"end": 1874,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2593,
											"end": 2644,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2566,
											"end": 2584,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2566,
											"end": 2584,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2447,
											"end": 2650,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2593,
											"end": 2644,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2566,
											"end": 2584,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2566,
											"end": 2584,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2447,
											"end": 2650,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6166,
											"end": 6198,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6166,
											"end": 6198,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6148,
											"end": 6199,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6215,
											"end": 6233,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6215,
											"end": 6233,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6215,
											"end": 6233,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6208,
											"end": 6242,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6208,
											"end": 6242,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6208,
											"end": 6242,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6258,
											"end": 6276,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6258,
											"end": 6276,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6258,
											"end": 6276,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6251,
											"end": 6285,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6251,
											"end": 6285,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6251,
											"end": 6285,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6121,
											"end": 6139,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6121,
											"end": 6139,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 5946,
											"end": 6291,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1868,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1843,
											"end": 1868,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1831,
											"end": 1833,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1816,
											"end": 1834,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1816,
											"end": 1834,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1697,
											"end": 1874,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 368,
											"end": 786,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 368,
											"end": 786,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 506,
											"end": 515,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 499,
											"end": 520,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 480,
											"end": 484,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 549,
											"end": 555,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 543,
											"end": 556,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 592,
											"end": 598,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 587,
											"end": 589,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 576,
											"end": 585,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 572,
											"end": 590,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 565,
											"end": 599,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 651,
											"end": 657,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 646,
											"end": 648,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 638,
											"end": 644,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 634,
											"end": 649,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 629,
											"end": 631,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 618,
											"end": 627,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 614,
											"end": 632,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 608,
											"end": 658,
											"name": "MCOPY",
											"source": 9
										},
										{
											"begin": 707,
											"end": 708,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 702,
											"end": 704,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 693,
											"end": 699,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 682,
											"end": 691,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 678,
											"end": 700,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 674,
											"end": 705,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 667,
											"end": 709,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 777,
											"end": 779,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 770,
											"end": 772,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 766,
											"end": 773,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 761,
											"end": 763,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 753,
											"end": 759,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 749,
											"end": 764,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 745,
											"end": 774,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 734,
											"end": 743,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 730,
											"end": 775,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 726,
											"end": 780,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 718,
											"end": 780,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 718,
											"end": 780,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 718,
											"end": 780,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 368,
											"end": 786,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 368,
											"end": 786,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 368,
											"end": 786,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 368,
											"end": 786,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 368,
											"end": 786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 791,
											"end": 964,
											"name": "tag",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 791,
											"end": 964,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 859,
											"end": 879,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 859,
											"end": 879,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 908,
											"end": 939,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 908,
											"end": 939,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 898,
											"end": 940,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 898,
											"end": 940,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 888,
											"end": 958,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 888,
											"end": 958,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 954,
											"end": 955,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 951,
											"end": 952,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 944,
											"end": 956,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 888,
											"end": 958,
											"name": "tag",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 888,
											"end": 958,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 791,
											"end": 964,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 791,
											"end": 964,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 791,
											"end": 964,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 791,
											"end": 964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 969,
											"end": 1269,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 969,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1037,
											"end": 1043,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1100,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1086,
											"end": 1095,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1084,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1073,
											"end": 1096,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1069,
											"end": 1101,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1066,
											"end": 1118,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1066,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 1066,
											"end": 1118,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1114,
											"end": 1115,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1111,
											"end": 1112,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1066,
											"end": 1118,
											"name": "tag",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 1066,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1137,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 1156,
											"end": 1165,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1137,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 1137,
											"end": 1166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1137,
											"end": 1166,
											"name": "tag",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 1137,
											"end": 1166,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1127,
											"end": 1166,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1235,
											"end": 1237,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1220,
											"end": 1238,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1220,
											"end": 1238,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1220,
											"end": 1238,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1220,
											"end": 1238,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1239,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1239,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 969,
											"end": 1269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1466,
											"end": 1692,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 1466,
											"end": 1692,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1525,
											"end": 1531,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1578,
											"end": 1580,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1566,
											"end": 1575,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1557,
											"end": 1564,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1553,
											"end": 1576,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1549,
											"end": 1581,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1546,
											"end": 1598,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1546,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 1546,
											"end": 1598,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1594,
											"end": 1595,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1591,
											"end": 1592,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1596,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1546,
											"end": 1598,
											"name": "tag",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 1546,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1639,
											"end": 1662,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1639,
											"end": 1662,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1466,
											"end": 1692,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1466,
											"end": 1692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1879,
											"end": 2253,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 1879,
											"end": 2253,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1956,
											"end": 1962,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1964,
											"end": 1970,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1972,
											"end": 1978,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2027,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2013,
											"end": 2022,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2004,
											"end": 2011,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2000,
											"end": 2023,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1996,
											"end": 2028,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2045,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2045,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 1993,
											"end": 2045,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2041,
											"end": 2042,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2038,
											"end": 2039,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2031,
											"end": 2043,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2045,
											"name": "tag",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 1993,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2064,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 2083,
											"end": 2092,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2064,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 2064,
											"end": 2093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2064,
											"end": 2093,
											"name": "tag",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 2064,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2054,
											"end": 2093,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2054,
											"end": 2093,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2112,
											"end": 2150,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 2146,
											"end": 2148,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2135,
											"end": 2144,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2131,
											"end": 2149,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2112,
											"end": 2150,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 2112,
											"end": 2150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2112,
											"end": 2150,
											"name": "tag",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 2112,
											"end": 2150,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1879,
											"end": 2253,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1879,
											"end": 2253,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 2102,
											"end": 2150,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2102,
											"end": 2150,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2219,
											"end": 2221,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2204,
											"end": 2222,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2204,
											"end": 2222,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2204,
											"end": 2222,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2204,
											"end": 2222,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2191,
											"end": 2223,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2191,
											"end": 2223,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1879,
											"end": 2253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2655,
											"end": 2841,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 2655,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2714,
											"end": 2720,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2767,
											"end": 2769,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2755,
											"end": 2764,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2746,
											"end": 2753,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2742,
											"end": 2765,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2738,
											"end": 2770,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2735,
											"end": 2787,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2735,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 2735,
											"end": 2787,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2783,
											"end": 2784,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2781,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2773,
											"end": 2785,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2735,
											"end": 2787,
											"name": "tag",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 2735,
											"end": 2787,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2835,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 2825,
											"end": 2834,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2835,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 2806,
											"end": 2835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2846,
											"end": 3192,
											"name": "tag",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 2846,
											"end": 3192,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2914,
											"end": 2920,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2922,
											"end": 2928,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2975,
											"end": 2977,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2963,
											"end": 2972,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2954,
											"end": 2961,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2950,
											"end": 2973,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2946,
											"end": 2978,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2943,
											"end": 2995,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2943,
											"end": 2995,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 2943,
											"end": 2995,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2991,
											"end": 2992,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2988,
											"end": 2989,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2981,
											"end": 2993,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2943,
											"end": 2995,
											"name": "tag",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 2943,
											"end": 2995,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3036,
											"end": 3059,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3036,
											"end": 3059,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3036,
											"end": 3059,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3156,
											"end": 3158,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3141,
											"end": 3159,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3141,
											"end": 3159,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3141,
											"end": 3159,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3128,
											"end": 3160,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3128,
											"end": 3160,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2846,
											"end": 3192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3197,
											"end": 3457,
											"name": "tag",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 3197,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3265,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3273,
											"end": 3279,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3326,
											"end": 3328,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3314,
											"end": 3323,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3305,
											"end": 3312,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3301,
											"end": 3324,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3297,
											"end": 3329,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3294,
											"end": 3346,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3294,
											"end": 3346,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 3294,
											"end": 3346,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3342,
											"end": 3343,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3339,
											"end": 3340,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3332,
											"end": 3344,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3294,
											"end": 3346,
											"name": "tag",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 3294,
											"end": 3346,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3365,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 3384,
											"end": 3393,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3365,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 3365,
											"end": 3394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3365,
											"end": 3394,
											"name": "tag",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 3365,
											"end": 3394,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3355,
											"end": 3394,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3355,
											"end": 3394,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3413,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 3447,
											"end": 3449,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3436,
											"end": 3445,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3432,
											"end": 3450,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3413,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 3413,
											"end": 3451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3413,
											"end": 3451,
											"name": "tag",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 3413,
											"end": 3451,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3197,
											"end": 3457,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3197,
											"end": 3457,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3197,
											"end": 3457,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3197,
											"end": 3457,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3197,
											"end": 3457,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3197,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3842,
											"name": "tag",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 3462,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3541,
											"end": 3542,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3537,
											"end": 3549,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3537,
											"end": 3549,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3537,
											"end": 3549,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 3537,
											"end": 3549,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3584,
											"end": 3596,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3584,
											"end": 3596,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3584,
											"end": 3596,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3605,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 3605,
											"end": 3666,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3659,
											"end": 3663,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3647,
											"end": 3664,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3664,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3664,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3605,
											"end": 3666,
											"name": "tag",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 3605,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3712,
											"end": 3714,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3704,
											"end": 3710,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3701,
											"end": 3715,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3681,
											"end": 3699,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3678,
											"end": 3716,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3675,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 3675,
											"end": 3836,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3758,
											"end": 3768,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 3753,
											"end": 3756,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 3749,
											"end": 3769,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 3746,
											"end": 3747,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3739,
											"end": 3770,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3793,
											"end": 3797,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 3790,
											"end": 3791,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3783,
											"end": 3798,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3821,
											"end": 3825,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3818,
											"end": 3819,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3811,
											"end": 3826,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3675,
											"end": 3836,
											"name": "tag",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 3675,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3675,
											"end": 3836,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3842,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3842,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3842,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3847,
											"end": 3974,
											"name": "tag",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 3847,
											"end": 3974,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 3918,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 3903,
											"end": 3906,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 3899,
											"end": 3919,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 3896,
											"end": 3897,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3889,
											"end": 3920,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3939,
											"end": 3943,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 3936,
											"end": 3937,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3929,
											"end": 3944,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3963,
											"end": 3967,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3960,
											"end": 3961,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3953,
											"end": 3968,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3979,
											"end": 4147,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 3979,
											"end": 4147,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4052,
											"end": 4061,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4052,
											"end": 4061,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4052,
											"end": 4061,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4083,
											"end": 4092,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4083,
											"end": 4092,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4100,
											"end": 4115,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4100,
											"end": 4115,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4100,
											"end": 4115,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 4094,
											"end": 4116,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4094,
											"end": 4116,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 4080,
											"end": 4117,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 4070,
											"end": 4141,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 4070,
											"end": 4141,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4121,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 4121,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 4121,
											"end": 4139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4152,
											"end": 4369,
											"name": "tag",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 4152,
											"end": 4369,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4192,
											"end": 4193,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4218,
											"end": 4219,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4208,
											"end": 4340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 4208,
											"end": 4340,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4262,
											"end": 4272,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 4257,
											"end": 4260,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 4253,
											"end": 4273,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 4250,
											"end": 4251,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4243,
											"end": 4274,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4297,
											"end": 4301,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 4294,
											"end": 4295,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4287,
											"end": 4302,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4325,
											"end": 4329,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4322,
											"end": 4323,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4315,
											"end": 4330,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4208,
											"end": 4340,
											"name": "tag",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 4208,
											"end": 4340,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4354,
											"end": 4363,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 4354,
											"end": 4363,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4152,
											"end": 4369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4374,
											"end": 4499,
											"name": "tag",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 4374,
											"end": 4499,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4439,
											"end": 4448,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4439,
											"end": 4448,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4439,
											"end": 4448,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4460,
											"end": 4470,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4460,
											"end": 4470,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4460,
											"end": 4470,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4457,
											"end": 4493,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4457,
											"end": 4493,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 4457,
											"end": 4493,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4473,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 4473,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 4473,
											"end": 4491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5560,
											"end": 5688,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 5560,
											"end": 5688,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5627,
											"end": 5636,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5627,
											"end": 5636,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5627,
											"end": 5636,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5648,
											"end": 5659,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5648,
											"end": 5659,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5648,
											"end": 5659,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5645,
											"end": 5682,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5645,
											"end": 5682,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 5645,
											"end": 5682,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 5662,
											"end": 5680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"contracts/Cardeiro_4.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"executeHalving()": "ed299016",
							"getExpectedBurn(uint256)": "102b67ab",
							"halvingInterval()": "6a47aa06",
							"halvingRate()": "7e6335f4",
							"isHalvingDue()": "768a4173",
							"lastHalvingTime()": "8cbb6df7",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"treasury()": "61d027b3",
							"updateHalvingParams(uint256,uint256)": "bbb0b1a6",
							"updateTreasury(address)": "7f51bb1f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_halvingInterval\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_halvingRate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"burnedAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Halving\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"executeHalving\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"getExpectedBurn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"halvingInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"halvingRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isHalvingDue\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastHalvingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_halvingInterval\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_halvingRate\",\"type\":\"uint256\"}],\"name\":\"updateHalvingParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"updateTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Cardeiro_4.sol\":\"Cardeiro\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"contracts/Cardeiro_4.sol\":{\"keccak256\":\"0xe790ccebc5eeda74734f9d6dd69703f70b07f5cec583871bd3cad23ed5e65ab9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83eaec66822fb8e7ad327dab13d6dc25cec20e2ff0374f74b181f12846d5e8ba\",\"dweb:/ipfs/QmXRAEZQwGjv2EK5b6Z1xR67zS5qb6uGkVCaBk1YifbebM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "contracts/Cardeiro_4.sol:Cardeiro",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "contracts/Cardeiro_4.sol:Cardeiro",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "contracts/Cardeiro_4.sol:Cardeiro",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "contracts/Cardeiro_4.sol:Cardeiro",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/Cardeiro_4.sol:Cardeiro",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/Cardeiro_4.sol:Cardeiro",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 990,
								"contract": "contracts/Cardeiro_4.sol:Cardeiro",
								"label": "_status",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1068,
								"contract": "contracts/Cardeiro_4.sol:Cardeiro",
								"label": "treasury",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 1070,
								"contract": "contracts/Cardeiro_4.sol:Cardeiro",
								"label": "halvingInterval",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1072,
								"contract": "contracts/Cardeiro_4.sol:Cardeiro",
								"label": "lastHalvingTime",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1074,
								"contract": "contracts/Cardeiro_4.sol:Cardeiro",
								"label": "halvingRate",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							979
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 980,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 979,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 979,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								979
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 961,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							979
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							949
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 950,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 949,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 980,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 979,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 979,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 949,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								949,
								877,
								979
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1657:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1667:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1675:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1690:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1700:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1613:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1634:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:2"
									},
									"scope": 799,
									"src": "1601:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										936
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1839:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1856:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1849:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1824:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:2"
									},
									"scope": 799,
									"src": "1779:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										942
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2043:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2060:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2053:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2028:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:2"
									},
									"scope": 799,
									"src": "1981:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										948
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2763:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2773:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2756:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:2"
									},
									"scope": 799,
									"src": "2707:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2910:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2927:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2920:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2901:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:2"
									},
									"scope": 799,
									"src": "2849:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3078:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3095:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3105:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3088:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3023:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:2"
									},
									"scope": 799,
									"src": "3004:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3390:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3400:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "3416:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3448:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3455:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3459:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3438:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3475:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3333:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3345:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3384:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:2"
									},
									"scope": 799,
									"src": "3315:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3640:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3657:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3669:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3676:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3650:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3570:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3585:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3631:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:2"
									},
									"scope": 799,
									"src": "3551:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4077:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4087:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "4103:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4134:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4141:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4150:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4125:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4166:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4015:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4071:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:2"
									},
									"scope": 799,
									"src": "3998:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4869:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4879:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "4897:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4935:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4941:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4950:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4919:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4976:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4982:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4986:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4966:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5002:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4798:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4812:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4824:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4863:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:2"
									},
									"scope": 799,
									"src": "4776:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5462:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5476:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5472:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5496:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5517:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5510:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5571:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5567:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5589:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5610:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5603:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5670:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5676:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5680:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5662:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5412:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5426:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5438:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:2"
									},
									"scope": 799,
									"src": "5393:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6083:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6097:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6271:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6285:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6307:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6317:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6340:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6354:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6336:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6361:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6411:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6417:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6430:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6386:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6571:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6581:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6589:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6603:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6093:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6117:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6233:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6249:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6647:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6862:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7021:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7031:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7038:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6643:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6665:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6810:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6826:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7092:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7098:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7102:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7083:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7078:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6025:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6039:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6051:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:2"
									},
									"scope": 799,
									"src": "6008:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7514:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7528:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7524:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7551:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7572:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7565:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7644:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7653:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7624:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7473:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7490:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:2"
									},
									"scope": 799,
									"src": "7458:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8040:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8054:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8050:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8077:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8098:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8091:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8156:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8177:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8148:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7999:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8016:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:2"
									},
									"scope": 799,
									"src": "7984:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8800:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8819:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8826:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8835:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8810:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8744:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8759:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8776:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:2"
									},
									"scope": 799,
									"src": "8726:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9799:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9813:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9809:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9834:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9855:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9848:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9911:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9907:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9934:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9955:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9948:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10006:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10018:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10025:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10036:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10055:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10051:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10066:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10094:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10101:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10110:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10085:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10080:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9719:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9734:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9751:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9766:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:2"
									},
									"scope": 799,
									"src": "9701:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10504:387:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10514:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10551:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10541:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10580:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10604:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10604:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10599:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10599:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10613:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10599:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10576:309:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10618:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10636:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10655:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10636:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10632:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10662:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10714:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10723:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10741:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10687:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10687:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10680:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10775:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10812:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10819:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10828:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10847:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10828:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10854:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10803:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10803:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10803:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10440:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10455:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10472:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:2"
									},
									"scope": 799,
									"src": "10415:476:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9787:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10789:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 877,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 877,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 877,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 877,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 877,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 877,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
					"exportedSymbols": {
						"Context": [
							979
						],
						"ERC20": [
							799
						],
						"ERC20Burnable": [
							923
						]
					},
					"id": 924,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "124:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 924,
							"sourceUnit": 800,
							"src": "150:35:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 799,
										"src": "158:5:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../../utils/Context.sol",
							"id": 883,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 924,
							"sourceUnit": 980,
							"src": "186:51:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 882,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 979,
										"src": "194:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 885,
										"name": "Context",
										"nameLocations": [
											"483:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 979,
										"src": "483:7:4"
									},
									"id": 886,
									"nodeType": "InheritanceSpecifier",
									"src": "483:7:4"
								},
								{
									"baseName": {
										"id": 887,
										"name": "ERC20",
										"nameLocations": [
											"492:5:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "492:5:4"
									},
									"id": 888,
									"nodeType": "InheritanceSpecifier",
									"src": "492:5:4"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 884,
								"nodeType": "StructuredDocumentation",
								"src": "239:208:4",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": true,
							"id": 923,
							"linearizedBaseContracts": [
								923,
								799,
								189,
								949,
								877,
								979
							],
							"name": "ERC20Burnable",
							"nameLocation": "466:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 900,
										"nodeType": "Block",
										"src": "662:43:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 895,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "678:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "678:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 897,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "692:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 894,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "672:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "672:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 899,
												"nodeType": "ExpressionStatement",
												"src": "672:26:4"
											}
										]
									},
									"documentation": {
										"id": 889,
										"nodeType": "StructuredDocumentation",
										"src": "504:109:4",
										"text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 901,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "627:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "640:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "632:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "631:15:4"
									},
									"returnParameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "662:0:4"
									},
									"scope": 923,
									"src": "618:87:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 921,
										"nodeType": "Block",
										"src": "1086:93:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 910,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "1112:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 911,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "1121:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1121:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 913,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "1135:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 909,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "1096:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1096:45:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 915,
												"nodeType": "ExpressionStatement",
												"src": "1096:45:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 917,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "1157:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 918,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "1166:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 916,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "1151:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1151:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 920,
												"nodeType": "ExpressionStatement",
												"src": "1151:21:4"
											}
										]
									},
									"documentation": {
										"id": 902,
										"nodeType": "StructuredDocumentation",
										"src": "711:305:4",
										"text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
									},
									"functionSelector": "79cc6790",
									"id": 922,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "1030:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1047:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "1039:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1039:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1064:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "1056:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1056:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:32:4"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1086:0:4"
									},
									"scope": 923,
									"src": "1021:158:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 924,
							"src": "448:733:4",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "124:1058:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							949
						]
					},
					"id": 950,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 925,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 927,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 950,
							"sourceUnit": 878,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 926,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 929,
										"name": "IERC20",
										"nameLocations": [
											"306:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:5"
									},
									"id": 930,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 928,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:5",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 949,
							"linearizedBaseContracts": [
								949,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 936,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:5"
									},
									"returnParameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "417:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 933,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:5"
									},
									"scope": 949,
									"src": "378:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 937,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 942,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:5"
									},
									"returnParameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "540:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 939,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:5"
									},
									"scope": 949,
									"src": "499:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 943,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 948,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:5"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "674:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 945,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:5"
									},
									"scope": 949,
									"src": "631:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 950,
							"src": "278:405:5",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							979
						]
					},
					"id": 980,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 951,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 952,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 979,
							"linearizedBaseContracts": [
								979
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 960,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 957,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 956,
												"id": 959,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 961,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 979,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 969,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 966,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 965,
												"id": 968,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 970,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 963,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 979,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 977,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 974,
												"id": 976,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 978,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 979,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 980,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							1048
						]
					},
					"id": 1049,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 981,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 982,
								"nodeType": "StructuredDocumentation",
								"src": "135:894:7",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 1048,
							"linearizedBaseContracts": [
								1048
							],
							"name": "ReentrancyGuard",
							"nameLocation": "1048:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 985,
									"mutability": "constant",
									"name": "NOT_ENTERED",
									"nameLocation": "1843:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 1048,
									"src": "1818:40:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 983,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1818:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 984,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1857:1:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 988,
									"mutability": "constant",
									"name": "ENTERED",
									"nameLocation": "1889:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1048,
									"src": "1864:36:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 986,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1864:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 987,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1899:1:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 990,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1923:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1048,
									"src": "1907:23:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 989,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1907:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 991,
										"nodeType": "StructuredDocumentation",
										"src": "1937:52:7",
										"text": " @dev Unauthorized reentrant call."
									},
									"errorSelector": "3ee5aeb5",
									"id": 993,
									"name": "ReentrancyGuardReentrantCall",
									"nameLocation": "2000:28:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2028:2:7"
									},
									"src": "1994:37:7"
								},
								{
									"body": {
										"id": 1000,
										"nodeType": "Block",
										"src": "2051:38:7",
										"statements": [
											{
												"expression": {
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 996,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 990,
														"src": "2061:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 997,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "2071:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2061:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 999,
												"nodeType": "ExpressionStatement",
												"src": "2061:21:7"
											}
										]
									},
									"id": 1001,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2048:2:7"
									},
									"returnParameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2051:0:7"
									},
									"scope": 1048,
									"src": "2037:52:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1011,
										"nodeType": "Block",
										"src": "2490:79:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1004,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1028,
														"src": "2500:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2500:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1006,
												"nodeType": "ExpressionStatement",
												"src": "2500:21:7"
											},
											{
												"id": 1007,
												"nodeType": "PlaceholderStatement",
												"src": "2531:1:7"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1008,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1036,
														"src": "2542:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2542:20:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1010,
												"nodeType": "ExpressionStatement",
												"src": "2542:20:7"
											}
										]
									},
									"documentation": {
										"id": 1002,
										"nodeType": "StructuredDocumentation",
										"src": "2095:366:7",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 1012,
									"name": "nonReentrant",
									"nameLocation": "2475:12:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2487:2:7"
									},
									"src": "2466:103:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1027,
										"nodeType": "Block",
										"src": "2614:268:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1015,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 990,
														"src": "2702:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1016,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "2713:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2702:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1022,
												"nodeType": "IfStatement",
												"src": "2698:86:7",
												"trueBody": {
													"id": 1021,
													"nodeType": "Block",
													"src": "2722:62:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1018,
																	"name": "ReentrancyGuardReentrantCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 993,
																	"src": "2743:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1019,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2743:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1020,
															"nodeType": "RevertStatement",
															"src": "2736:37:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1023,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 990,
														"src": "2858:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1024,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "2868:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2858:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1026,
												"nodeType": "ExpressionStatement",
												"src": "2858:17:7"
											}
										]
									},
									"id": 1028,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2584:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2603:2:7"
									},
									"returnParameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2614:0:7"
									},
									"scope": 1048,
									"src": "2575:307:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1035,
										"nodeType": "Block",
										"src": "2926:170:7",
										"statements": [
											{
												"expression": {
													"id": 1033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1031,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 990,
														"src": "3068:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1032,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "3078:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3068:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1034,
												"nodeType": "ExpressionStatement",
												"src": "3068:21:7"
											}
										]
									},
									"id": 1036,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2897:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2915:2:7"
									},
									"returnParameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2926:0:7"
									},
									"scope": 1048,
									"src": "2888:208:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1046,
										"nodeType": "Block",
										"src": "3339:42:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1042,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 990,
														"src": "3356:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1043,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "3367:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3356:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1041,
												"id": 1045,
												"nodeType": "Return",
												"src": "3349:25:7"
											}
										]
									},
									"documentation": {
										"id": 1037,
										"nodeType": "StructuredDocumentation",
										"src": "3102:168:7",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 1047,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3284:23:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3307:2:7"
									},
									"returnParameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "3333:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1039,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3333:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:6:7"
									},
									"scope": 1048,
									"src": "3275:106:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1049,
							"src": "1030:2353:7",
							"usedErrors": [
								993
							],
							"usedEvents": []
						}
					],
					"src": "109:3275:7"
				},
				"id": 7
			},
			"contracts/Cardeiro_4.sol": {
				"ast": {
					"absolutePath": "contracts/Cardeiro_4.sol",
					"exportedSymbols": {
						"Cardeiro": [
							1369
						],
						"ERC20": [
							799
						],
						"ERC20Burnable": [
							923
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							1048
						]
					},
					"id": 1370,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1050,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1052,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1370,
							"sourceUnit": 800,
							"src": "58:68:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1051,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 799,
										"src": "66:5:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"id": 1054,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1370,
							"sourceUnit": 924,
							"src": "157:95:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1053,
										"name": "ERC20Burnable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 923,
										"src": "165:13:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1056,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1370,
							"sourceUnit": 148,
							"src": "351:67:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1055,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 147,
										"src": "359:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"id": 1058,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1370,
							"sourceUnit": 1049,
							"src": "479:82:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1057,
										"name": "ReentrancyGuard",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1048,
										"src": "487:15:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1059,
										"name": "ERC20",
										"nameLocations": [
											"584:5:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "584:5:8"
									},
									"id": 1060,
									"nodeType": "InheritanceSpecifier",
									"src": "584:5:8"
								},
								{
									"baseName": {
										"id": 1061,
										"name": "ERC20Burnable",
										"nameLocations": [
											"591:13:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 923,
										"src": "591:13:8"
									},
									"id": 1062,
									"nodeType": "InheritanceSpecifier",
									"src": "591:13:8"
								},
								{
									"baseName": {
										"id": 1063,
										"name": "Ownable",
										"nameLocations": [
											"606:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "606:7:8"
									},
									"id": 1064,
									"nodeType": "InheritanceSpecifier",
									"src": "606:7:8"
								},
								{
									"baseName": {
										"id": 1065,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"615:15:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1048,
										"src": "615:15:8"
									},
									"id": 1066,
									"nodeType": "InheritanceSpecifier",
									"src": "615:15:8"
								}
							],
							"canonicalName": "Cardeiro",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1369,
							"linearizedBaseContracts": [
								1369,
								1048,
								147,
								923,
								799,
								189,
								949,
								877,
								979
							],
							"name": "Cardeiro",
							"nameLocation": "572:8:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "61d027b3",
									"id": 1068,
									"mutability": "mutable",
									"name": "treasury",
									"nameLocation": "706:8:8",
									"nodeType": "VariableDeclaration",
									"scope": 1369,
									"src": "691:23:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1067,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "691:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6a47aa06",
									"id": 1070,
									"mutability": "mutable",
									"name": "halvingInterval",
									"nameLocation": "777:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 1369,
									"src": "762:30:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1069,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "762:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8cbb6df7",
									"id": 1072,
									"mutability": "mutable",
									"name": "lastHalvingTime",
									"nameLocation": "855:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 1369,
									"src": "840:30:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1071,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "840:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7e6335f4",
									"id": 1074,
									"mutability": "mutable",
									"name": "halvingRate",
									"nameLocation": "952:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 1369,
									"src": "937:26:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1073,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "937:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 1077,
									"mutability": "constant",
									"name": "MIN_HALVING_RATE",
									"nameLocation": "995:16:8",
									"nodeType": "VariableDeclaration",
									"scope": 1369,
									"src": "970:45:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1075,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "970:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35",
										"id": 1076,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1014:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5_by_1",
											"typeString": "int_const 5"
										},
										"value": "5"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1080,
									"mutability": "constant",
									"name": "MAX_HALVING_RATE",
									"nameLocation": "1053:16:8",
									"nodeType": "VariableDeclaration",
									"scope": 1369,
									"src": "1028:46:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1078,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1028:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1079,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1072:2:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1083,
									"mutability": "constant",
									"name": "DAYS_IN_YEAR",
									"nameLocation": "1113:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 1369,
									"src": "1088:43:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1081,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1088:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333635",
										"id": 1082,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1128:3:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_365_by_1",
											"typeString": "int_const 365"
										},
										"value": "365"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1086,
									"mutability": "constant",
									"name": "SECONDS_PER_DAY",
									"nameLocation": "1163:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 1369,
									"src": "1138:48:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1084,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1138:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3836343030",
										"id": 1085,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1181:5:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_86400_by_1",
											"typeString": "int_const 86400"
										},
										"value": "86400"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1094,
									"mutability": "constant",
									"name": "DEFAULT_HALVING_INTERVAL",
									"nameLocation": "1234:24:8",
									"nodeType": "VariableDeclaration",
									"scope": 1369,
									"src": "1209:88:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1087,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1209:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 1093,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1090,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1088,
														"name": "DAYS_IN_YEAR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1083,
														"src": "1262:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "32",
														"id": 1089,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1277:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "1262:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1091,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1261:18:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"id": 1092,
											"name": "SECONDS_PER_DAY",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1086,
											"src": "1282:15:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "1261:36:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1097,
									"mutability": "constant",
									"name": "SECURITY_MARGIN",
									"nameLocation": "1418:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 1369,
									"src": "1393:47:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1095,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1393:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31383030",
										"id": 1096,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1436:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1800_by_1",
											"typeString": "int_const 1800"
										},
										"value": "1800"
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "394823b0bcaf78cd8f5876a52c05dbab91512a05f5da2a31e239a11ab66d605f",
									"id": 1103,
									"name": "Halving",
									"nameLocation": "1498:7:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"indexed": false,
												"mutability": "mutable",
												"name": "burnedAmount",
												"nameLocation": "1514:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "1506:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1098,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1506:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1101,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "1536:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "1528:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1505:41:8"
									},
									"src": "1492:55:8"
								},
								{
									"body": {
										"id": 1113,
										"nodeType": "Block",
										"src": "1576:88:8",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1105,
														"name": "isHalvingDue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1196,
														"src": "1590:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1590:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1111,
												"nodeType": "IfStatement",
												"src": "1586:61:8",
												"trueBody": {
													"id": 1110,
													"nodeType": "Block",
													"src": "1606:41:8",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1107,
																	"name": "executeHalving",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1246,
																	"src": "1620:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1620:16:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1109,
															"nodeType": "ExpressionStatement",
															"src": "1620:16:8"
														}
													]
												}
											},
											{
												"id": 1112,
												"nodeType": "PlaceholderStatement",
												"src": "1656:1:8"
											}
										]
									},
									"id": 1114,
									"name": "autoHalving",
									"nameLocation": "1562:11:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1573:2:8"
									},
									"src": "1553:111:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1179,
										"nodeType": "Block",
										"src": "1860:448:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1134,
																"name": "_halvingRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1122,
																"src": "1878:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "313030",
																"id": 1135,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1894:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "1878:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "48616c76696e6720726174652063616e6e6f74206578636565642031303025",
															"id": 1137,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1899:33:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d53bdfa93bb7a76d4743ea30578e2dc0750b008d141205debceac8f0891300eb",
																"typeString": "literal_string \"Halving rate cannot exceed 100%\""
															},
															"value": "Halving rate cannot exceed 100%"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d53bdfa93bb7a76d4743ea30578e2dc0750b008d141205debceac8f0891300eb",
																"typeString": "literal_string \"Halving rate cannot exceed 100%\""
															}
														],
														"id": 1133,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1870:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1870:63:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1139,
												"nodeType": "ExpressionStatement",
												"src": "1870:63:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1141,
																"name": "_halvingInterval",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1120,
																"src": "1951:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1142,
																"name": "SECONDS_PER_DAY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1086,
																"src": "1971:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1951:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e74657276616c20746f6f2073686f7274",
															"id": 1144,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1988:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1a7d2fe61ea3b46cf063320d3f94ed24f16b3846a0bb57ef7d22b70acf607e4b",
																"typeString": "literal_string \"Interval too short\""
															},
															"value": "Interval too short"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1a7d2fe61ea3b46cf063320d3f94ed24f16b3846a0bb57ef7d22b70acf607e4b",
																"typeString": "literal_string \"Interval too short\""
															}
														],
														"id": 1140,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1943:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1943:66:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1146,
												"nodeType": "ExpressionStatement",
												"src": "1943:66:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1148,
																"name": "_halvingInterval",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1120,
																"src": "2027:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1151,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1149,
																	"name": "DEFAULT_HALVING_INTERVAL",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1094,
																	"src": "2047:24:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2074:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "2047:28:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2027:48:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e74657276616c20746f6f206c6f6e67",
															"id": 1153,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2077:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f632157a5b36b9e6a1b80a3c79c025445cf465bacf92b036da473b170c3d13d0",
																"typeString": "literal_string \"Interval too long\""
															},
															"value": "Interval too long"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f632157a5b36b9e6a1b80a3c79c025445cf465bacf92b036da473b170c3d13d0",
																"typeString": "literal_string \"Interval too long\""
															}
														],
														"id": 1147,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2019:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2019:78:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1155,
												"nodeType": "ExpressionStatement",
												"src": "2019:78:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1157,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2122:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1158,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2126:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2122:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1159,
															"name": "initialSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1116,
															"src": "2134:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1156,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "2116:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2116:32:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1161,
												"nodeType": "ExpressionStatement",
												"src": "2116:32:8"
											},
											{
												"expression": {
													"id": 1164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1162,
														"name": "treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1068,
														"src": "2158:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1163,
														"name": "_treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1118,
														"src": "2169:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2158:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1165,
												"nodeType": "ExpressionStatement",
												"src": "2158:20:8"
											},
											{
												"expression": {
													"id": 1168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1166,
														"name": "halvingInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1070,
														"src": "2188:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1167,
														"name": "_halvingInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "2206:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2188:34:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1169,
												"nodeType": "ExpressionStatement",
												"src": "2188:34:8"
											},
											{
												"expression": {
													"id": 1172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1170,
														"name": "halvingRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1074,
														"src": "2232:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1171,
														"name": "_halvingRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1122,
														"src": "2246:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2232:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1173,
												"nodeType": "ExpressionStatement",
												"src": "2232:26:8"
											},
											{
												"expression": {
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1174,
														"name": "lastHalvingTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "2268:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1175,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2286:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2292:9:8",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2286:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2268:33:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1178,
												"nodeType": "ExpressionStatement",
												"src": "2268:33:8"
											}
										]
									},
									"id": 1180,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "436172646569726f",
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1821:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_971e503cb7b8e2667d7b5b326ae53a4aef8f0d8bcc5aa0780d3a661dca88746b",
														"typeString": "literal_string \"Cardeiro\""
													},
													"value": "Cardeiro"
												},
												{
													"hexValue": "434454",
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1833:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_434eb163d5d83d0f1ffd9839d5b9c74759647f334d007a0d4510797d38b7e519",
														"typeString": "literal_string \"CDT\""
													},
													"value": "CDT"
												}
											],
											"id": 1127,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1124,
												"name": "ERC20",
												"nameLocations": [
													"1815:5:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "1815:5:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1815:24:8"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1129,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1848:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1852:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1848:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1131,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1128,
												"name": "Ownable",
												"nameLocations": [
													"1840:7:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1840:7:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1840:19:8"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "initialSupply",
												"nameLocation": "1703:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "1695:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "_treasury",
												"nameLocation": "1735:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "1727:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1727:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "_halvingInterval",
												"nameLocation": "1762:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "1754:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1754:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "_halvingRate",
												"nameLocation": "1796:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "1788:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1788:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1685:129:8"
									},
									"returnParameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1860:0:8"
									},
									"scope": 1369,
									"src": "1674:634:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1195,
										"nodeType": "Block",
										"src": "2408:96:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1185,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2425:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1186,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2431:9:8",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2425:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1191,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1187,
																		"name": "lastHalvingTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1072,
																		"src": "2445:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1188,
																		"name": "halvingInterval",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1070,
																		"src": "2463:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2445:33:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1190,
																	"name": "SECURITY_MARGIN",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1097,
																	"src": "2481:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2445:51:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1192,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2444:53:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2425:72:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1184,
												"id": 1194,
												"nodeType": "Return",
												"src": "2418:79:8"
											}
										]
									},
									"functionSelector": "768a4173",
									"id": 1196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isHalvingDue",
									"nameLocation": "2366:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2378:2:8"
									},
									"returnParameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "2402:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1182,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2402:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2401:6:8"
									},
									"scope": 1369,
									"src": "2357:147:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1245,
										"nodeType": "Block",
										"src": "2622:555:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1202,
																"name": "isHalvingDue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1196,
																"src": "2640:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 1203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2640:14:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "48616c76696e6720696e74657276616c206e6f742072656163686564",
															"id": 1204,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_78c4f9f3f3ed4ed6c78e4a6a7613e359adf3a3d4265b99c6653232671bf676f8",
																"typeString": "literal_string \"Halving interval not reached\""
															},
															"value": "Halving interval not reached"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_78c4f9f3f3ed4ed6c78e4a6a7613e359adf3a3d4265b99c6653232671bf676f8",
																"typeString": "literal_string \"Halving interval not reached\""
															}
														],
														"id": 1201,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2632:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2632:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1206,
												"nodeType": "ExpressionStatement",
												"src": "2632:55:8"
											},
											{
												"assignments": [
													1208
												],
												"declarations": [
													{
														"constant": false,
														"id": 1208,
														"mutability": "mutable",
														"name": "treasuryBalance",
														"nameLocation": "2714:15:8",
														"nodeType": "VariableDeclaration",
														"scope": 1245,
														"src": "2706:23:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1207,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2706:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1212,
												"initialValue": {
													"arguments": [
														{
															"id": 1210,
															"name": "treasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1068,
															"src": "2742:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1209,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "2732:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2732:19:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2706:45:8"
											},
											{
												"assignments": [
													1214
												],
												"declarations": [
													{
														"constant": false,
														"id": 1214,
														"mutability": "mutable",
														"name": "burnAmount",
														"nameLocation": "2769:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1245,
														"src": "2761:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1213,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2761:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1221,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1217,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1215,
																	"name": "treasuryBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1208,
																	"src": "2783:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1216,
																	"name": "halvingRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1074,
																	"src": "2801:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2783:29:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1218,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2782:31:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1219,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2816:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "2782:37:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2761:58:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1222,
														"name": "burnAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1214,
														"src": "2842:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1223,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2855:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2842:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1244,
												"nodeType": "IfStatement",
												"src": "2838:333:8",
												"trueBody": {
													"id": 1243,
													"nodeType": "Block",
													"src": "2858:313:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1226,
																		"name": "treasury",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1068,
																		"src": "2919:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1227,
																		"name": "burnAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1214,
																		"src": "2929:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1225,
																	"name": "_burn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "2913:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2913:27:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1229,
															"nodeType": "ExpressionStatement",
															"src": "2913:27:8"
														},
														{
															"expression": {
																"id": 1235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1230,
																	"name": "lastHalvingTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1072,
																	"src": "3007:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1231,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "3025:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1232,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3031:9:8",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "3025:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1233,
																		"name": "SECURITY_MARGIN",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1097,
																		"src": "3043:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3025:33:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3007:51:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1236,
															"nodeType": "ExpressionStatement",
															"src": "3007:51:8"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1238,
																		"name": "burnAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1214,
																		"src": "3132:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1239,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "3144:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1240,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3150:9:8",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "3144:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1237,
																	"name": "Halving",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1103,
																	"src": "3124:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256)"
																	}
																},
																"id": 1241,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3124:36:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1242,
															"nodeType": "EmitStatement",
															"src": "3119:41:8"
														}
													]
												}
											}
										]
									},
									"functionSelector": "ed299016",
									"id": 1246,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1199,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1198,
												"name": "nonReentrant",
												"nameLocations": [
													"2609:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1012,
												"src": "2609:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2609:12:8"
										}
									],
									"name": "executeHalving",
									"nameLocation": "2585:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2599:2:8"
									},
									"returnParameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2622:0:8"
									},
									"scope": 1369,
									"src": "2576:601:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1277,
										"nodeType": "Block",
										"src": "3339:238:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1256,
																"name": "_halvingRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1250,
																"src": "3357:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1257,
																"name": "MIN_HALVING_RATE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1077,
																"src": "3373:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3357:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "48616c76696e67207261746520746f6f206c6f77",
															"id": 1259,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3391:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d9685d7b83f94a8526cd378518e03ae5cdd64f3bc22b0ae59b808c415888bde8",
																"typeString": "literal_string \"Halving rate too low\""
															},
															"value": "Halving rate too low"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d9685d7b83f94a8526cd378518e03ae5cdd64f3bc22b0ae59b808c415888bde8",
																"typeString": "literal_string \"Halving rate too low\""
															}
														],
														"id": 1255,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3349:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3349:65:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1261,
												"nodeType": "ExpressionStatement",
												"src": "3349:65:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1263,
																"name": "_halvingRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1250,
																"src": "3432:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1264,
																"name": "MAX_HALVING_RATE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1080,
																"src": "3448:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3432:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "48616c76696e67207261746520746f6f2068696768",
															"id": 1266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3466:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2e96fdf67c9a0dad3ac1d60e5f88d1dea6af5eff3e2029d19a787ff8fa105135",
																"typeString": "literal_string \"Halving rate too high\""
															},
															"value": "Halving rate too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2e96fdf67c9a0dad3ac1d60e5f88d1dea6af5eff3e2029d19a787ff8fa105135",
																"typeString": "literal_string \"Halving rate too high\""
															}
														],
														"id": 1262,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3424:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3424:66:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1268,
												"nodeType": "ExpressionStatement",
												"src": "3424:66:8"
											},
											{
												"expression": {
													"id": 1271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1269,
														"name": "halvingInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1070,
														"src": "3500:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1270,
														"name": "_halvingInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1248,
														"src": "3518:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3500:34:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1272,
												"nodeType": "ExpressionStatement",
												"src": "3500:34:8"
											},
											{
												"expression": {
													"id": 1275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1273,
														"name": "halvingRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1074,
														"src": "3544:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1274,
														"name": "_halvingRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1250,
														"src": "3558:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3544:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1276,
												"nodeType": "ExpressionStatement",
												"src": "3544:26:8"
											}
										]
									},
									"functionSelector": "bbb0b1a6",
									"id": 1278,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1253,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1252,
												"name": "onlyOwner",
												"nameLocations": [
													"3329:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3329:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3329:9:8"
										}
									],
									"name": "updateHalvingParams",
									"nameLocation": "3254:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "_halvingInterval",
												"nameLocation": "3282:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "3274:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3274:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "_halvingRate",
												"nameLocation": "3308:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "3300:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3300:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3273:48:8"
									},
									"returnParameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:8"
									},
									"scope": 1369,
									"src": "3245:332:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1289,
										"nodeType": "Block",
										"src": "3703:37:8",
										"statements": [
											{
												"expression": {
													"id": 1287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1285,
														"name": "treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1068,
														"src": "3713:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1286,
														"name": "_treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1280,
														"src": "3724:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3713:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1288,
												"nodeType": "ExpressionStatement",
												"src": "3713:20:8"
											}
										]
									},
									"functionSelector": "7f51bb1f",
									"id": 1290,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1283,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1282,
												"name": "onlyOwner",
												"nameLocations": [
													"3693:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3693:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3693:9:8"
										}
									],
									"name": "updateTreasury",
									"nameLocation": "3652:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "_treasury",
												"nameLocation": "3675:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "3667:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3667:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3666:19:8"
									},
									"returnParameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3703:0:8"
									},
									"scope": 1369,
									"src": "3643:97:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1310,
										"nodeType": "Block",
										"src": "3815:109:8",
										"statements": [
											{
												"assignments": [
													1298
												],
												"declarations": [
													{
														"constant": false,
														"id": 1298,
														"mutability": "mutable",
														"name": "treasuryBalance",
														"nameLocation": "3833:15:8",
														"nodeType": "VariableDeclaration",
														"scope": 1310,
														"src": "3825:23:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1297,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3825:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1302,
												"initialValue": {
													"arguments": [
														{
															"id": 1300,
															"name": "treasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1068,
															"src": "3861:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1299,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "3851:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3851:19:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3825:45:8"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1303,
																	"name": "treasuryBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1298,
																	"src": "3888:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1304,
																	"name": "rate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1292,
																	"src": "3906:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3888:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1306,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3887:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1307,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3914:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "3887:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1296,
												"id": 1309,
												"nodeType": "Return",
												"src": "3880:37:8"
											}
										]
									},
									"functionSelector": "102b67ab",
									"id": 1311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getExpectedBurn",
									"nameLocation": "3755:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "rate",
												"nameLocation": "3779:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "3771:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3771:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3770:14:8"
									},
									"returnParameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "3806:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3806:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3805:9:8"
									},
									"scope": 1369,
									"src": "3746:178:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										409
									],
									"body": {
										"id": 1329,
										"nodeType": "Block",
										"src": "4077:50:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1325,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1313,
															"src": "4109:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1326,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1315,
															"src": "4113:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1323,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "4094:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_Cardeiro_$1369_$",
																"typeString": "type(contract super Cardeiro)"
															}
														},
														"id": 1324,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4100:8:8",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 409,
														"src": "4094:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 1327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4094:26:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1322,
												"id": 1328,
												"nodeType": "Return",
												"src": "4087:33:8"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1330,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1319,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1318,
												"name": "autoHalving",
												"nameLocations": [
													"4036:11:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1114,
												"src": "4036:11:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "4036:11:8"
										}
									],
									"name": "transfer",
									"nameLocation": "3939:8:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1317,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4018:8:8"
									},
									"parameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3956:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "3948:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3948:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3968:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "3960:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3960:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3947:28:8"
									},
									"returnParameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "4066:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1320,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4066:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4065:6:8"
									},
									"scope": 1369,
									"src": "3930:197:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										482
									],
									"body": {
										"id": 1351,
										"nodeType": "Block",
										"src": "4292:60:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1346,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1332,
															"src": "4328:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1347,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1334,
															"src": "4334:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1348,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1336,
															"src": "4338:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1344,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "4309:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_Cardeiro_$1369_$",
																"typeString": "type(contract super Cardeiro)"
															}
														},
														"id": 1345,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4315:12:8",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 482,
														"src": "4309:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 1349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4309:36:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1343,
												"id": 1350,
												"nodeType": "Return",
												"src": "4302:43:8"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 1352,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1340,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1339,
												"name": "autoHalving",
												"nameLocations": [
													"4253:11:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1114,
												"src": "4253:11:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "4253:11:8"
										}
									],
									"name": "transferFrom",
									"nameLocation": "4142:12:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1338,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4236:8:8"
									},
									"parameters": {
										"id": 1337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4163:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "4155:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4155:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4177:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "4169:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4169:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4189:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "4181:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4181:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4154:42:8"
									},
									"returnParameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "4282:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1341,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4282:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4281:6:8"
									},
									"scope": 1369,
									"src": "4133:219:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1359,
										"nodeType": "Block",
										"src": "4386:52:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "546f6b656e20646f6573206e6f742061636365707420455448",
															"id": 1356,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4403:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d6ef7acea0261efd64d5d7c6dec050eec6b82a90a97a4ff7324326876f46a190",
																"typeString": "literal_string \"Token does not accept ETH\""
															},
															"value": "Token does not accept ETH"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_d6ef7acea0261efd64d5d7c6dec050eec6b82a90a97a4ff7324326876f46a190",
																"typeString": "literal_string \"Token does not accept ETH\""
															}
														],
														"id": 1355,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "4396:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 1357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4396:35:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1358,
												"nodeType": "ExpressionStatement",
												"src": "4396:35:8"
											}
										]
									},
									"id": 1360,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4366:2:8"
									},
									"returnParameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4386:0:8"
									},
									"scope": 1369,
									"src": "4358:80:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1367,
										"nodeType": "Block",
										"src": "4475:52:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "546f6b656e20646f6573206e6f742061636365707420455448",
															"id": 1364,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4492:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d6ef7acea0261efd64d5d7c6dec050eec6b82a90a97a4ff7324326876f46a190",
																"typeString": "literal_string \"Token does not accept ETH\""
															},
															"value": "Token does not accept ETH"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_d6ef7acea0261efd64d5d7c6dec050eec6b82a90a97a4ff7324326876f46a190",
																"typeString": "literal_string \"Token does not accept ETH\""
															}
														],
														"id": 1363,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "4485:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 1365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4485:35:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1366,
												"nodeType": "ExpressionStatement",
												"src": "4485:35:8"
											}
										]
									},
									"id": 1368,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4455:2:8"
									},
									"returnParameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4475:0:8"
									},
									"scope": 1369,
									"src": "4448:79:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1370,
							"src": "563:3967:8",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188,
								993
							],
							"usedEvents": [
								24,
								811,
								820,
								1103
							]
						}
					],
					"src": "32:4498:8"
				},
				"id": 8
			}
		}
	}
}